{
  "errors": [],
  "warnings": [
    "(undefined) asset size limit: The following asset(s) exceed the recommended size limit (200 kB).\nThis can impact web performance.\nAssets: \n  build/globals/senna.js (310 kB)",
    "(undefined) webpack performance recommendations: \nYou can limit the size of your bundles by using import() or require.ensure to lazy load some parts of your application.\nFor more info visit https://webpack.js.org/guides/code-splitting/"
  ],
  "version": "3.10.0",
  "hash": "d95e49013c22001ff9d8f35a344cb52b29ace86c",
  "children": [
    {
      "errors": [],
      "warnings": [
        "asset size limit: The following asset(s) exceed the recommended size limit (200 kB).\nThis can impact web performance.\nAssets: \n  build/globals/senna.js (310 kB)",
        "webpack performance recommendations: \nYou can limit the size of your bundles by using import() or require.ensure to lazy load some parts of your application.\nFor more info visit https://webpack.js.org/guides/code-splitting/"
      ],
      "hash": "d95e49013c22001ff9d8",
      "time": 1743,
      "publicPath": "",
      "assetsByChunkName": {
        "main": [
          "build/globals/senna.js",
          "build/globals/senna.js.map"
        ]
      },
      "assets": [
        {
          "name": "build/globals/senna.js",
          "size": 310131,
          "chunks": [
            0
          ],
          "chunkNames": [
            "main"
          ],
          "emitted": true,
          "isOverSizeLimit": true
        },
        {
          "name": "build/globals/senna.js.map",
          "size": 392039,
          "chunks": [
            0
          ],
          "chunkNames": [
            "main"
          ],
          "emitted": true
        }
      ],
      "filteredAssets": 0,
      "entrypoints": {
        "main": {
          "chunks": [
            0
          ],
          "assets": [
            "build/globals/senna.js",
            "build/globals/senna.js.map"
          ]
        }
      },
      "chunks": [
        {
          "id": 0,
          "rendered": true,
          "initial": true,
          "entry": true,
          "extraAsync": false,
          "size": 299374,
          "names": [
            "main"
          ],
          "files": [
            "build/globals/senna.js",
            "build/globals/senna.js.map"
          ],
          "hash": "6fc22b296ec48dcdd244",
          "parents": [],
          "modules": [
            {
              "id": 0,
              "identifier": "/Users/Liferay/trampo/senna.js/node_modules/metal/lib/metal.js",
              "name": "./node_modules/metal/lib/metal.js",
              "index": 5,
              "index2": 8,
              "size": 1266,
              "cacheable": true,
              "built": true,
              "optional": false,
              "prefetched": false,
              "chunks": [
                0
              ],
              "assets": [],
              "issuer": "/Users/Liferay/trampo/senna.js/node_modules/babel-loader/lib/index.js??ref--0!/Users/Liferay/trampo/senna.js/src/app/App.js",
              "issuerId": 13,
              "issuerName": "./src/app/App.js",
              "profile": {
                "factory": 459,
                "building": 8
              },
              "failed": false,
              "errors": 0,
              "warnings": 0,
              "reasons": [
                {
                  "moduleId": 2,
                  "moduleIdentifier": "/Users/Liferay/trampo/senna.js/node_modules/metal-promise/lib/promise/Promise.js",
                  "module": "./node_modules/metal-promise/lib/promise/Promise.js",
                  "moduleName": "./node_modules/metal-promise/lib/promise/Promise.js",
                  "type": "cjs require",
                  "userRequest": "metal",
                  "loc": "18:13-29"
                },
                {
                  "moduleId": 9,
                  "moduleIdentifier": "/Users/Liferay/trampo/senna.js/node_modules/babel-loader/lib/index.js??ref--0!/Users/Liferay/trampo/senna.js/src/route/Route.js",
                  "module": "./src/route/Route.js",
                  "moduleName": "./src/route/Route.js",
                  "type": "amd require",
                  "userRequest": "metal",
                  "loc": "1:0-129:2"
                },
                {
                  "moduleId": 10,
                  "moduleIdentifier": "/Users/Liferay/trampo/senna.js/node_modules/babel-loader/lib/index.js??ref--0!/Users/Liferay/trampo/senna.js/src/screen/Screen.js",
                  "module": "./src/screen/Screen.js",
                  "moduleName": "./src/screen/Screen.js",
                  "type": "amd require",
                  "userRequest": "metal",
                  "loc": "1:0-264:2"
                },
                {
                  "moduleId": 13,
                  "moduleIdentifier": "/Users/Liferay/trampo/senna.js/node_modules/babel-loader/lib/index.js??ref--0!/Users/Liferay/trampo/senna.js/src/app/App.js",
                  "module": "./src/app/App.js",
                  "moduleName": "./src/app/App.js",
                  "type": "amd require",
                  "userRequest": "metal",
                  "loc": "1:0-1185:2"
                },
                {
                  "moduleId": 14,
                  "moduleIdentifier": "/Users/Liferay/trampo/senna.js/node_modules/metal-events/lib/EventHandle.js",
                  "module": "./node_modules/metal-events/lib/EventHandle.js",
                  "moduleName": "./node_modules/metal-events/lib/EventHandle.js",
                  "type": "cjs require",
                  "userRequest": "metal",
                  "loc": "9:13-29"
                },
                {
                  "moduleId": 16,
                  "moduleIdentifier": "/Users/Liferay/trampo/senna.js/node_modules/metal-dom/lib/features.js",
                  "module": "./node_modules/metal-dom/lib/features.js",
                  "moduleName": "./node_modules/metal-dom/lib/features.js",
                  "type": "cjs require",
                  "userRequest": "metal",
                  "loc": "11:13-29"
                },
                {
                  "moduleId": 17,
                  "moduleIdentifier": "/Users/Liferay/trampo/senna.js/node_modules/babel-loader/lib/index.js??ref--0!/Users/Liferay/trampo/senna.js/src/surface/Surface.js",
                  "module": "./src/surface/Surface.js",
                  "moduleName": "./src/surface/Surface.js",
                  "type": "amd require",
                  "userRequest": "metal",
                  "loc": "1:0-352:2"
                },
                {
                  "moduleId": 18,
                  "moduleIdentifier": "/Users/Liferay/trampo/senna.js/node_modules/babel-loader/lib/index.js??ref--0!/Users/Liferay/trampo/senna.js/src/screen/HtmlScreen.js",
                  "module": "./src/screen/HtmlScreen.js",
                  "moduleName": "./src/screen/HtmlScreen.js",
                  "type": "amd require",
                  "userRequest": "metal",
                  "loc": "1:0-425:2"
                },
                {
                  "moduleId": 19,
                  "moduleIdentifier": "/Users/Liferay/trampo/senna.js/node_modules/babel-loader/lib/index.js??ref--0!/Users/Liferay/trampo/senna.js/src/screen/RequestScreen.js",
                  "module": "./src/screen/RequestScreen.js",
                  "moduleName": "./src/screen/RequestScreen.js",
                  "type": "amd require",
                  "userRequest": "metal",
                  "loc": "1:0-387:2"
                },
                {
                  "moduleId": 22,
                  "moduleIdentifier": "/Users/Liferay/trampo/senna.js/node_modules/metal-uri/lib/Uri.js",
                  "module": "./node_modules/metal-uri/lib/Uri.js",
                  "moduleName": "./node_modules/metal-uri/lib/Uri.js",
                  "type": "cjs require",
                  "userRequest": "metal",
                  "loc": "11:13-29"
                },
                {
                  "moduleId": 29,
                  "moduleIdentifier": "/Users/Liferay/trampo/senna.js/node_modules/metal-uri/lib/parse.js",
                  "module": "./node_modules/metal-uri/lib/parse.js",
                  "moduleName": "./node_modules/metal-uri/lib/parse.js",
                  "type": "cjs require",
                  "userRequest": "metal",
                  "loc": "7:13-29"
                },
                {
                  "moduleId": 31,
                  "moduleIdentifier": "/Users/Liferay/trampo/senna.js/node_modules/metal-structs/lib/MultiMap.js",
                  "module": "./node_modules/metal-structs/lib/MultiMap.js",
                  "moduleName": "./node_modules/metal-structs/lib/MultiMap.js",
                  "type": "cjs require",
                  "userRequest": "metal",
                  "loc": "7:13-29"
                },
                {
                  "moduleId": 32,
                  "moduleIdentifier": "/Users/Liferay/trampo/senna.js/node_modules/metal-structs/lib/TreeNode.js",
                  "module": "./node_modules/metal-structs/lib/TreeNode.js",
                  "moduleName": "./node_modules/metal-structs/lib/TreeNode.js",
                  "type": "cjs require",
                  "userRequest": "metal",
                  "loc": "7:13-29"
                },
                {
                  "moduleId": 36,
                  "moduleIdentifier": "/Users/Liferay/trampo/senna.js/node_modules/babel-loader/lib/index.js??ref--0!/Users/Liferay/trampo/senna.js/src/app/AppDataAttributeHandler.js",
                  "module": "./src/app/AppDataAttributeHandler.js",
                  "moduleName": "./src/app/AppDataAttributeHandler.js",
                  "type": "amd require",
                  "userRequest": "metal",
                  "loc": "1:0-300:2"
                },
                {
                  "moduleId": 38,
                  "moduleIdentifier": "/Users/Liferay/trampo/senna.js/node_modules/metal-events/lib/EventEmitter.js",
                  "module": "./node_modules/metal-events/lib/EventEmitter.js",
                  "moduleName": "./node_modules/metal-events/lib/EventEmitter.js",
                  "type": "cjs require",
                  "userRequest": "metal",
                  "loc": "9:13-29"
                },
                {
                  "moduleId": 39,
                  "moduleIdentifier": "/Users/Liferay/trampo/senna.js/node_modules/metal-events/lib/EventEmitterProxy.js",
                  "module": "./node_modules/metal-events/lib/EventEmitterProxy.js",
                  "moduleName": "./node_modules/metal-events/lib/EventEmitterProxy.js",
                  "type": "cjs require",
                  "userRequest": "metal",
                  "loc": "9:13-29"
                },
                {
                  "moduleId": 40,
                  "moduleIdentifier": "/Users/Liferay/trampo/senna.js/node_modules/metal-events/lib/EventHandler.js",
                  "module": "./node_modules/metal-events/lib/EventHandler.js",
                  "moduleName": "./node_modules/metal-events/lib/EventHandler.js",
                  "type": "cjs require",
                  "userRequest": "metal",
                  "loc": "9:13-29"
                },
                {
                  "moduleId": 42,
                  "moduleIdentifier": "/Users/Liferay/trampo/senna.js/node_modules/metal-dom/lib/domNamed.js",
                  "module": "./node_modules/metal-dom/lib/domNamed.js",
                  "moduleName": "./node_modules/metal-dom/lib/domNamed.js",
                  "type": "cjs require",
                  "userRequest": "metal",
                  "loc": "31:13-29"
                },
                {
                  "moduleId": 43,
                  "moduleIdentifier": "/Users/Liferay/trampo/senna.js/node_modules/metal-dom/lib/DomDelegatedEventHandle.js",
                  "module": "./node_modules/metal-dom/lib/DomDelegatedEventHandle.js",
                  "moduleName": "./node_modules/metal-dom/lib/DomDelegatedEventHandle.js",
                  "type": "cjs require",
                  "userRequest": "metal",
                  "loc": "9:13-29"
                },
                {
                  "moduleId": 45,
                  "moduleIdentifier": "/Users/Liferay/trampo/senna.js/node_modules/metal-dom/lib/globalEval.js",
                  "module": "./node_modules/metal-dom/lib/globalEval.js",
                  "moduleName": "./node_modules/metal-dom/lib/globalEval.js",
                  "type": "cjs require",
                  "userRequest": "metal",
                  "loc": "9:13-29"
                },
                {
                  "moduleId": 46,
                  "moduleIdentifier": "/Users/Liferay/trampo/senna.js/node_modules/metal-dom/lib/globalEvalStyles.js",
                  "module": "./node_modules/metal-dom/lib/globalEvalStyles.js",
                  "moduleName": "./node_modules/metal-dom/lib/globalEvalStyles.js",
                  "type": "cjs require",
                  "userRequest": "metal",
                  "loc": "9:13-29"
                },
                {
                  "moduleId": 48,
                  "moduleIdentifier": "/Users/Liferay/trampo/senna.js/node_modules/metal-path-parser/lib/pathParser.js",
                  "module": "./node_modules/metal-path-parser/lib/pathParser.js",
                  "moduleName": "./node_modules/metal-path-parser/lib/pathParser.js",
                  "type": "cjs require",
                  "userRequest": "metal",
                  "loc": "10:13-29"
                },
                {
                  "moduleId": 49,
                  "moduleIdentifier": "/Users/Liferay/trampo/senna.js/node_modules/babel-loader/lib/index.js??ref--0!/Users/Liferay/trampo/senna.js/src/cacheable/Cacheable.js",
                  "module": "./src/cacheable/Cacheable.js",
                  "moduleName": "./src/cacheable/Cacheable.js",
                  "type": "amd require",
                  "userRequest": "metal",
                  "loc": "1:0-155:2"
                },
                {
                  "moduleId": 50,
                  "moduleIdentifier": "/Users/Liferay/trampo/senna.js/node_modules/metal-ajax/lib/Ajax.js",
                  "module": "./node_modules/metal-ajax/lib/Ajax.js",
                  "moduleName": "./node_modules/metal-ajax/lib/Ajax.js",
                  "type": "cjs require",
                  "userRequest": "metal",
                  "loc": "9:13-29"
                }
              ],
              "usedExports": true,
              "providedExports": null,
              "optimizationBailout": [
                "ModuleConcatenation bailout: Module is not an ECMAScript module"
              ],
              "depth": 2,
              "source": "'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.string = exports.object = exports.Disposable = exports.async = exports.array = undefined;\n\nvar _core = require('./core');\n\nObject.keys(_core).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _core[key];\n    }\n  });\n});\n\nvar _core2 = _interopRequireDefault(_core);\n\nvar _array = require('./array/array');\n\nvar _array2 = _interopRequireDefault(_array);\n\nvar _async = require('./async/async');\n\nvar _async2 = _interopRequireDefault(_async);\n\nvar _Disposable = require('./disposable/Disposable');\n\nvar _Disposable2 = _interopRequireDefault(_Disposable);\n\nvar _object = require('./object/object');\n\nvar _object2 = _interopRequireDefault(_object);\n\nvar _string = require('./string/string');\n\nvar _string2 = _interopRequireDefault(_string);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.array = _array2.default;\nexports.async = _async2.default;\nexports.Disposable = _Disposable2.default;\nexports.object = _object2.default;\nexports.string = _string2.default;\nexports.default = _core2.default;"
            },
            {
              "id": 1,
              "identifier": "/Users/Liferay/trampo/senna.js/node_modules/babel-loader/lib/index.js??ref--0!/Users/Liferay/trampo/senna.js/src/globals/globals.js",
              "name": "./src/globals/globals.js",
              "index": 2,
              "index2": 0,
              "size": 345,
              "cacheable": true,
              "built": true,
              "optional": false,
              "prefetched": false,
              "chunks": [
                0
              ],
              "assets": [],
              "issuer": "/Users/Liferay/trampo/senna.js/node_modules/babel-loader/lib/index.js??ref--0!/Users/Liferay/trampo/senna.js/src/utils/utils.js",
              "issuerId": 5,
              "issuerName": "./src/utils/utils.js",
              "profile": {
                "factory": 617,
                "building": 76
              },
              "failed": false,
              "errors": 0,
              "warnings": 0,
              "reasons": [
                {
                  "moduleId": 5,
                  "moduleIdentifier": "/Users/Liferay/trampo/senna.js/node_modules/babel-loader/lib/index.js??ref--0!/Users/Liferay/trampo/senna.js/src/utils/utils.js",
                  "module": "./src/utils/utils.js",
                  "moduleName": "./src/utils/utils.js",
                  "type": "amd require",
                  "userRequest": "../globals/globals",
                  "loc": "1:0-148:2"
                },
                {
                  "moduleId": 13,
                  "moduleIdentifier": "/Users/Liferay/trampo/senna.js/node_modules/babel-loader/lib/index.js??ref--0!/Users/Liferay/trampo/senna.js/src/app/App.js",
                  "module": "./src/app/App.js",
                  "moduleName": "./src/app/App.js",
                  "type": "amd require",
                  "userRequest": "../globals/globals",
                  "loc": "1:0-1185:2"
                },
                {
                  "moduleId": 17,
                  "moduleIdentifier": "/Users/Liferay/trampo/senna.js/node_modules/babel-loader/lib/index.js??ref--0!/Users/Liferay/trampo/senna.js/src/surface/Surface.js",
                  "module": "./src/surface/Surface.js",
                  "moduleName": "./src/surface/Surface.js",
                  "type": "amd require",
                  "userRequest": "../globals/globals",
                  "loc": "1:0-352:2"
                },
                {
                  "moduleId": 18,
                  "moduleIdentifier": "/Users/Liferay/trampo/senna.js/node_modules/babel-loader/lib/index.js??ref--0!/Users/Liferay/trampo/senna.js/src/screen/HtmlScreen.js",
                  "module": "./src/screen/HtmlScreen.js",
                  "moduleName": "./src/screen/HtmlScreen.js",
                  "type": "amd require",
                  "userRequest": "../globals/globals",
                  "loc": "1:0-425:2"
                },
                {
                  "moduleId": 19,
                  "moduleIdentifier": "/Users/Liferay/trampo/senna.js/node_modules/babel-loader/lib/index.js??ref--0!/Users/Liferay/trampo/senna.js/src/screen/RequestScreen.js",
                  "module": "./src/screen/RequestScreen.js",
                  "moduleName": "./src/screen/RequestScreen.js",
                  "type": "amd require",
                  "userRequest": "../globals/globals",
                  "loc": "1:0-387:2"
                },
                {
                  "moduleId": 35,
                  "moduleIdentifier": "/Users/Liferay/trampo/senna.js/node_modules/babel-loader/lib/index.js??ref--0!/Users/Liferay/trampo/senna.js/src/app/dataAttributeHandler.js",
                  "module": "./src/app/dataAttributeHandler.js",
                  "moduleName": "./src/app/dataAttributeHandler.js",
                  "type": "amd require",
                  "userRequest": "../globals/globals",
                  "loc": "1:0-30:2"
                },
                {
                  "moduleId": 36,
                  "moduleIdentifier": "/Users/Liferay/trampo/senna.js/node_modules/babel-loader/lib/index.js??ref--0!/Users/Liferay/trampo/senna.js/src/app/AppDataAttributeHandler.js",
                  "module": "./src/app/AppDataAttributeHandler.js",
                  "moduleName": "./src/app/AppDataAttributeHandler.js",
                  "type": "amd require",
                  "userRequest": "../globals/globals",
                  "loc": "1:0-300:2"
                }
              ],
              "usedExports": true,
              "providedExports": null,
              "optimizationBailout": [
                "ModuleConcatenation bailout: Module is not an ECMAScript module"
              ],
              "depth": 2,
              "source": "define([\"exports\"], function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  var globals = globals || {};\n\n  if (typeof window !== 'undefined') {\n    globals.window = window;\n  }\n\n  if (typeof document !== 'undefined') {\n    globals.document = document;\n  }\n\n  exports.default = globals;\n});"
            },
            {
              "id": 2,
              "identifier": "/Users/Liferay/trampo/senna.js/node_modules/metal-promise/lib/promise/Promise.js",
              "name": "./node_modules/metal-promise/lib/promise/Promise.js",
              "index": 29,
              "index2": 25,
              "size": 32626,
              "cacheable": true,
              "built": true,
              "optional": false,
              "prefetched": false,
              "chunks": [
                0
              ],
              "assets": [],
              "issuer": "/Users/Liferay/trampo/senna.js/node_modules/babel-loader/lib/index.js??ref--0!/Users/Liferay/trampo/senna.js/src/app/App.js",
              "issuerId": 13,
              "issuerName": "./src/app/App.js",
              "profile": {
                "factory": 461,
                "building": 26,
                "dependencies": 5
              },
              "failed": false,
              "errors": 0,
              "warnings": 0,
              "reasons": [
                {
                  "moduleId": 10,
                  "moduleIdentifier": "/Users/Liferay/trampo/senna.js/node_modules/babel-loader/lib/index.js??ref--0!/Users/Liferay/trampo/senna.js/src/screen/Screen.js",
                  "module": "./src/screen/Screen.js",
                  "moduleName": "./src/screen/Screen.js",
                  "type": "amd require",
                  "userRequest": "metal-promise",
                  "loc": "1:0-264:2"
                },
                {
                  "moduleId": 13,
                  "moduleIdentifier": "/Users/Liferay/trampo/senna.js/node_modules/babel-loader/lib/index.js??ref--0!/Users/Liferay/trampo/senna.js/src/app/App.js",
                  "module": "./src/app/App.js",
                  "moduleName": "./src/app/App.js",
                  "type": "amd require",
                  "userRequest": "metal-promise",
                  "loc": "1:0-1185:2"
                },
                {
                  "moduleId": 17,
                  "moduleIdentifier": "/Users/Liferay/trampo/senna.js/node_modules/babel-loader/lib/index.js??ref--0!/Users/Liferay/trampo/senna.js/src/surface/Surface.js",
                  "module": "./src/surface/Surface.js",
                  "moduleName": "./src/surface/Surface.js",
                  "type": "amd require",
                  "userRequest": "metal-promise",
                  "loc": "1:0-352:2"
                },
                {
                  "moduleId": 18,
                  "moduleIdentifier": "/Users/Liferay/trampo/senna.js/node_modules/babel-loader/lib/index.js??ref--0!/Users/Liferay/trampo/senna.js/src/screen/HtmlScreen.js",
                  "module": "./src/screen/HtmlScreen.js",
                  "moduleName": "./src/screen/HtmlScreen.js",
                  "type": "amd require",
                  "userRequest": "metal-promise",
                  "loc": "1:0-425:2"
                },
                {
                  "moduleId": 19,
                  "moduleIdentifier": "/Users/Liferay/trampo/senna.js/node_modules/babel-loader/lib/index.js??ref--0!/Users/Liferay/trampo/senna.js/src/screen/RequestScreen.js",
                  "module": "./src/screen/RequestScreen.js",
                  "moduleName": "./src/screen/RequestScreen.js",
                  "type": "amd require",
                  "userRequest": "metal-promise",
                  "loc": "1:0-387:2"
                },
                {
                  "moduleId": 50,
                  "moduleIdentifier": "/Users/Liferay/trampo/senna.js/node_modules/metal-ajax/lib/Ajax.js",
                  "module": "./node_modules/metal-ajax/lib/Ajax.js",
                  "moduleName": "./node_modules/metal-ajax/lib/Ajax.js",
                  "type": "cjs require",
                  "userRequest": "metal-promise",
                  "loc": "15:20-44"
                }
              ],
              "usedExports": true,
              "providedExports": null,
              "optimizationBailout": [
                "ModuleConcatenation bailout: Module is not an ECMAScript module"
              ],
              "depth": 2,
              "source": "/*!\n * Promises polyfill from Google's Closure Library.\n *\n *      Copyright 2013 The Closure Library Authors. All Rights Reserved.\n *\n * NOTE(eduardo): Promise support is not ready on all supported browsers,\n * therefore metal-promise is temporarily using Google's promises as polyfill.\n * It supports cancellable promises and has clean and fast implementation.\n */\n\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.CancellablePromise = undefined;\n\nvar _metal = require('metal');\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n/**\n * Provides a more strict interface for Thenables in terms of\n * http://promisesaplus.com for interop with {@see CancellablePromise}.\n *\n * @interface\n * @extends {IThenable.<TYPE>}\n * @template TYPE\n */\nvar Thenable = function Thenable() {};\n\n/**\n * Adds callbacks that will operate on the result of the Thenable, returning a\n * new child Promise.\n *\n * If the Thenable is fulfilled, the {@code onFulfilled} callback will be\n * invoked with the fulfillment value as argument, and the child Promise will\n * be fulfilled with the return value of the callback. If the callback throws\n * an exception, the child Promise will be rejected with the thrown value\n * instead.\n *\n * If the Thenable is rejected, the {@code onRejected} callback will be invoked\n * with the rejection reason as argument, and the child Promise will be rejected\n * with the return value of the callback or thrown value.\n *\n * @param {?(function(this:THIS, TYPE):\n *             (RESULT|IThenable.<RESULT>|Thenable))=} opt_onFulfilled A\n *     function that will be invoked with the fulfillment value if the Promise\n *     is fullfilled.\n * @param {?(function(*): *)=} opt_onRejected A function that will be invoked\n *     with the rejection reason if the Promise is rejected.\n * @param {THIS=} opt_context An optional context object that will be the\n *     execution context for the callbacks. By default, functions are executed\n *     with the default this.\n * @return {!CancellablePromise.<RESULT>} A new Promise that will receive the\n *     result of the fulfillment or rejection callback.\n * @template RESULT,THIS\n */\nThenable.prototype.then = function () {};\n\n/**\n * An expando property to indicate that an object implements\n * {@code Thenable}.\n *\n * {@see addImplementation}.\n *\n * @const\n */\nThenable.IMPLEMENTED_BY_PROP = '$goog_Thenable';\n\n/**\n * Marks a given class (constructor) as an implementation of Thenable, so\n * that we can query that fact at runtime. The class must have already\n * implemented the interface.\n * Exports a 'then' method on the constructor prototype, so that the objects\n * also implement the extern {@see Thenable} interface for interop with\n * other Promise implementations.\n * @param {function(new:Thenable,...[?])} ctor The class constructor. The\n *     corresponding class must have already implemented the interface.\n */\nThenable.addImplementation = function (ctor) {\n  ctor.prototype.then = ctor.prototype.then;\n  ctor.prototype.$goog_Thenable = true;\n};\n\n/**\n * @param {*} object\n * @return {boolean} Whether a given instance implements {@code Thenable}.\n *     The class/superclass of the instance must call {@code addImplementation}.\n */\nThenable.isImplementedBy = function (object) {\n  if (!object) {\n    return false;\n  }\n  try {\n    return !!object.$goog_Thenable;\n  } catch (e) {\n    // Property access seems to be forbidden.\n    return false;\n  }\n};\n\n/**\n * Like bind(), except that a 'this object' is not required. Useful when the\n * target function is already bound.\n *\n * Usage:\n * var g = partial(f, arg1, arg2);\n * g(arg3, arg4);\n *\n * @param {Function} fn A function to partially apply.\n * @param {...*} var_args Additional arguments that are partially applied to fn.\n * @return {!Function} A partially-applied form of the function bind() was\n *     invoked as a method of.\n */\nvar partial = function partial(fn) {\n  var args = Array.prototype.slice.call(arguments, 1);\n  return function () {\n    // Clone the array (with slice()) and append additional arguments\n    // to the existing arguments.\n    var newArgs = args.slice();\n    newArgs.push.apply(newArgs, arguments);\n    return fn.apply(this, newArgs);\n  };\n};\n\n/**\n * Promises provide a result that may be resolved asynchronously. A Promise may\n * be resolved by being fulfilled or rejected with a value, which will be known\n * as the fulfillment value or the rejection reason. Whether fulfilled or\n * rejected, the Promise result is immutable once it is set.\n *\n * Promises may represent results of any type, including undefined. Rejection\n * reasons are typically Errors, but may also be of any type. Closure Promises\n * allow for optional type annotations that enforce that fulfillment values are\n * of the appropriate types at compile time.\n *\n * The result of a Promise is accessible by calling {@code then} and registering\n * {@code onFulfilled} and {@code onRejected} callbacks. Once the Promise\n * resolves, the relevant callbacks are invoked with the fulfillment value or\n * rejection reason as argument. Callbacks are always invoked in the order they\n * were registered, even when additional {@code then} calls are made from inside\n * another callback. A callback is always run asynchronously sometime after the\n * scope containing the registering {@code then} invocation has returned.\n *\n * If a Promise is resolved with another Promise, the first Promise will block\n * until the second is resolved, and then assumes the same result as the second\n * Promise. This allows Promises to depend on the results of other Promises,\n * linking together multiple asynchronous operations.\n *\n * This implementation is compatible with the Promises/A+ specification and\n * passes that specification's conformance test suite. A Closure Promise may be\n * resolved with a Promise instance (or sufficiently compatible Promise-like\n * object) created by other Promise implementations. From the specification,\n * Promise-like objects are known as \"Thenables\".\n *\n * @see http://promisesaplus.com/\n *\n * @param {function(\n *             this:RESOLVER_CONTEXT,\n *             function((TYPE|IThenable.<TYPE>|Thenable)),\n *             function(*)): void} resolver\n *     Initialization function that is invoked immediately with {@code resolve}\n *     and {@code reject} functions as arguments. The Promise is resolved or\n *     rejected with the first argument passed to either function.\n * @param {RESOLVER_CONTEXT=} opt_context An optional context for executing the\n *     resolver function. If unspecified, the resolver function will be executed\n *     in the default scope.\n * @constructor\n * @struct\n * @final\n * @implements {Thenable.<TYPE>}\n * @template TYPE,RESOLVER_CONTEXT\n */\nvar CancellablePromise = function CancellablePromise(resolver, opt_context) {\n  /**\n   * The internal state of this Promise. Either PENDING, FULFILLED, REJECTED, or\n   * BLOCKED.\n   * @private {CancellablePromise.State_}\n   */\n  this.state_ = CancellablePromise.State_.PENDING;\n\n  /**\n   * The resolved result of the Promise. Immutable once set with either a\n   * fulfillment value or rejection reason.\n   * @private {*}\n   */\n  this.result_ = undefined;\n\n  /**\n   * For Promises created by calling {@code then()}, the originating parent.\n   * @private {CancellablePromise}\n   */\n  this.parent_ = null;\n\n  /**\n   * The list of {@code onFulfilled} and {@code onRejected} callbacks added to\n   * this Promise by calls to {@code then()}.\n   * @private {Array.<CancellablePromise.CallbackEntry_>}\n   */\n  this.callbackEntries_ = null;\n\n  /**\n   * Whether the Promise is in the queue of Promises to execute.\n   * @private {boolean}\n   */\n  this.executing_ = false;\n\n  if (CancellablePromise.UNHANDLED_REJECTION_DELAY > 0) {\n    /**\n     * A timeout ID used when the {@code UNHANDLED_REJECTION_DELAY} is greater\n     * than 0 milliseconds. The ID is set when the Promise is rejected, and\n     * cleared only if an {@code onRejected} callback is invoked for the\n     * Promise (or one of its descendants) before the delay is exceeded.\n     *\n     * If the rejection is not handled before the timeout completes, the\n     * rejection reason is passed to the unhandled rejection handler.\n     * @private {number}\n     */\n    this.unhandledRejectionId_ = 0;\n  } else if (CancellablePromise.UNHANDLED_REJECTION_DELAY === 0) {\n    /**\n     * When the {@code UNHANDLED_REJECTION_DELAY} is set to 0 milliseconds, a\n     * boolean that is set if the Promise is rejected, and reset to false if an\n     * {@code onRejected} callback is invoked for the Promise (or one of its\n     * descendants). If the rejection is not handled before the next timestep,\n     * the rejection reason is passed to the unhandled rejection handler.\n     * @private {boolean}\n     */\n    this.hadUnhandledRejection_ = false;\n  }\n\n  try {\n    var self = this;\n    resolver.call(opt_context, function (value) {\n      self.resolve_(CancellablePromise.State_.FULFILLED, value);\n    }, function (reason) {\n      self.resolve_(CancellablePromise.State_.REJECTED, reason);\n    });\n  } catch (e) {\n    this.resolve_(CancellablePromise.State_.REJECTED, e);\n  }\n};\n\n/**\n * The delay in milliseconds before a rejected Promise's reason is passed to\n * the rejection handler. By default, the rejection handler rethrows the\n * rejection reason so that it appears in the developer console or\n * {@code window.onerror} handler.\n * Rejections are rethrown as quickly as possible by default. A negative value\n * disables rejection handling entirely.\n * @type {number}\n */\nCancellablePromise.UNHANDLED_REJECTION_DELAY = 0;\n\n/**\n * The possible internal states for a Promise. These states are not directly\n * observable to external callers.\n * @enum {number}\n * @private\n */\nCancellablePromise.State_ = {\n  /** The Promise is waiting for resolution. */\n  PENDING: 0,\n\n  /** The Promise is blocked waiting for the result of another Thenable. */\n  BLOCKED: 1,\n\n  /** The Promise has been resolved with a fulfillment value. */\n  FULFILLED: 2,\n\n  /** The Promise has been resolved with a rejection reason. */\n  REJECTED: 3\n};\n\n/**\n * Typedef for entries in the callback chain. Each call to {@code then},\n * {@code thenCatch}, or {@code thenAlways} creates an entry containing the\n * functions that may be invoked once the Promise is resolved.\n *\n * @typedef {{\n *   child: CancellablePromise,\n *   onFulfilled: function(*),\n *   onRejected: function(*)\n * }}\n * @private\n */\nCancellablePromise.CallbackEntry_ = null;\n\n/**\n * @param {(TYPE|Thenable.<TYPE>|Thenable)=} opt_value\n * @return {!CancellablePromise.<TYPE>} A new Promise that is immediately resolved\n *     with the given value.\n * @template TYPE\n */\nCancellablePromise.resolve = function (opt_value) {\n  return new CancellablePromise(function (resolve) {\n    resolve(opt_value);\n  });\n};\n\n/**\n * @param {*=} opt_reason\n * @return {!CancellablePromise} A new Promise that is immediately rejected with the\n *     given reason.\n */\nCancellablePromise.reject = function (opt_reason) {\n  return new CancellablePromise(function (resolve, reject) {\n    reject(opt_reason);\n  });\n};\n\n/**\n * @param {!Array.<!(Thenable.<TYPE>|Thenable)>} promises\n * @return {!CancellablePromise.<TYPE>} A Promise that receives the result of the\n *     first Promise (or Promise-like) input to complete.\n * @template TYPE\n */\nCancellablePromise.race = function (promises) {\n  return new CancellablePromise(function (resolve, reject) {\n    if (!promises.length) {\n      resolve(undefined);\n    }\n    for (var i = 0, promise; promise = promises[i]; i++) {\n      promise.then(resolve, reject);\n    }\n  });\n};\n\n/**\n * @param {!Array.<!(Thenable.<TYPE>|Thenable)>} promises\n * @return {!CancellablePromise.<!Array.<TYPE>>} A Promise that receives a list of\n *     every fulfilled value once every input Promise (or Promise-like) is\n *     successfully fulfilled, or is rejected by the first rejection result.\n * @template TYPE\n */\nCancellablePromise.all = function (promises) {\n  return new CancellablePromise(function (resolve, reject) {\n    var toFulfill = promises.length;\n    var values = [];\n\n    if (!toFulfill) {\n      resolve(values);\n      return;\n    }\n\n    var onFulfill = function onFulfill(index, value) {\n      toFulfill--;\n      values[index] = value;\n      if (toFulfill === 0) {\n        resolve(values);\n      }\n    };\n\n    var onReject = function onReject(reason) {\n      reject(reason);\n    };\n\n    for (var i = 0, promise; promise = promises[i]; i++) {\n      promise.then(partial(onFulfill, i), onReject);\n    }\n  });\n};\n\n/**\n * @param {!Array.<!(Thenable.<TYPE>|Thenable)>} promises\n * @return {!CancellablePromise.<TYPE>} A Promise that receives the value of\n *     the first input to be fulfilled, or is rejected with a list of every\n *     rejection reason if all inputs are rejected.\n * @template TYPE\n */\nCancellablePromise.firstFulfilled = function (promises) {\n  return new CancellablePromise(function (resolve, reject) {\n    var toReject = promises.length;\n    var reasons = [];\n\n    if (!toReject) {\n      resolve(undefined);\n      return;\n    }\n\n    var onFulfill = function onFulfill(value) {\n      resolve(value);\n    };\n\n    var onReject = function onReject(index, reason) {\n      toReject--;\n      reasons[index] = reason;\n      if (toReject === 0) {\n        reject(reasons);\n      }\n    };\n\n    for (var i = 0, promise; promise = promises[i]; i++) {\n      promise.then(onFulfill, partial(onReject, i));\n    }\n  });\n};\n\n/**\n * Adds callbacks that will operate on the result of the Promise, returning a\n * new child Promise.\n *\n * If the Promise is fulfilled, the {@code onFulfilled} callback will be invoked\n * with the fulfillment value as argument, and the child Promise will be\n * fulfilled with the return value of the callback. If the callback throws an\n * exception, the child Promise will be rejected with the thrown value instead.\n *\n * If the Promise is rejected, the {@code onRejected} callback will be invoked\n * with the rejection reason as argument, and the child Promise will be rejected\n * with the return value (or thrown value) of the callback.\n *\n * @override\n */\nCancellablePromise.prototype.then = function (opt_onFulfilled, opt_onRejected, opt_context) {\n  return this.addChildPromise_((0, _metal.isFunction)(opt_onFulfilled) ? opt_onFulfilled : null, (0, _metal.isFunction)(opt_onRejected) ? opt_onRejected : null, opt_context);\n};\nThenable.addImplementation(CancellablePromise);\n\n/**\n * Adds a callback that will be invoked whether the Promise is fulfilled or\n * rejected. The callback receives no argument, and no new child Promise is\n * created. This is useful for ensuring that cleanup takes place after certain\n * asynchronous operations. Callbacks added with {@code thenAlways} will be\n * executed in the same order with other calls to {@code then},\n * {@code thenAlways}, or {@code thenCatch}.\n *\n * Since it does not produce a new child Promise, cancellation propagation is\n * not prevented by adding callbacks with {@code thenAlways}. A Promise that has\n * a cleanup handler added with {@code thenAlways} will be canceled if all of\n * its children created by {@code then} (or {@code thenCatch}) are canceled.\n *\n * @param {function(this:THIS): void} onResolved A function that will be invoked\n *     when the Promise is resolved.\n * @param {THIS=} opt_context An optional context object that will be the\n *     execution context for the callbacks. By default, functions are executed\n *     in the global scope.\n * @return {!CancellablePromise.<TYPE>} This Promise, for chaining additional calls.\n * @template THIS\n */\nCancellablePromise.prototype.thenAlways = function (onResolved, opt_context) {\n  var callback = function callback() {\n    try {\n      // Ensure that no arguments are passed to onResolved.\n      onResolved.call(opt_context);\n    } catch (err) {\n      CancellablePromise.handleRejection_.call(null, err);\n    }\n  };\n\n  this.addCallbackEntry_({\n    child: null,\n    onRejected: callback,\n    onFulfilled: callback\n  });\n  return this;\n};\n\n/**\n * Adds a callback that will be invoked only if the Promise is rejected. This\n * is equivalent to {@code then(null, onRejected)}.\n *\n * @param {!function(this:THIS, *): *} onRejected A function that will be\n *     invoked with the rejection reason if the Promise is rejected.\n * @param {THIS=} opt_context An optional context object that will be the\n *     execution context for the callbacks. By default, functions are executed\n *     in the global scope.\n * @return {!CancellablePromise} A new Promise that will receive the result of the\n *     callback.\n * @template THIS\n */\nCancellablePromise.prototype.thenCatch = function (onRejected, opt_context) {\n  return this.addChildPromise_(null, onRejected, opt_context);\n};\n\n/**\n * Alias of {@link CancellablePromise.prototype.thenCatch}\n */\nCancellablePromise.prototype.catch = CancellablePromise.prototype.thenCatch;\n\n/**\n * Cancels the Promise if it is still pending by rejecting it with a cancel\n * Error. No action is performed if the Promise is already resolved.\n *\n * All child Promises of the canceled Promise will be rejected with the same\n * cancel error, as with normal Promise rejection. If the Promise to be canceled\n * is the only child of a pending Promise, the parent Promise will also be\n * canceled. Cancellation may propagate upward through multiple generations.\n *\n * @param {string=} opt_message An optional debugging message for describing the\n *     cancellation reason.\n */\nCancellablePromise.prototype.cancel = function (opt_message) {\n  if (this.state_ === CancellablePromise.State_.PENDING) {\n    _metal.async.run(function () {\n      var err = new CancellablePromise.CancellationError(opt_message);\n      err.IS_CANCELLATION_ERROR = true;\n      this.cancelInternal_(err);\n    }, this);\n  }\n};\n\n/**\n * Cancels this Promise with the given error.\n *\n * @param {!Error} err The cancellation error.\n * @private\n */\nCancellablePromise.prototype.cancelInternal_ = function (err) {\n  if (this.state_ === CancellablePromise.State_.PENDING) {\n    if (this.parent_) {\n      // Cancel the Promise and remove it from the parent's child list.\n      this.parent_.cancelChild_(this, err);\n    } else {\n      this.resolve_(CancellablePromise.State_.REJECTED, err);\n    }\n  }\n};\n\n/**\n * Cancels a child Promise from the list of callback entries. If the Promise has\n * not already been resolved, reject it with a cancel error. If there are no\n * other children in the list of callback entries, propagate the cancellation\n * by canceling this Promise as well.\n *\n * @param {!CancellablePromise} childPromise The Promise to cancel.\n * @param {!Error} err The cancel error to use for rejecting the Promise.\n * @private\n */\nCancellablePromise.prototype.cancelChild_ = function (childPromise, err) {\n  if (!this.callbackEntries_) {\n    return;\n  }\n  var childCount = 0;\n  var childIndex = -1;\n\n  // Find the callback entry for the childPromise, and count whether there are\n  // additional child Promises.\n  for (var i = 0, entry; entry = this.callbackEntries_[i]; i++) {\n    var child = entry.child;\n    if (child) {\n      childCount++;\n      if (child === childPromise) {\n        childIndex = i;\n      }\n      if (childIndex >= 0 && childCount > 1) {\n        break;\n      }\n    }\n  }\n\n  // If the child Promise was the only child, cancel this Promise as well.\n  // Otherwise, reject only the child Promise with the cancel error.\n  if (childIndex >= 0) {\n    if (this.state_ === CancellablePromise.State_.PENDING && childCount === 1) {\n      this.cancelInternal_(err);\n    } else {\n      var callbackEntry = this.callbackEntries_.splice(childIndex, 1)[0];\n      this.executeCallback_(callbackEntry, CancellablePromise.State_.REJECTED, err);\n    }\n  }\n};\n\n/**\n * Adds a callback entry to the current Promise, and schedules callback\n * execution if the Promise has already been resolved.\n *\n * @param {CancellablePromise.CallbackEntry_} callbackEntry Record containing\n *     {@code onFulfilled} and {@code onRejected} callbacks to execute after\n *     the Promise is resolved.\n * @private\n */\nCancellablePromise.prototype.addCallbackEntry_ = function (callbackEntry) {\n  if ((!this.callbackEntries_ || !this.callbackEntries_.length) && (this.state_ === CancellablePromise.State_.FULFILLED || this.state_ === CancellablePromise.State_.REJECTED)) {\n    this.scheduleCallbacks_();\n  }\n  if (!this.callbackEntries_) {\n    this.callbackEntries_ = [];\n  }\n  this.callbackEntries_.push(callbackEntry);\n};\n\n/**\n * Creates a child Promise and adds it to the callback entry list. The result of\n * the child Promise is determined by the state of the parent Promise and the\n * result of the {@code onFulfilled} or {@code onRejected} callbacks as\n * specified in the Promise resolution procedure.\n *\n * @see http://promisesaplus.com/#the__method\n *\n * @param {?function(this:THIS, TYPE):\n *          (RESULT|CancellablePromise.<RESULT>|Thenable)} onFulfilled A callback that\n *     will be invoked if the Promise is fullfilled, or null.\n * @param {?function(this:THIS, *): *} onRejected A callback that will be\n *     invoked if the Promise is rejected, or null.\n * @param {THIS=} opt_context An optional execution context for the callbacks.\n *     in the default calling context.\n * @return {!CancellablePromise} The child Promise.\n * @template RESULT,THIS\n * @private\n */\nCancellablePromise.prototype.addChildPromise_ = function (onFulfilled, onRejected, opt_context) {\n\n  var callbackEntry = {\n    child: null,\n    onFulfilled: null,\n    onRejected: null\n  };\n\n  callbackEntry.child = new CancellablePromise(function (resolve, reject) {\n    // Invoke onFulfilled, or resolve with the parent's value if absent.\n    callbackEntry.onFulfilled = onFulfilled ? function (value) {\n      try {\n        var result = onFulfilled.call(opt_context, value);\n        resolve(result);\n      } catch (err) {\n        reject(err);\n      }\n    } : resolve;\n\n    // Invoke onRejected, or reject with the parent's reason if absent.\n    callbackEntry.onRejected = onRejected ? function (reason) {\n      try {\n        var result = onRejected.call(opt_context, reason);\n        if (!(0, _metal.isDef)(result) && reason.IS_CANCELLATION_ERROR) {\n          // Propagate cancellation to children if no other result is returned.\n          reject(reason);\n        } else {\n          resolve(result);\n        }\n      } catch (err) {\n        reject(err);\n      }\n    } : reject;\n  });\n\n  callbackEntry.child.parent_ = this;\n  this.addCallbackEntry_(\n  /** @type {CancellablePromise.CallbackEntry_} */callbackEntry);\n  return callbackEntry.child;\n};\n\n/**\n * Unblocks the Promise and fulfills it with the given value.\n *\n * @param {TYPE} value\n * @private\n */\nCancellablePromise.prototype.unblockAndFulfill_ = function (value) {\n  if (this.state_ !== CancellablePromise.State_.BLOCKED) {\n    throw new Error('CancellablePromise is not blocked.');\n  }\n  this.state_ = CancellablePromise.State_.PENDING;\n  this.resolve_(CancellablePromise.State_.FULFILLED, value);\n};\n\n/**\n * Unblocks the Promise and rejects it with the given rejection reason.\n *\n * @param {*} reason\n * @private\n */\nCancellablePromise.prototype.unblockAndReject_ = function (reason) {\n  if (this.state_ !== CancellablePromise.State_.BLOCKED) {\n    throw new Error('CancellablePromise is not blocked.');\n  }\n  this.state_ = CancellablePromise.State_.PENDING;\n  this.resolve_(CancellablePromise.State_.REJECTED, reason);\n};\n\n/**\n * Attempts to resolve a Promise with a given resolution state and value. This\n * is a no-op if the given Promise has already been resolved.\n *\n * If the given result is a Thenable (such as another Promise), the Promise will\n * be resolved with the same state and result as the Thenable once it is itself\n * resolved.\n *\n * If the given result is not a Thenable, the Promise will be fulfilled or\n * rejected with that result based on the given state.\n *\n * @see http://promisesaplus.com/#the_promise_resolution_procedure\n *\n * @param {CancellablePromise.State_} state\n * @param {*} x The result to apply to the Promise.\n * @private\n */\nCancellablePromise.prototype.resolve_ = function (state, x) {\n  if (this.state_ !== CancellablePromise.State_.PENDING) {\n    return;\n  }\n\n  if (this === x) {\n    state = CancellablePromise.State_.REJECTED;\n    x = new TypeError('CancellablePromise cannot resolve to itself');\n  } else if (Thenable.isImplementedBy(x)) {\n    x = /** @type {!Thenable} */x;\n    this.state_ = CancellablePromise.State_.BLOCKED;\n    x.then(this.unblockAndFulfill_, this.unblockAndReject_, this);\n    return;\n  } else if ((0, _metal.isObject)(x)) {\n    try {\n      var then = x.then;\n      if ((0, _metal.isFunction)(then)) {\n        this.tryThen_(x, then);\n        return;\n      }\n    } catch (e) {\n      state = CancellablePromise.State_.REJECTED;\n      x = e;\n    }\n  }\n\n  this.result_ = x;\n  this.state_ = state;\n  this.scheduleCallbacks_();\n\n  if (state === CancellablePromise.State_.REJECTED && !x.IS_CANCELLATION_ERROR) {\n    CancellablePromise.addUnhandledRejection_(this, x);\n  }\n};\n\n/**\n * Attempts to call the {@code then} method on an object in the hopes that it is\n * a Promise-compatible instance. This allows interoperation between different\n * Promise implementations, however a non-compliant object may cause a Promise\n * to hang indefinitely. If the {@code then} method throws an exception, the\n * dependent Promise will be rejected with the thrown value.\n *\n * @see http://promisesaplus.com/#point-70\n *\n * @param {Thenable} thenable An object with a {@code then} method that may be\n *     compatible with the Promise/A+ specification.\n * @param {!Function} then The {@code then} method of the Thenable object.\n * @private\n */\nCancellablePromise.prototype.tryThen_ = function (thenable, then) {\n  this.state_ = CancellablePromise.State_.BLOCKED;\n  var promise = this;\n  var called = false;\n\n  var resolve = function resolve(value) {\n    if (!called) {\n      called = true;\n      promise.unblockAndFulfill_(value);\n    }\n  };\n\n  var reject = function reject(reason) {\n    if (!called) {\n      called = true;\n      promise.unblockAndReject_(reason);\n    }\n  };\n\n  try {\n    then.call(thenable, resolve, reject);\n  } catch (e) {\n    reject(e);\n  }\n};\n\n/**\n * Executes the pending callbacks of a resolved Promise after a timeout.\n *\n * Section 2.2.4 of the Promises/A+ specification requires that Promise\n * callbacks must only be invoked from a call stack that only contains Promise\n * implementation code, which we accomplish by invoking callback execution after\n * a timeout. If {@code startExecution_} is called multiple times for the same\n * Promise, the callback chain will be evaluated only once. Additional callbacks\n * may be added during the evaluation phase, and will be executed in the same\n * event loop.\n *\n * All Promises added to the waiting list during the same browser event loop\n * will be executed in one batch to avoid using a separate timeout per Promise.\n *\n * @private\n */\nCancellablePromise.prototype.scheduleCallbacks_ = function () {\n  if (!this.executing_) {\n    this.executing_ = true;\n    _metal.async.run(this.executeCallbacks_, this);\n  }\n};\n\n/**\n * Executes all pending callbacks for this Promise.\n *\n * @private\n */\nCancellablePromise.prototype.executeCallbacks_ = function () {\n  while (this.callbackEntries_ && this.callbackEntries_.length) {\n    var entries = this.callbackEntries_;\n    this.callbackEntries_ = [];\n\n    for (var i = 0; i < entries.length; i++) {\n      this.executeCallback_(entries[i], this.state_, this.result_);\n    }\n  }\n  this.executing_ = false;\n};\n\n/**\n * Executes a pending callback for this Promise. Invokes an {@code onFulfilled}\n * or {@code onRejected} callback based on the resolved state of the Promise.\n *\n * @param {!CancellablePromise.CallbackEntry_} callbackEntry An entry containing the\n *     onFulfilled and/or onRejected callbacks for this step.\n * @param {CancellablePromise.State_} state The resolution status of the Promise,\n *     either FULFILLED or REJECTED.\n * @param {*} result The resolved result of the Promise.\n * @private\n */\nCancellablePromise.prototype.executeCallback_ = function (callbackEntry, state, result) {\n  if (state === CancellablePromise.State_.FULFILLED) {\n    callbackEntry.onFulfilled(result);\n  } else {\n    this.removeUnhandledRejection_();\n    callbackEntry.onRejected(result);\n  }\n};\n\n/**\n * Marks this rejected Promise as having being handled. Also marks any parent\n * Promises in the rejected state as handled. The rejection handler will no\n * longer be invoked for this Promise (if it has not been called already).\n *\n * @private\n */\nCancellablePromise.prototype.removeUnhandledRejection_ = function () {\n  var p;\n  if (CancellablePromise.UNHANDLED_REJECTION_DELAY > 0) {\n    for (p = this; p && p.unhandledRejectionId_; p = p.parent_) {\n      clearTimeout(p.unhandledRejectionId_);\n      p.unhandledRejectionId_ = 0;\n    }\n  } else if (CancellablePromise.UNHANDLED_REJECTION_DELAY === 0) {\n    for (p = this; p && p.hadUnhandledRejection_; p = p.parent_) {\n      p.hadUnhandledRejection_ = false;\n    }\n  }\n};\n\n/**\n * Marks this rejected Promise as unhandled. If no {@code onRejected} callback\n * is called for this Promise before the {@code UNHANDLED_REJECTION_DELAY}\n * expires, the reason will be passed to the unhandled rejection handler. The\n * handler typically rethrows the rejection reason so that it becomes visible in\n * the developer console.\n *\n * @param {!CancellablePromise} promise The rejected Promise.\n * @param {*} reason The Promise rejection reason.\n * @private\n */\nCancellablePromise.addUnhandledRejection_ = function (promise, reason) {\n  if (CancellablePromise.UNHANDLED_REJECTION_DELAY > 0) {\n    promise.unhandledRejectionId_ = setTimeout(function () {\n      CancellablePromise.handleRejection_.call(null, reason);\n    }, CancellablePromise.UNHANDLED_REJECTION_DELAY);\n  } else if (CancellablePromise.UNHANDLED_REJECTION_DELAY === 0) {\n    promise.hadUnhandledRejection_ = true;\n    _metal.async.run(function () {\n      if (promise.hadUnhandledRejection_) {\n        CancellablePromise.handleRejection_.call(null, reason);\n      }\n    });\n  }\n};\n\n/**\n * A method that is invoked with the rejection reasons for Promises that are\n * rejected but have no {@code onRejected} callbacks registered yet.\n * @type {function(*)}\n * @private\n */\nCancellablePromise.handleRejection_ = _metal.async.throwException;\n\n/**\n * Sets a handler that will be called with reasons from unhandled rejected\n * Promises. If the rejected Promise (or one of its descendants) has an\n * {@code onRejected} callback registered, the rejection will be considered\n * handled, and the rejection handler will not be called.\n *\n * By default, unhandled rejections are rethrown so that the error may be\n * captured by the developer console or a {@code window.onerror} handler.\n *\n * @param {function(*)} handler A function that will be called with reasons from\n *     rejected Promises. Defaults to {@code async.throwException}.\n */\nCancellablePromise.setUnhandledRejectionHandler = function (handler) {\n  CancellablePromise.handleRejection_ = handler;\n};\n\n/**\n * Error used as a rejection reason for canceled Promises.\n *\n * @param {string=} opt_message\n * @constructor\n * @extends {Error}\n * @final\n */\nCancellablePromise.CancellationError = function (_Error) {\n  _inherits(_class, _Error);\n\n  function _class(opt_message) {\n    _classCallCheck(this, _class);\n\n    var _this = _possibleConstructorReturn(this, _Error.call(this, opt_message));\n\n    if (opt_message) {\n      _this.message = opt_message;\n    }\n    return _this;\n  }\n\n  return _class;\n}(Error);\n\n/** @override */\nCancellablePromise.CancellationError.prototype.name = 'cancel';\n\nexports.CancellablePromise = CancellablePromise;\nexports.default = CancellablePromise;"
            },
            {
              "id": 3,
              "identifier": "/Users/Liferay/trampo/senna.js/node_modules/metal-dom/lib/dom.js",
              "name": "./node_modules/metal-dom/lib/dom.js",
              "index": 32,
              "index2": 31,
              "size": 1030,
              "cacheable": true,
              "built": true,
              "optional": false,
              "prefetched": false,
              "chunks": [
                0
              ],
              "assets": [],
              "issuer": "/Users/Liferay/trampo/senna.js/node_modules/metal-dom/lib/all/dom.js",
              "issuerId": 7,
              "issuerName": "./node_modules/metal-dom/lib/all/dom.js",
              "profile": {
                "factory": 8,
                "building": 33
              },
              "failed": false,
              "errors": 0,
              "warnings": 0,
              "reasons": [
                {
                  "moduleId": 7,
                  "moduleIdentifier": "/Users/Liferay/trampo/senna.js/node_modules/metal-dom/lib/all/dom.js",
                  "module": "./node_modules/metal-dom/lib/all/dom.js",
                  "moduleName": "./node_modules/metal-dom/lib/all/dom.js",
                  "type": "cjs require",
                  "userRequest": "../dom",
                  "loc": "8:11-28"
                },
                {
                  "moduleId": 16,
                  "moduleIdentifier": "/Users/Liferay/trampo/senna.js/node_modules/metal-dom/lib/features.js",
                  "module": "./node_modules/metal-dom/lib/features.js",
                  "moduleName": "./node_modules/metal-dom/lib/features.js",
                  "type": "cjs require",
                  "userRequest": "./dom",
                  "loc": "9:11-27"
                },
                {
                  "moduleId": 44,
                  "moduleIdentifier": "/Users/Liferay/trampo/senna.js/node_modules/metal-dom/lib/DomEventEmitterProxy.js",
                  "module": "./node_modules/metal-dom/lib/DomEventEmitterProxy.js",
                  "moduleName": "./node_modules/metal-dom/lib/DomEventEmitterProxy.js",
                  "type": "cjs require",
                  "userRequest": "./dom",
                  "loc": "11:11-27"
                },
                {
                  "moduleId": 45,
                  "moduleIdentifier": "/Users/Liferay/trampo/senna.js/node_modules/metal-dom/lib/globalEval.js",
                  "module": "./node_modules/metal-dom/lib/globalEval.js",
                  "moduleName": "./node_modules/metal-dom/lib/globalEval.js",
                  "type": "cjs require",
                  "userRequest": "./dom",
                  "loc": "11:11-27"
                },
                {
                  "moduleId": 46,
                  "moduleIdentifier": "/Users/Liferay/trampo/senna.js/node_modules/metal-dom/lib/globalEvalStyles.js",
                  "module": "./node_modules/metal-dom/lib/globalEvalStyles.js",
                  "moduleName": "./node_modules/metal-dom/lib/globalEvalStyles.js",
                  "type": "cjs require",
                  "userRequest": "./dom",
                  "loc": "11:11-27"
                },
                {
                  "moduleId": 47,
                  "moduleIdentifier": "/Users/Liferay/trampo/senna.js/node_modules/metal-dom/lib/events.js",
                  "module": "./node_modules/metal-dom/lib/events.js",
                  "moduleName": "./node_modules/metal-dom/lib/events.js",
                  "type": "cjs require",
                  "userRequest": "./dom",
                  "loc": "3:11-27"
                }
              ],
              "usedExports": true,
              "providedExports": null,
              "optimizationBailout": [
                "ModuleConcatenation bailout: Module is not an ECMAScript module"
              ],
              "depth": 3,
              "source": "'use strict';\n\n// This file exists just for backwards compatibility, making sure that old\n// default imports for this file still work. It's best to use the named exports\n// for each function instead though, since that allows bundlers like Rollup to\n// reduce the bundle size by removing unused code.\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.dom = undefined;\n\nvar _domNamed = require('./domNamed');\n\nObject.keys(_domNamed).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _domNamed[key];\n    }\n  });\n});\n\nvar dom = _interopRequireWildcard(_domNamed);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nexports.default = dom;\nexports.dom = dom;"
            },
            {
              "id": 4,
              "identifier": "/Users/Liferay/trampo/senna.js/node_modules/metal-uri/node.js",
              "name": "./node_modules/metal-uri/node.js",
              "index": 3,
              "index2": 17,
              "size": 592,
              "cacheable": true,
              "built": true,
              "optional": false,
              "prefetched": false,
              "chunks": [
                0
              ],
              "assets": [],
              "issuer": "/Users/Liferay/trampo/senna.js/node_modules/babel-loader/lib/index.js??ref--0!/Users/Liferay/trampo/senna.js/src/utils/utils.js",
              "issuerId": 5,
              "issuerName": "./src/utils/utils.js",
              "profile": {
                "factory": 792,
                "building": 6
              },
              "failed": false,
              "errors": 0,
              "warnings": 0,
              "reasons": [
                {
                  "moduleId": 5,
                  "moduleIdentifier": "/Users/Liferay/trampo/senna.js/node_modules/babel-loader/lib/index.js??ref--0!/Users/Liferay/trampo/senna.js/src/utils/utils.js",
                  "module": "./src/utils/utils.js",
                  "moduleName": "./src/utils/utils.js",
                  "type": "amd require",
                  "userRequest": "metal-uri",
                  "loc": "1:0-148:2"
                },
                {
                  "moduleId": 13,
                  "moduleIdentifier": "/Users/Liferay/trampo/senna.js/node_modules/babel-loader/lib/index.js??ref--0!/Users/Liferay/trampo/senna.js/src/app/App.js",
                  "module": "./src/app/App.js",
                  "moduleName": "./src/app/App.js",
                  "type": "amd require",
                  "userRequest": "metal-uri",
                  "loc": "1:0-1185:2"
                },
                {
                  "moduleId": 18,
                  "moduleIdentifier": "/Users/Liferay/trampo/senna.js/node_modules/babel-loader/lib/index.js??ref--0!/Users/Liferay/trampo/senna.js/src/screen/HtmlScreen.js",
                  "module": "./src/screen/HtmlScreen.js",
                  "moduleName": "./src/screen/HtmlScreen.js",
                  "type": "amd require",
                  "userRequest": "metal-uri",
                  "loc": "1:0-425:2"
                },
                {
                  "moduleId": 19,
                  "moduleIdentifier": "/Users/Liferay/trampo/senna.js/node_modules/babel-loader/lib/index.js??ref--0!/Users/Liferay/trampo/senna.js/src/screen/RequestScreen.js",
                  "module": "./src/screen/RequestScreen.js",
                  "moduleName": "./src/screen/RequestScreen.js",
                  "type": "amd require",
                  "userRequest": "metal-uri",
                  "loc": "1:0-387:2"
                },
                {
                  "moduleId": 50,
                  "moduleIdentifier": "/Users/Liferay/trampo/senna.js/node_modules/metal-ajax/lib/Ajax.js",
                  "module": "./node_modules/metal-ajax/lib/Ajax.js",
                  "moduleName": "./node_modules/metal-ajax/lib/Ajax.js",
                  "type": "cjs require",
                  "userRequest": "metal-uri",
                  "loc": "11:16-36"
                }
              ],
              "usedExports": true,
              "providedExports": null,
              "optimizationBailout": [
                "ModuleConcatenation bailout: Module is not an ECMAScript module"
              ],
              "depth": 2,
              "source": "'use strict';\n\nvar Uri = require('./lib/Uri').default;\n\nif (typeof URL === 'undefined' && typeof require !== 'undefined') {\n\t// If there is no \"document\", then this should be running in NodeJS or in ReactNative env and\n\t// in this case we should use the \"url\" NPM module as the parse function.\n\t// In ReactNative env \"path\" will be replaced with \"path-browserify\".\n\n\tvar path = require('path');\n\tvar url = require('url');\n\n\tUri.setParseFn(function(urlStr) {\n\t\tvar parsed = url.parse(urlStr);\n\t\tparsed.pathname = path.normalize(parsed.pathname);\n\t\treturn parsed;\n\t});\n}\n\nmodule.exports = Uri;\n"
            },
            {
              "id": 5,
              "identifier": "/Users/Liferay/trampo/senna.js/node_modules/babel-loader/lib/index.js??ref--0!/Users/Liferay/trampo/senna.js/src/utils/utils.js",
              "name": "./src/utils/utils.js",
              "index": 1,
              "index2": 18,
              "size": 4516,
              "cacheable": true,
              "built": true,
              "optional": false,
              "prefetched": false,
              "chunks": [
                0
              ],
              "assets": [],
              "issuer": "/Users/Liferay/trampo/senna.js/node_modules/babel-loader/lib/index.js??ref--0!/Users/Liferay/trampo/senna.js/src/senna.js",
              "issuerId": 21,
              "issuerName": "./src/senna.js",
              "profile": {
                "factory": 17,
                "building": 123
              },
              "failed": false,
              "errors": 0,
              "warnings": 0,
              "reasons": [
                {
                  "moduleId": 13,
                  "moduleIdentifier": "/Users/Liferay/trampo/senna.js/node_modules/babel-loader/lib/index.js??ref--0!/Users/Liferay/trampo/senna.js/src/app/App.js",
                  "module": "./src/app/App.js",
                  "moduleName": "./src/app/App.js",
                  "type": "amd require",
                  "userRequest": "../utils/utils",
                  "loc": "1:0-1185:2"
                },
                {
                  "moduleId": 18,
                  "moduleIdentifier": "/Users/Liferay/trampo/senna.js/node_modules/babel-loader/lib/index.js??ref--0!/Users/Liferay/trampo/senna.js/src/screen/HtmlScreen.js",
                  "module": "./src/screen/HtmlScreen.js",
                  "moduleName": "./src/screen/HtmlScreen.js",
                  "type": "amd require",
                  "userRequest": "../utils/utils",
                  "loc": "1:0-425:2"
                },
                {
                  "moduleId": 19,
                  "moduleIdentifier": "/Users/Liferay/trampo/senna.js/node_modules/babel-loader/lib/index.js??ref--0!/Users/Liferay/trampo/senna.js/src/screen/RequestScreen.js",
                  "module": "./src/screen/RequestScreen.js",
                  "moduleName": "./src/screen/RequestScreen.js",
                  "type": "amd require",
                  "userRequest": "../utils/utils",
                  "loc": "1:0-387:2"
                },
                {
                  "moduleId": 21,
                  "moduleIdentifier": "/Users/Liferay/trampo/senna.js/node_modules/babel-loader/lib/index.js??ref--0!/Users/Liferay/trampo/senna.js/src/senna.js",
                  "module": "./src/senna.js",
                  "moduleName": "./src/senna.js",
                  "type": "amd require",
                  "userRequest": "./utils/utils",
                  "loc": "1:0-37:2"
                }
              ],
              "usedExports": true,
              "providedExports": null,
              "optimizationBailout": [
                "ModuleConcatenation bailout: Module is not an ECMAScript module"
              ],
              "depth": 1,
              "source": "define([\"exports\", \"../globals/globals\", \"metal-uri\"], function (exports, _globals, _metalUri) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n\n  var _globals2 = _interopRequireDefault(_globals);\n\n  var _metalUri2 = _interopRequireDefault(_metalUri);\n\n  function _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n      default: obj\n    };\n  }\n\n  function _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n      throw new TypeError(\"Cannot call a class as a function\");\n    }\n  }\n\n  function _defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  function _createClass(Constructor, protoProps, staticProps) {\n    if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) _defineProperties(Constructor, staticProps);\n    return Constructor;\n  }\n\n  var utils = function () {\n    function utils() {\n      _classCallCheck(this, utils);\n    }\n\n    _createClass(utils, null, [{\n      key: \"copyNodeAttributes\",\n      value: function copyNodeAttributes(source, target) {\n        Array.prototype.slice.call(source.attributes).forEach(function (attribute) {\n          return target.setAttribute(attribute.name, attribute.value);\n        });\n      }\n    }, {\n      key: \"getCurrentBrowserPath\",\n      value: function getCurrentBrowserPath() {\n        return this.getCurrentBrowserPathWithoutHash() + _globals2.default.window.location.hash;\n      }\n    }, {\n      key: \"getCurrentBrowserPathWithoutHash\",\n      value: function getCurrentBrowserPathWithoutHash() {\n        return _globals2.default.window.location.pathname + _globals2.default.window.location.search;\n      }\n    }, {\n      key: \"getNodeOffset\",\n      value: function getNodeOffset(node) {\n        var offsetLeft = 0,\n            offsetTop = 0;\n\n        do {\n          offsetLeft += node.offsetLeft;\n          offsetTop += node.offsetTop;\n          node = node.offsetParent;\n        } while (node);\n\n        return {\n          offsetLeft: offsetLeft,\n          offsetTop: offsetTop\n        };\n      }\n    }, {\n      key: \"getUrlPath\",\n      value: function getUrlPath(url) {\n        var uri = new _metalUri2.default(url);\n        return uri.getPathname() + uri.getSearch() + uri.getHash();\n      }\n    }, {\n      key: \"getUrlPathWithoutHash\",\n      value: function getUrlPathWithoutHash(url) {\n        var uri = new _metalUri2.default(url);\n        return uri.getPathname() + uri.getSearch();\n      }\n    }, {\n      key: \"getUrlPathWithoutHashAndSearch\",\n      value: function getUrlPathWithoutHashAndSearch(url) {\n        var uri = new _metalUri2.default(url);\n        return uri.getPathname();\n      }\n    }, {\n      key: \"isCurrentBrowserPath\",\n      value: function isCurrentBrowserPath(url) {\n        if (url) {\n          var currentBrowserPath = this.getCurrentBrowserPathWithoutHash(); // the getUrlPath will create a Uri and will normalize the path and\n          // remove the trailling '/' for properly comparing paths.\n\n          return utils.getUrlPathWithoutHash(url) === this.getUrlPath(currentBrowserPath);\n        }\n\n        return false;\n      }\n    }, {\n      key: \"isHtml5HistorySupported\",\n      value: function isHtml5HistorySupported() {\n        return !!(_globals2.default.window.history && _globals2.default.window.history.pushState);\n      }\n    }, {\n      key: \"isWebUri\",\n      value: function isWebUri(url) {\n        try {\n          return new _metalUri2.default(url);\n        } catch (err) {\n          console.error(\"\".concat(err.message, \" \").concat(url));\n          return false;\n        }\n      }\n    }, {\n      key: \"clearNodeAttributes\",\n      value: function clearNodeAttributes(node) {\n        Array.prototype.slice.call(node.attributes).forEach(function (attribute) {\n          return node.removeAttribute(attribute.name);\n        });\n      }\n    }, {\n      key: \"removePathTrailingSlash\",\n      value: function removePathTrailingSlash(path) {\n        var length = path ? path.length : 0;\n\n        if (length > 1 && path[length - 1] === '/') {\n          path = path.substr(0, length - 1);\n        }\n\n        return path;\n      }\n    }]);\n\n    return utils;\n  }();\n\n  exports.default = utils;\n});"
            },
            {
              "id": 6,
              "identifier": "/Users/Liferay/trampo/senna.js/node_modules/metal-events/lib/events.js",
              "name": "./node_modules/metal-events/lib/events.js",
              "index": 24,
              "index2": 24,
              "size": 974,
              "cacheable": true,
              "built": true,
              "optional": false,
              "prefetched": false,
              "chunks": [
                0
              ],
              "assets": [],
              "issuer": "/Users/Liferay/trampo/senna.js/node_modules/babel-loader/lib/index.js??ref--0!/Users/Liferay/trampo/senna.js/src/app/App.js",
              "issuerId": 13,
              "issuerName": "./src/app/App.js",
              "profile": {
                "factory": 459,
                "building": 10
              },
              "failed": false,
              "errors": 0,
              "warnings": 0,
              "reasons": [
                {
                  "moduleId": 13,
                  "moduleIdentifier": "/Users/Liferay/trampo/senna.js/node_modules/babel-loader/lib/index.js??ref--0!/Users/Liferay/trampo/senna.js/src/app/App.js",
                  "module": "./src/app/App.js",
                  "moduleName": "./src/app/App.js",
                  "type": "amd require",
                  "userRequest": "metal-events",
                  "loc": "1:0-1185:2"
                },
                {
                  "moduleId": 15,
                  "moduleIdentifier": "/Users/Liferay/trampo/senna.js/node_modules/metal-dom/lib/DomEventHandle.js",
                  "module": "./node_modules/metal-dom/lib/DomEventHandle.js",
                  "moduleName": "./node_modules/metal-dom/lib/DomEventHandle.js",
                  "type": "cjs require",
                  "userRequest": "metal-events",
                  "loc": "9:19-42"
                },
                {
                  "moduleId": 43,
                  "moduleIdentifier": "/Users/Liferay/trampo/senna.js/node_modules/metal-dom/lib/DomDelegatedEventHandle.js",
                  "module": "./node_modules/metal-dom/lib/DomDelegatedEventHandle.js",
                  "moduleName": "./node_modules/metal-dom/lib/DomDelegatedEventHandle.js",
                  "type": "cjs require",
                  "userRequest": "metal-events",
                  "loc": "15:19-42"
                },
                {
                  "moduleId": 44,
                  "moduleIdentifier": "/Users/Liferay/trampo/senna.js/node_modules/metal-dom/lib/DomEventEmitterProxy.js",
                  "module": "./node_modules/metal-dom/lib/DomEventEmitterProxy.js",
                  "moduleName": "./node_modules/metal-dom/lib/DomEventEmitterProxy.js",
                  "type": "cjs require",
                  "userRequest": "metal-events",
                  "loc": "13:19-42"
                }
              ],
              "usedExports": true,
              "providedExports": null,
              "optimizationBailout": [
                "ModuleConcatenation bailout: Module is not an ECMAScript module"
              ],
              "depth": 2,
              "source": "'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.EventHandler = exports.EventHandle = exports.EventEmitterProxy = exports.EventEmitter = undefined;\n\nvar _EventEmitter = require('./EventEmitter');\n\nvar _EventEmitter2 = _interopRequireDefault(_EventEmitter);\n\nvar _EventEmitterProxy = require('./EventEmitterProxy');\n\nvar _EventEmitterProxy2 = _interopRequireDefault(_EventEmitterProxy);\n\nvar _EventHandle = require('./EventHandle');\n\nvar _EventHandle2 = _interopRequireDefault(_EventHandle);\n\nvar _EventHandler = require('./EventHandler');\n\nvar _EventHandler2 = _interopRequireDefault(_EventHandler);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = _EventEmitter2.default;\nexports.EventEmitter = _EventEmitter2.default;\nexports.EventEmitterProxy = _EventEmitterProxy2.default;\nexports.EventHandle = _EventHandle2.default;\nexports.EventHandler = _EventHandler2.default;"
            },
            {
              "id": 7,
              "identifier": "/Users/Liferay/trampo/senna.js/node_modules/metal-dom/lib/all/dom.js",
              "name": "./node_modules/metal-dom/lib/all/dom.js",
              "index": 31,
              "index2": 37,
              "size": 1648,
              "cacheable": true,
              "built": true,
              "optional": false,
              "prefetched": false,
              "chunks": [
                0
              ],
              "assets": [],
              "issuer": "/Users/Liferay/trampo/senna.js/node_modules/babel-loader/lib/index.js??ref--0!/Users/Liferay/trampo/senna.js/src/app/App.js",
              "issuerId": 13,
              "issuerName": "./src/app/App.js",
              "profile": {
                "factory": 461,
                "building": 28
              },
              "failed": false,
              "errors": 0,
              "warnings": 0,
              "reasons": [
                {
                  "moduleId": 10,
                  "moduleIdentifier": "/Users/Liferay/trampo/senna.js/node_modules/babel-loader/lib/index.js??ref--0!/Users/Liferay/trampo/senna.js/src/screen/Screen.js",
                  "module": "./src/screen/Screen.js",
                  "moduleName": "./src/screen/Screen.js",
                  "type": "amd require",
                  "userRequest": "metal-dom",
                  "loc": "1:0-264:2"
                },
                {
                  "moduleId": 13,
                  "moduleIdentifier": "/Users/Liferay/trampo/senna.js/node_modules/babel-loader/lib/index.js??ref--0!/Users/Liferay/trampo/senna.js/src/app/App.js",
                  "module": "./src/app/App.js",
                  "moduleName": "./src/app/App.js",
                  "type": "amd require",
                  "userRequest": "metal-dom",
                  "loc": "1:0-1185:2"
                },
                {
                  "moduleId": 17,
                  "moduleIdentifier": "/Users/Liferay/trampo/senna.js/node_modules/babel-loader/lib/index.js??ref--0!/Users/Liferay/trampo/senna.js/src/surface/Surface.js",
                  "module": "./src/surface/Surface.js",
                  "moduleName": "./src/surface/Surface.js",
                  "type": "amd require",
                  "userRequest": "metal-dom",
                  "loc": "1:0-352:2"
                },
                {
                  "moduleId": 18,
                  "moduleIdentifier": "/Users/Liferay/trampo/senna.js/node_modules/babel-loader/lib/index.js??ref--0!/Users/Liferay/trampo/senna.js/src/screen/HtmlScreen.js",
                  "module": "./src/screen/HtmlScreen.js",
                  "moduleName": "./src/screen/HtmlScreen.js",
                  "type": "amd require",
                  "userRequest": "metal-dom",
                  "loc": "1:0-425:2"
                }
              ],
              "usedExports": true,
              "providedExports": null,
              "optimizationBailout": [
                "ModuleConcatenation bailout: Module is not an ECMAScript module"
              ],
              "depth": 2,
              "source": "'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.globalEvalStyles = exports.globalEval = exports.features = exports.DomEventHandle = exports.DomEventEmitterProxy = exports.domData = undefined;\n\nvar _dom = require('../dom');\n\nObject.keys(_dom).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _dom[key];\n    }\n  });\n});\n\nvar _dom2 = _interopRequireDefault(_dom);\n\nvar _domData = require('../domData');\n\nvar _domData2 = _interopRequireDefault(_domData);\n\nvar _DomEventEmitterProxy = require('../DomEventEmitterProxy');\n\nvar _DomEventEmitterProxy2 = _interopRequireDefault(_DomEventEmitterProxy);\n\nvar _DomEventHandle = require('../DomEventHandle');\n\nvar _DomEventHandle2 = _interopRequireDefault(_DomEventHandle);\n\nvar _features = require('../features');\n\nvar _features2 = _interopRequireDefault(_features);\n\nvar _globalEval = require('../globalEval');\n\nvar _globalEval2 = _interopRequireDefault(_globalEval);\n\nvar _globalEvalStyles = require('../globalEvalStyles');\n\nvar _globalEvalStyles2 = _interopRequireDefault(_globalEvalStyles);\n\nrequire('../events');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.domData = _domData2.default;\nexports.DomEventEmitterProxy = _DomEventEmitterProxy2.default;\nexports.DomEventHandle = _DomEventHandle2.default;\nexports.features = _features2.default;\nexports.globalEval = _globalEval2.default;\nexports.globalEvalStyles = _globalEvalStyles2.default;\nexports.default = _dom2.default;"
            },
            {
              "id": 8,
              "identifier": "/Users/Liferay/trampo/senna.js/node_modules/metal-dom/lib/domData.js",
              "name": "./node_modules/metal-dom/lib/domData.js",
              "index": 34,
              "index2": 27,
              "size": 1907,
              "cacheable": true,
              "built": true,
              "optional": false,
              "prefetched": false,
              "chunks": [
                0
              ],
              "assets": [],
              "issuer": "/Users/Liferay/trampo/senna.js/node_modules/metal-dom/lib/all/dom.js",
              "issuerId": 7,
              "issuerName": "./node_modules/metal-dom/lib/all/dom.js",
              "profile": {
                "factory": 8,
                "building": 44
              },
              "failed": false,
              "errors": 0,
              "warnings": 0,
              "reasons": [
                {
                  "moduleId": 7,
                  "moduleIdentifier": "/Users/Liferay/trampo/senna.js/node_modules/metal-dom/lib/all/dom.js",
                  "module": "./node_modules/metal-dom/lib/all/dom.js",
                  "moduleName": "./node_modules/metal-dom/lib/all/dom.js",
                  "type": "cjs require",
                  "userRequest": "../domData",
                  "loc": "22:15-36"
                },
                {
                  "moduleId": 42,
                  "moduleIdentifier": "/Users/Liferay/trampo/senna.js/node_modules/metal-dom/lib/domNamed.js",
                  "module": "./node_modules/metal-dom/lib/domNamed.js",
                  "moduleName": "./node_modules/metal-dom/lib/domNamed.js",
                  "type": "cjs require",
                  "userRequest": "./domData",
                  "loc": "33:15-35"
                },
                {
                  "moduleId": 43,
                  "moduleIdentifier": "/Users/Liferay/trampo/senna.js/node_modules/metal-dom/lib/DomDelegatedEventHandle.js",
                  "module": "./node_modules/metal-dom/lib/DomDelegatedEventHandle.js",
                  "moduleName": "./node_modules/metal-dom/lib/DomDelegatedEventHandle.js",
                  "type": "cjs require",
                  "userRequest": "./domData",
                  "loc": "11:15-35"
                }
              ],
              "usedExports": true,
              "providedExports": null,
              "optimizationBailout": [
                "ModuleConcatenation bailout: Module is not an ECMAScript module"
              ],
              "depth": 3,
              "source": "'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar METAL_DATA = '__metal_data__';\n\nvar domData = function () {\n\tfunction domData() {\n\t\t_classCallCheck(this, domData);\n\t}\n\n\t_createClass(domData, null, [{\n\t\tkey: 'get',\n\n\t\t/**\n   * Gets Metal.js's data for the given element.\n   * @param {!Element} element\n   * @param {string=} opt_name Optional property from the data to be returned.\n   * @param {*} opt_initialVal Optinal value to the set the requested property\n   *     to if it doesn't exist yet in the data.\n   * @return {!Object}\n   */\n\t\tvalue: function get(element, opt_name, opt_initialVal) {\n\t\t\tif (!element[METAL_DATA]) {\n\t\t\t\telement[METAL_DATA] = {};\n\t\t\t}\n\t\t\tif (!opt_name) {\n\t\t\t\treturn element[METAL_DATA];\n\t\t\t}\n\t\t\tif (!element[METAL_DATA][opt_name] && opt_initialVal) {\n\t\t\t\telement[METAL_DATA][opt_name] = opt_initialVal;\n\t\t\t}\n\t\t\treturn element[METAL_DATA][opt_name];\n\t\t}\n\n\t\t/**\n   * Checks if the given element has data stored in it.\n   * @param {!Element} element\n   * @return {boolean}\n   */\n\n\t}, {\n\t\tkey: 'has',\n\t\tvalue: function has(element) {\n\t\t\treturn !!element[METAL_DATA];\n\t\t}\n\t}]);\n\n\treturn domData;\n}();\n\nexports.default = domData;"
            },
            {
              "id": 9,
              "identifier": "/Users/Liferay/trampo/senna.js/node_modules/babel-loader/lib/index.js??ref--0!/Users/Liferay/trampo/senna.js/src/route/Route.js",
              "name": "./src/route/Route.js",
              "index": 42,
              "index2": 39,
              "size": 3265,
              "cacheable": true,
              "built": true,
              "optional": false,
              "prefetched": false,
              "chunks": [
                0
              ],
              "assets": [],
              "issuer": "/Users/Liferay/trampo/senna.js/node_modules/babel-loader/lib/index.js??ref--0!/Users/Liferay/trampo/senna.js/src/senna.js",
              "issuerId": 21,
              "issuerName": "./src/senna.js",
              "profile": {
                "factory": 18,
                "building": 708,
                "dependencies": 208
              },
              "failed": false,
              "errors": 0,
              "warnings": 0,
              "reasons": [
                {
                  "moduleId": 13,
                  "moduleIdentifier": "/Users/Liferay/trampo/senna.js/node_modules/babel-loader/lib/index.js??ref--0!/Users/Liferay/trampo/senna.js/src/app/App.js",
                  "module": "./src/app/App.js",
                  "moduleName": "./src/app/App.js",
                  "type": "amd require",
                  "userRequest": "../route/Route",
                  "loc": "1:0-1185:2"
                },
                {
                  "moduleId": 21,
                  "moduleIdentifier": "/Users/Liferay/trampo/senna.js/node_modules/babel-loader/lib/index.js??ref--0!/Users/Liferay/trampo/senna.js/src/senna.js",
                  "module": "./src/senna.js",
                  "moduleName": "./src/senna.js",
                  "type": "amd require",
                  "userRequest": "./route/Route",
                  "loc": "1:0-37:2"
                },
                {
                  "moduleId": 36,
                  "moduleIdentifier": "/Users/Liferay/trampo/senna.js/node_modules/babel-loader/lib/index.js??ref--0!/Users/Liferay/trampo/senna.js/src/app/AppDataAttributeHandler.js",
                  "module": "./src/app/AppDataAttributeHandler.js",
                  "moduleName": "./src/app/AppDataAttributeHandler.js",
                  "type": "amd require",
                  "userRequest": "../route/Route",
                  "loc": "1:0-300:2"
                }
              ],
              "usedExports": true,
              "providedExports": null,
              "optimizationBailout": [
                "ModuleConcatenation bailout: Module is not an ECMAScript module"
              ],
              "depth": 1,
              "source": "define([\"exports\", \"metal\", \"metal-path-parser\"], function (exports, _metal, _metalPathParser) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n\n  function _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n      throw new TypeError(\"Cannot call a class as a function\");\n    }\n  }\n\n  function _defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  function _createClass(Constructor, protoProps, staticProps) {\n    if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) _defineProperties(Constructor, staticProps);\n    return Constructor;\n  }\n\n  var Route = function () {\n    /**\n     * Route class.\n     * @param {!string|RegExp|Function} path\n     * @param {!Function} handler\n     * @constructor\n     */\n    function Route(path, handler) {\n      _classCallCheck(this, Route);\n\n      if (!(0, _metal.isDefAndNotNull)(path)) {\n        throw new Error('Route path not specified.');\n      }\n\n      if (!(0, _metal.isFunction)(handler)) {\n        throw new Error('Route handler is not a function.');\n      }\n      /**\n       * Defines the handler which will execute once a URL in the application\n       * matches the path.\n       * @type {!Function}\n       * @protected\n       */\n\n\n      this.handler = handler;\n      /**\n       * Defines the path which will trigger the route handler.\n       * @type {!string|RegExp|Function}\n       * @protected\n       */\n\n      this.path = path;\n    }\n    /**\n    * Builds parsed data (regex and tokens) for this route.\n    * @return {!Object}\n    * @protected\n    */\n\n\n    _createClass(Route, [{\n      key: \"buildParsedData_\",\n      value: function buildParsedData_() {\n        if (!this.parsedData_) {\n          var tokens = (0, _metalPathParser.parse)(this.path);\n          var regex = (0, _metalPathParser.toRegex)(tokens);\n          this.parsedData_ = {\n            regex: regex,\n            tokens: tokens\n          };\n        }\n\n        return this.parsedData_;\n      }\n    }, {\n      key: \"extractParams\",\n      value: function extractParams(path) {\n        if ((0, _metal.isString)(this.path)) {\n          return (0, _metalPathParser.extractData)(this.buildParsedData_().tokens, path);\n        }\n\n        return {};\n      }\n    }, {\n      key: \"getHandler\",\n      value: function getHandler() {\n        return this.handler;\n      }\n    }, {\n      key: \"getPath\",\n      value: function getPath() {\n        return this.path;\n      }\n    }, {\n      key: \"matchesPath\",\n      value: function matchesPath(value) {\n        var path = this.path;\n\n        if ((0, _metal.isFunction)(path)) {\n          return path(value);\n        }\n\n        if ((0, _metal.isString)(path)) {\n          path = this.buildParsedData_().regex;\n        }\n\n        if (path instanceof RegExp) {\n          return value.search(path) > -1;\n        }\n\n        return false;\n      }\n    }]);\n\n    return Route;\n  }();\n\n  exports.default = Route;\n});"
            },
            {
              "id": 10,
              "identifier": "/Users/Liferay/trampo/senna.js/node_modules/babel-loader/lib/index.js??ref--0!/Users/Liferay/trampo/senna.js/src/screen/Screen.js",
              "name": "./src/screen/Screen.js",
              "index": 44,
              "index2": 41,
              "size": 7267,
              "cacheable": true,
              "built": true,
              "optional": false,
              "prefetched": false,
              "chunks": [
                0
              ],
              "assets": [],
              "issuer": "/Users/Liferay/trampo/senna.js/node_modules/babel-loader/lib/index.js??ref--0!/Users/Liferay/trampo/senna.js/src/senna.js",
              "issuerId": 21,
              "issuerName": "./src/senna.js",
              "profile": {
                "factory": 18,
                "building": 686,
                "dependencies": 232
              },
              "failed": false,
              "errors": 0,
              "warnings": 0,
              "reasons": [
                {
                  "moduleId": 13,
                  "moduleIdentifier": "/Users/Liferay/trampo/senna.js/node_modules/babel-loader/lib/index.js??ref--0!/Users/Liferay/trampo/senna.js/src/app/App.js",
                  "module": "./src/app/App.js",
                  "moduleName": "./src/app/App.js",
                  "type": "amd require",
                  "userRequest": "../screen/Screen",
                  "loc": "1:0-1185:2"
                },
                {
                  "moduleId": 19,
                  "moduleIdentifier": "/Users/Liferay/trampo/senna.js/node_modules/babel-loader/lib/index.js??ref--0!/Users/Liferay/trampo/senna.js/src/screen/RequestScreen.js",
                  "module": "./src/screen/RequestScreen.js",
                  "moduleName": "./src/screen/RequestScreen.js",
                  "type": "amd require",
                  "userRequest": "./Screen",
                  "loc": "1:0-387:2"
                },
                {
                  "moduleId": 21,
                  "moduleIdentifier": "/Users/Liferay/trampo/senna.js/node_modules/babel-loader/lib/index.js??ref--0!/Users/Liferay/trampo/senna.js/src/senna.js",
                  "module": "./src/senna.js",
                  "moduleName": "./src/senna.js",
                  "type": "amd require",
                  "userRequest": "./screen/Screen",
                  "loc": "1:0-37:2"
                }
              ],
              "usedExports": true,
              "providedExports": null,
              "optimizationBailout": [
                "ModuleConcatenation bailout: Module is not an ECMAScript module"
              ],
              "depth": 1,
              "source": "define([\"exports\", \"metal\", \"metal-dom\", \"../cacheable/Cacheable\", \"metal-promise\"], function (exports, _metal, _metalDom, _Cacheable2, _metalPromise) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n\n  var _Cacheable3 = _interopRequireDefault(_Cacheable2);\n\n  var _metalPromise2 = _interopRequireDefault(_metalPromise);\n\n  function _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n      default: obj\n    };\n  }\n\n  function _typeof(obj) {\n    if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n      _typeof = function _typeof(obj) {\n        return typeof obj;\n      };\n    } else {\n      _typeof = function _typeof(obj) {\n        return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n      };\n    }\n\n    return _typeof(obj);\n  }\n\n  function _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n      throw new TypeError(\"Cannot call a class as a function\");\n    }\n  }\n\n  function _defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  function _createClass(Constructor, protoProps, staticProps) {\n    if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) _defineProperties(Constructor, staticProps);\n    return Constructor;\n  }\n\n  function _possibleConstructorReturn(self, call) {\n    if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n      return call;\n    }\n\n    if (!self) {\n      throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }\n\n    return self;\n  }\n\n  function _get(object, property, receiver) {\n    if (object === null) object = Function.prototype;\n    var desc = Object.getOwnPropertyDescriptor(object, property);\n\n    if (desc === undefined) {\n      var parent = Object.getPrototypeOf(object);\n\n      if (parent === null) {\n        return undefined;\n      } else {\n        return _get(parent, property, receiver);\n      }\n    } else if (\"value\" in desc) {\n      return desc.value;\n    } else {\n      var getter = desc.get;\n\n      if (getter === undefined) {\n        return undefined;\n      }\n\n      return getter.call(receiver);\n    }\n  }\n\n  function _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n      throw new TypeError(\"Super expression must either be null or a function\");\n    }\n\n    subClass.prototype = Object.create(superClass && superClass.prototype, {\n      constructor: {\n        value: subClass,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n    if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n  }\n\n  var Screen = function (_Cacheable) {\n    _inherits(Screen, _Cacheable);\n\n    /**\n     * Screen class is a special type of route handler that provides helper\n     * utilities that adds lifecycle and methods to provide content to each\n     * registered surface.\n     * @constructor\n     * @extends {Cacheable}\n     */\n    function Screen() {\n      var _this;\n\n      _classCallCheck(this, Screen);\n\n      _this = _possibleConstructorReturn(this, (Screen.__proto__ || Object.getPrototypeOf(Screen)).call(this));\n      /**\n       * Holds the screen id.\n       * @type {string}\n       * @protected\n       */\n\n      _this.id = _this.makeId_((0, _metal.getUid)());\n      /**\n       * Holds the screen title. Relevant when the page title should be\n       * upadated when screen is rendered.\n       * @type {?string=}\n       * @default null\n       * @protected\n       */\n\n      _this.title = null;\n      return _this;\n    }\n    /**\n     * Fires when the screen is active. Allows a screen to perform any setup\n     * that requires its DOM to be visible. Lifecycle.\n     */\n\n\n    _createClass(Screen, [{\n      key: \"activate\",\n      value: function activate() {\n        console.log('Screen [' + this + '] activate');\n      }\n    }, {\n      key: \"beforeDeactivate\",\n      value: function beforeDeactivate() {\n        console.log('Screen [' + this + '] beforeDeactivate');\n      }\n    }, {\n      key: \"beforeUpdateHistoryPath\",\n      value: function beforeUpdateHistoryPath(path) {\n        return path;\n      }\n    }, {\n      key: \"beforeUpdateHistoryState\",\n      value: function beforeUpdateHistoryState(state) {\n        return state;\n      }\n    }, {\n      key: \"deactivate\",\n      value: function deactivate() {\n        console.log('Screen [' + this + '] deactivate');\n      }\n    }, {\n      key: \"disposeInternal\",\n      value: function disposeInternal() {\n        _get(Screen.prototype.__proto__ || Object.getPrototypeOf(Screen.prototype), \"disposeInternal\", this).call(this);\n\n        console.log('Screen [' + this + '] dispose');\n      }\n    }, {\n      key: \"evaluateScripts\",\n      value: function evaluateScripts(surfaces) {\n        Object.keys(surfaces).forEach(function (sId) {\n          if (surfaces[sId].activeChild) {\n            _metalDom.globalEval.runScriptsInElement(surfaces[sId].activeChild);\n          }\n        });\n        return _metalPromise2.default.resolve();\n      }\n    }, {\n      key: \"evaluateStyles\",\n      value: function evaluateStyles() {\n        return _metalPromise2.default.resolve();\n      }\n    }, {\n      key: \"flip\",\n      value: function flip(surfaces) {\n        var _this2 = this;\n\n        console.log('Screen [' + this + '] flip');\n        var transitions = [];\n        Object.keys(surfaces).forEach(function (sId) {\n          var surface = surfaces[sId];\n          var deferred = surface.show(_this2.id);\n          transitions.push(deferred);\n        });\n        return _metalPromise2.default.all(transitions);\n      }\n    }, {\n      key: \"getId\",\n      value: function getId() {\n        return this.id;\n      }\n    }, {\n      key: \"getSurfaceContent\",\n      value: function getSurfaceContent() {\n        console.log('Screen [' + this + '] getSurfaceContent');\n      }\n    }, {\n      key: \"getTitle\",\n      value: function getTitle() {\n        return this.title;\n      }\n    }, {\n      key: \"load\",\n      value: function load() {\n        console.log('Screen [' + this + '] load');\n        return _metalPromise2.default.resolve();\n      }\n    }, {\n      key: \"makeId_\",\n      value: function makeId_(id) {\n        return 'screen_' + id;\n      }\n    }, {\n      key: \"setId\",\n      value: function setId(id) {\n        this.id = id;\n      }\n    }, {\n      key: \"setTitle\",\n      value: function setTitle(title) {\n        this.title = title;\n      }\n    }, {\n      key: \"toString\",\n      value: function toString() {\n        return this.id;\n      }\n    }]);\n\n    return Screen;\n  }(_Cacheable3.default);\n\n  /**\n   * @param {*} object\n   * @return {boolean} Whether a given instance implements\n   * <code>Screen</code>.\n   */\n  Screen.isImplementedBy = function (object) {\n    return object instanceof Screen;\n  };\n\n  exports.default = Screen;\n});"
            },
            {
              "id": 11,
              "identifier": "/Users/Liferay/trampo/senna.js/node_modules/metal/lib/core.js",
              "name": "./node_modules/metal/lib/core.js",
              "index": 6,
              "index2": 2,
              "size": 1040,
              "cacheable": true,
              "built": true,
              "optional": false,
              "prefetched": false,
              "chunks": [
                0
              ],
              "assets": [],
              "issuer": "/Users/Liferay/trampo/senna.js/node_modules/metal/lib/metal.js",
              "issuerId": 0,
              "issuerName": "./node_modules/metal/lib/metal.js",
              "profile": {
                "factory": 28,
                "building": 11
              },
              "failed": false,
              "errors": 0,
              "warnings": 0,
              "reasons": [
                {
                  "moduleId": 0,
                  "moduleIdentifier": "/Users/Liferay/trampo/senna.js/node_modules/metal/lib/metal.js",
                  "module": "./node_modules/metal/lib/metal.js",
                  "moduleName": "./node_modules/metal/lib/metal.js",
                  "type": "cjs require",
                  "userRequest": "./core",
                  "loc": "8:12-29"
                },
                {
                  "moduleId": 24,
                  "moduleIdentifier": "/Users/Liferay/trampo/senna.js/node_modules/metal/lib/array/array.js",
                  "module": "./node_modules/metal/lib/array/array.js",
                  "moduleName": "./node_modules/metal/lib/array/array.js",
                  "type": "cjs require",
                  "userRequest": "../core",
                  "loc": "9:12-30"
                }
              ],
              "usedExports": true,
              "providedExports": null,
              "optimizationBailout": [
                "ModuleConcatenation bailout: Module is not an ECMAScript module"
              ],
              "depth": 3,
              "source": "'use strict';\n\n// This file exists just for backwards compatibility, making sure that old\n// default imports for this file still work. It's best to use the named exports\n// for each function instead though, since that allows bundlers like Rollup to\n// reduce the bundle size by removing unused code.\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.core = undefined;\n\nvar _coreNamed = require('./coreNamed');\n\nObject.keys(_coreNamed).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _coreNamed[key];\n    }\n  });\n});\n\nvar core = _interopRequireWildcard(_coreNamed);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nexports.default = core;\nexports.core = core;"
            },
            {
              "id": 12,
              "identifier": "/Users/Liferay/trampo/senna.js/node_modules/metal-structs/lib/all/structs.js",
              "name": "./node_modules/metal-structs/lib/all/structs.js",
              "index": 15,
              "index2": 13,
              "size": 492,
              "cacheable": true,
              "built": true,
              "optional": false,
              "prefetched": false,
              "chunks": [
                0
              ],
              "assets": [],
              "issuer": "/Users/Liferay/trampo/senna.js/node_modules/babel-loader/lib/index.js??ref--0!/Users/Liferay/trampo/senna.js/src/screen/RequestScreen.js",
              "issuerId": 19,
              "issuerName": "./src/screen/RequestScreen.js",
              "profile": {
                "factory": 286,
                "building": 30
              },
              "failed": false,
              "errors": 0,
              "warnings": 0,
              "reasons": [
                {
                  "moduleId": 19,
                  "moduleIdentifier": "/Users/Liferay/trampo/senna.js/node_modules/babel-loader/lib/index.js??ref--0!/Users/Liferay/trampo/senna.js/src/screen/RequestScreen.js",
                  "module": "./src/screen/RequestScreen.js",
                  "moduleName": "./src/screen/RequestScreen.js",
                  "type": "amd require",
                  "userRequest": "metal-structs",
                  "loc": "1:0-387:2"
                },
                {
                  "moduleId": 22,
                  "moduleIdentifier": "/Users/Liferay/trampo/senna.js/node_modules/metal-uri/lib/Uri.js",
                  "module": "./node_modules/metal-uri/lib/Uri.js",
                  "moduleName": "./node_modules/metal-uri/lib/Uri.js",
                  "type": "cjs require",
                  "userRequest": "metal-structs",
                  "loc": "17:20-44"
                }
              ],
              "usedExports": true,
              "providedExports": null,
              "optimizationBailout": [
                "ModuleConcatenation bailout: Module is not an ECMAScript module"
              ],
              "depth": 2,
              "source": "'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.TreeNode = exports.MultiMap = undefined;\n\nvar _MultiMap = require('../MultiMap');\n\nvar _MultiMap2 = _interopRequireDefault(_MultiMap);\n\nvar _TreeNode = require('../TreeNode');\n\nvar _TreeNode2 = _interopRequireDefault(_TreeNode);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.MultiMap = _MultiMap2.default;\nexports.TreeNode = _TreeNode2.default;"
            },
            {
              "id": 13,
              "identifier": "/Users/Liferay/trampo/senna.js/node_modules/babel-loader/lib/index.js??ref--0!/Users/Liferay/trampo/senna.js/src/app/App.js",
              "name": "./src/app/App.js",
              "index": 23,
              "index2": 43,
              "size": 38271,
              "cacheable": true,
              "built": true,
              "optional": false,
              "prefetched": false,
              "chunks": [
                0
              ],
              "assets": [],
              "issuer": "/Users/Liferay/trampo/senna.js/node_modules/babel-loader/lib/index.js??ref--0!/Users/Liferay/trampo/senna.js/src/senna.js",
              "issuerId": 21,
              "issuerName": "./src/senna.js",
              "profile": {
                "factory": 17,
                "building": 458,
                "dependencies": 457
              },
              "failed": false,
              "errors": 0,
              "warnings": 0,
              "reasons": [
                {
                  "moduleId": 21,
                  "moduleIdentifier": "/Users/Liferay/trampo/senna.js/node_modules/babel-loader/lib/index.js??ref--0!/Users/Liferay/trampo/senna.js/src/senna.js",
                  "module": "./src/senna.js",
                  "moduleName": "./src/senna.js",
                  "type": "amd require",
                  "userRequest": "./app/App",
                  "loc": "1:0-37:2"
                },
                {
                  "moduleId": 36,
                  "moduleIdentifier": "/Users/Liferay/trampo/senna.js/node_modules/babel-loader/lib/index.js??ref--0!/Users/Liferay/trampo/senna.js/src/app/AppDataAttributeHandler.js",
                  "module": "./src/app/AppDataAttributeHandler.js",
                  "moduleName": "./src/app/AppDataAttributeHandler.js",
                  "type": "amd require",
                  "userRequest": "./App",
                  "loc": "1:0-300:2"
                }
              ],
              "usedExports": true,
              "providedExports": null,
              "optimizationBailout": [
                "ModuleConcatenation bailout: Module is not an ECMAScript module"
              ],
              "depth": 1,
              "source": "define([\"exports\", \"metal-dom\", \"metal\", \"metal-events\", \"metal-promise\", \"metal-debounce\", \"../globals/globals\", \"../route/Route\", \"../screen/Screen\", \"../surface/Surface\", \"metal-uri\", \"../utils/utils\"], function (exports, _metalDom, _metal, _metalEvents, _metalPromise, _metalDebounce, _globals, _Route, _Screen, _Surface, _metalUri, _utils) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n\n  var _metalPromise2 = _interopRequireDefault(_metalPromise);\n\n  var _metalDebounce2 = _interopRequireDefault(_metalDebounce);\n\n  var _globals2 = _interopRequireDefault(_globals);\n\n  var _Route2 = _interopRequireDefault(_Route);\n\n  var _Screen2 = _interopRequireDefault(_Screen);\n\n  var _Surface2 = _interopRequireDefault(_Surface);\n\n  var _metalUri2 = _interopRequireDefault(_metalUri);\n\n  var _utils2 = _interopRequireDefault(_utils);\n\n  function _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n      default: obj\n    };\n  }\n\n  function _typeof(obj) {\n    if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n      _typeof = function _typeof(obj) {\n        return typeof obj;\n      };\n    } else {\n      _typeof = function _typeof(obj) {\n        return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n      };\n    }\n\n    return _typeof(obj);\n  }\n\n  function _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n      throw new TypeError(\"Cannot call a class as a function\");\n    }\n  }\n\n  function _defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  function _createClass(Constructor, protoProps, staticProps) {\n    if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) _defineProperties(Constructor, staticProps);\n    return Constructor;\n  }\n\n  function _possibleConstructorReturn(self, call) {\n    if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n      return call;\n    }\n\n    if (!self) {\n      throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }\n\n    return self;\n  }\n\n  function _get(object, property, receiver) {\n    if (object === null) object = Function.prototype;\n    var desc = Object.getOwnPropertyDescriptor(object, property);\n\n    if (desc === undefined) {\n      var parent = Object.getPrototypeOf(object);\n\n      if (parent === null) {\n        return undefined;\n      } else {\n        return _get(parent, property, receiver);\n      }\n    } else if (\"value\" in desc) {\n      return desc.value;\n    } else {\n      var getter = desc.get;\n\n      if (getter === undefined) {\n        return undefined;\n      }\n\n      return getter.call(receiver);\n    }\n  }\n\n  function _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n      throw new TypeError(\"Super expression must either be null or a function\");\n    }\n\n    subClass.prototype = Object.create(superClass && superClass.prototype, {\n      constructor: {\n        value: subClass,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n    if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n  }\n\n  var App = function (_EventEmitter) {\n    _inherits(App, _EventEmitter);\n\n    /**\n     * App class that handle routes and screens lifecycle.\n     * @constructor\n     * @extends {EventEmitter}\n     */\n    function App() {\n      var _this;\n\n      _classCallCheck(this, App);\n\n      _this = _possibleConstructorReturn(this, (App.__proto__ || Object.getPrototypeOf(App)).call(this));\n      /**\n       * Holds the active screen.\n       * @type {?Screen}\n       * @protected\n       */\n\n      _this.activeScreen = null;\n      /**\n       * Holds the active path containing the query parameters.\n       * @type {?string}\n       * @protected\n       */\n\n      _this.activePath = null;\n      /**\n       * Allows prevent navigate from dom prevented event.\n       * @type {boolean}\n       * @default true\n       * @protected\n       */\n\n      _this.allowPreventNavigate = true;\n      /**\n       * Holds link base path.\n       * @type {!string}\n       * @default ''\n       * @protected\n       */\n\n      _this.basePath = '';\n      /**\n       * Holds the value of the browser path before a navigation is performed.\n       * @type {!string}\n       * @default the current browser path.\n       * @protected\n       */\n\n      _this.browserPathBeforeNavigate = _utils2.default.getCurrentBrowserPathWithoutHash();\n      /**\n       * Captures scroll position from scroll event.\n       * @type {!boolean}\n       * @default true\n       * @protected\n       */\n\n      _this.captureScrollPositionFromScrollEvent = true;\n      /**\n       * Holds the default page title.\n       * @type {string}\n       * @default null\n       * @protected\n       */\n\n      _this.defaultTitle = _globals2.default.document.title;\n      /**\n       * Holds the form selector to define forms that are routed.\n       * @type {!string}\n       * @default form[enctype=\"multipart/form-data\"]:not([data-senna-off])\n       * @protected\n       */\n\n      _this.formSelector = 'form[enctype=\"multipart/form-data\"]:not([data-senna-off])';\n      /**\n       * When enabled, the route matching ignores query string from the path.\n       * @type {boolean}\n       * @default false\n       * @protected\n       */\n\n      _this.ignoreQueryStringFromRoutePath = false;\n      /**\n       * Holds the link selector to define links that are routed.\n       * @type {!string}\n       * @default a:not([data-senna-off])\n       * @protected\n       */\n\n      _this.linkSelector = 'a:not([data-senna-off]):not([target=\"_blank\"])';\n      /**\n       * Holds the loading css class.\n       * @type {!string}\n       * @default senna-loading\n       * @protected\n       */\n\n      _this.loadingCssClass = 'senna-loading';\n      /**\n       * Using the History API to manage your URLs is awesome and, as it happens,\n       * a crucial feature of good web apps. One of its downsides, however, is\n       * that scroll positions are stored and then, more importantly, restored\n       * whenever you traverse the history. This often means unsightly jumps as\n       * the scroll position changes automatically, and especially so if your app\n       * does transitions, or changes the contents of the page in any way.\n       * Ultimately this leads to an horrible user experience. The good news is,\n       * however, that there’s a potential fix: history.scrollRestoration.\n       * https://developers.google.com/web/updates/2015/09/history-api-scroll-restoration\n       * @type {boolean}\n       * @protected\n       */\n\n      _this.nativeScrollRestorationSupported = 'scrollRestoration' in _globals2.default.window.history;\n      /**\n       * When set to true there is a pendingNavigate that has not yet been\n       * resolved or rejected.\n       * @type {boolean}\n       * @default false\n       * @protected\n       */\n\n      _this.isNavigationPending = false;\n      /**\n       * Holds a deferred with the current navigation.\n       * @type {?CancellablePromise}\n       * @default null\n       * @protected\n       */\n\n      _this.pendingNavigate = null;\n      /**\n       * Holds the window horizontal scroll position when the navigation using\n       * back or forward happens to be restored after the surfaces are updated.\n       * @type {!Number}\n       * @default 0\n       * @protected\n       */\n\n      _this.popstateScrollLeft = 0;\n      /**\n       * Holds the window vertical scroll position when the navigation using\n       * back or forward happens to be restored after the surfaces are updated.\n       * @type {!Number}\n       * @default 0\n       * @protected\n       */\n\n      _this.popstateScrollTop = 0;\n      /**\n       * Holds the redirect path containing the query parameters.\n       * @type {?string}\n       * @protected\n       */\n\n      _this.redirectPath = null;\n      /**\n       * Holds the screen routes configuration.\n       * @type {?Array}\n       * @default []\n       * @protected\n       */\n\n      _this.routes = [];\n      /**\n       * Maps the screen instances by the url containing the parameters.\n       * @type {?Object}\n       * @default {}\n       * @protected\n       */\n\n      _this.screens = {};\n      /**\n       * When set to true the first erroneous popstate fired on page load will be\n       * ignored, only if <code>globals.window.history.state</code> is also\n       * <code>null</code>.\n       * @type {boolean}\n       * @default false\n       * @protected\n       */\n\n      _this.skipLoadPopstate = false;\n      /**\n       * Maps that index the surfaces instances by the surface id.\n       * @type {?Object}\n       * @default {}\n       * @protected\n       */\n\n      _this.surfaces = {};\n      /**\n       * When set to true, moves the scroll position after popstate, or to the\n       * top of the viewport for new navigation. If false, the browser will\n       * take care of scroll restoration.\n       * @type {!boolean}\n       * @default true\n       * @protected\n       */\n\n      _this.updateScrollPosition = true;\n      _this.appEventHandlers_ = new _metalEvents.EventHandler();\n\n      _this.appEventHandlers_.add((0, _metalDom.on)(_globals2.default.window, 'scroll', (0, _metalDebounce2.default)(_this.onScroll_.bind(_this), 100)), (0, _metalDom.on)(_globals2.default.window, 'load', _this.onLoad_.bind(_this)), (0, _metalDom.on)(_globals2.default.window, 'popstate', _this.onPopstate_.bind(_this)));\n\n      _this.on('startNavigate', _this.onStartNavigate_);\n\n      _this.on('beforeNavigate', _this.onBeforeNavigate_);\n\n      _this.on('beforeNavigate', _this.onBeforeNavigateDefault_, true);\n\n      _this.on('beforeUnload', _this.onBeforeUnloadDefault_);\n\n      _this.setLinkSelector(_this.linkSelector);\n\n      _this.setFormSelector(_this.formSelector);\n\n      _this.maybeOverloadBeforeUnload_();\n\n      return _this;\n    }\n    /**\n     * Adds one or more screens to the application.\n     *\n     * Example:\n     *\n     * <code>\n     *   app.addRoutes({ path: '/foo', handler: FooScreen });\n     *   or\n     *   app.addRoutes([{ path: '/foo', handler: function(route) { return new FooScreen(); } }]);\n     * </code>\n     *\n     * @param {Object} or {Array} routes Single object or an array of object.\n     *     Each object should contain <code>path</code> and <code>screen</code>.\n     *     The <code>path</code> should be a string or a regex that maps the\n     *     navigation route to a screen class definition (not an instance), e.g:\n     *         <code>{ path: \"/home:param1\", handler: MyScreen }</code>\n     *         <code>{ path: /foo.+/, handler: MyScreen }</code>\n     * @chainable\n     */\n\n\n    _createClass(App, [{\n      key: \"addRoutes\",\n      value: function addRoutes(routes) {\n        var _this2 = this;\n\n        if (!Array.isArray(routes)) {\n          routes = [routes];\n        }\n\n        routes.forEach(function (route) {\n          if (!(route instanceof _Route2.default)) {\n            route = new _Route2.default(route.path, route.handler);\n          }\n\n          _this2.routes.push(route);\n        });\n        return this;\n      }\n    }, {\n      key: \"addSurfaces\",\n      value: function addSurfaces(surfaces) {\n        var _this3 = this;\n\n        if (!Array.isArray(surfaces)) {\n          surfaces = [surfaces];\n        }\n\n        surfaces.forEach(function (surface) {\n          if ((0, _metal.isString)(surface)) {\n            surface = new _Surface2.default(surface);\n          }\n\n          _this3.surfaces[surface.getId()] = surface;\n        });\n        return this;\n      }\n    }, {\n      key: \"canNavigate\",\n      value: function canNavigate(url) {\n        var uri = _utils2.default.isWebUri(url);\n\n        if (!uri) {\n          return false;\n        }\n\n        var path = _utils2.default.getUrlPath(url);\n\n        if (!this.isLinkSameOrigin_(uri.getHostname())) {\n          console.log('Offsite link clicked');\n          return false;\n        }\n\n        if (!this.isSameBasePath_(path)) {\n          console.log('Link clicked outside app\\'s base path');\n          return false;\n        } // Prevents navigation if it's a hash change on the same url.\n\n\n        if (uri.getHash() && _utils2.default.isCurrentBrowserPath(path)) {\n          return false;\n        }\n\n        if (!this.findRoute(path)) {\n          console.log('No route for ' + path);\n          return false;\n        }\n\n        return true;\n      }\n    }, {\n      key: \"clearScreensCache\",\n      value: function clearScreensCache() {\n        var _this4 = this;\n\n        Object.keys(this.screens).forEach(function (path) {\n          if (path === _this4.activePath) {\n            _this4.activeScreen.clearCache();\n          } else {\n            _this4.removeScreen(path);\n          }\n        });\n      }\n    }, {\n      key: \"createScreenInstance\",\n      value: function createScreenInstance(path, route) {\n        if (!this.pendingNavigate && path === this.activePath) {\n          console.log('Already at destination, refresh navigation');\n          return this.activeScreen;\n        }\n        /* jshint newcap: false */\n\n\n        var screen = this.screens[path];\n\n        if (!screen) {\n          var handler = route.getHandler();\n\n          if (handler === _Screen2.default || _Screen2.default.isImplementedBy(handler.prototype)) {\n            screen = new handler();\n          } else {\n            screen = handler(route) || new _Screen2.default();\n          }\n\n          console.log('Create screen for [' + path + '] [' + screen + ']');\n        }\n\n        return screen;\n      }\n    }, {\n      key: \"disposeInternal\",\n      value: function disposeInternal() {\n        if (this.activeScreen) {\n          this.removeScreen(this.activePath);\n        }\n\n        this.clearScreensCache();\n        this.formEventHandler_.removeListener();\n        this.linkEventHandler_.removeListener();\n        this.appEventHandlers_.removeAllListeners();\n\n        _get(App.prototype.__proto__ || Object.getPrototypeOf(App.prototype), \"disposeInternal\", this).call(this);\n      }\n    }, {\n      key: \"dispatch\",\n      value: function dispatch() {\n        return this.navigate(_utils2.default.getCurrentBrowserPath(), true);\n      }\n    }, {\n      key: \"doNavigate_\",\n      value: function doNavigate_(path, opt_replaceHistory) {\n        var _this5 = this;\n\n        if (this.activeScreen && this.activeScreen.beforeDeactivate()) {\n          this.pendingNavigate = _metalPromise2.default.reject(new _metalPromise2.default.CancellationError('Cancelled by active screen'));\n          return this.pendingNavigate;\n        }\n\n        var route = this.findRoute(path);\n\n        if (!route) {\n          this.pendingNavigate = _metalPromise2.default.reject(new _metalPromise2.default.CancellationError('No route for ' + path));\n          return this.pendingNavigate;\n        }\n\n        console.log('Navigate to [' + path + ']');\n        this.stopPendingNavigate_();\n        this.isNavigationPending = true;\n        var nextScreen = this.createScreenInstance(path, route);\n        return nextScreen.load(path).then(function () {\n          if (_this5.activeScreen) {\n            _this5.activeScreen.deactivate();\n          }\n\n          _this5.prepareNavigateHistory_(path, nextScreen, opt_replaceHistory);\n\n          _this5.prepareNavigateSurfaces_(nextScreen, _this5.surfaces, _this5.extractParams(route, path));\n        }).then(function () {\n          return nextScreen.evaluateStyles(_this5.surfaces);\n        }).then(function () {\n          return nextScreen.flip(_this5.surfaces);\n        }).then(function () {\n          return nextScreen.evaluateScripts(_this5.surfaces);\n        }).then(function () {\n          return _this5.maybeUpdateScrollPositionState_();\n        }).then(function () {\n          return _this5.syncScrollPositionSyncThenAsync_();\n        }).then(function () {\n          return _this5.finalizeNavigate_(path, nextScreen);\n        }).then(function () {\n          return _this5.maybeOverloadBeforeUnload_();\n        }).catch(function (reason) {\n          _this5.isNavigationPending = false;\n\n          _this5.handleNavigateError_(path, nextScreen, reason);\n\n          throw reason;\n        });\n      }\n    }, {\n      key: \"extractParams\",\n      value: function extractParams(route, path) {\n        return route.extractParams(this.getRoutePath(path));\n      }\n    }, {\n      key: \"finalizeNavigate_\",\n      value: function finalizeNavigate_(path, nextScreen) {\n        nextScreen.activate();\n\n        if (this.activeScreen && !this.activeScreen.isCacheable()) {\n          if (this.activeScreen !== nextScreen) {\n            this.removeScreen(this.activePath);\n          }\n        }\n\n        this.activePath = path;\n        this.activeScreen = nextScreen;\n        this.browserPathBeforeNavigate = _utils2.default.getCurrentBrowserPathWithoutHash();\n        this.screens[path] = nextScreen;\n        this.isNavigationPending = false;\n        this.pendingNavigate = null;\n        _globals2.default.capturedFormElement = null;\n        _globals2.default.capturedFormButtonElement = null;\n        console.log('Navigation done');\n      }\n    }, {\n      key: \"findRoute\",\n      value: function findRoute(path) {\n        path = this.getRoutePath(path);\n\n        for (var i = 0; i < this.routes.length; i++) {\n          var route = this.routes[i];\n\n          if (route.matchesPath(path)) {\n            return route;\n          }\n        }\n\n        return null;\n      }\n    }, {\n      key: \"getAllowPreventNavigate\",\n      value: function getAllowPreventNavigate() {\n        return this.allowPreventNavigate;\n      }\n    }, {\n      key: \"getBasePath\",\n      value: function getBasePath() {\n        return this.basePath;\n      }\n    }, {\n      key: \"getDefaultTitle\",\n      value: function getDefaultTitle() {\n        return this.defaultTitle;\n      }\n    }, {\n      key: \"getFormSelector\",\n      value: function getFormSelector() {\n        return this.formSelector;\n      }\n    }, {\n      key: \"getIgnoreQueryStringFromRoutePath\",\n      value: function getIgnoreQueryStringFromRoutePath() {\n        return this.ignoreQueryStringFromRoutePath;\n      }\n    }, {\n      key: \"getLinkSelector\",\n      value: function getLinkSelector() {\n        return this.linkSelector;\n      }\n    }, {\n      key: \"getLoadingCssClass\",\n      value: function getLoadingCssClass() {\n        return this.loadingCssClass;\n      }\n    }, {\n      key: \"getRoutePath\",\n      value: function getRoutePath(path) {\n        if (this.getIgnoreQueryStringFromRoutePath()) {\n          path = _utils2.default.getUrlPathWithoutHashAndSearch(path);\n          return _utils2.default.getUrlPathWithoutHashAndSearch(path.substr(this.basePath.length));\n        }\n\n        path = _utils2.default.getUrlPathWithoutHash(path);\n        return _utils2.default.getUrlPathWithoutHash(path.substr(this.basePath.length));\n      }\n    }, {\n      key: \"getUpdateScrollPosition\",\n      value: function getUpdateScrollPosition() {\n        return this.updateScrollPosition;\n      }\n    }, {\n      key: \"handleNavigateError_\",\n      value: function handleNavigateError_(path, nextScreen, error) {\n        var _this6 = this;\n\n        console.log('Navigation error for [' + nextScreen + '] (' + error + ')');\n        this.emit('navigationError', {\n          error: error,\n          nextScreen: nextScreen,\n          path: path\n        });\n\n        if (!_utils2.default.isCurrentBrowserPath(path)) {\n          if (this.isNavigationPending && this.pendingNavigate) {\n            this.pendingNavigate.thenAlways(function () {\n              return _this6.removeScreen(path);\n            }, this);\n          } else {\n            this.removeScreen(path);\n          }\n        }\n      }\n    }, {\n      key: \"hasRoutes\",\n      value: function hasRoutes() {\n        return this.routes.length > 0;\n      }\n    }, {\n      key: \"isLinkSameOrigin_\",\n      value: function isLinkSameOrigin_(hostname) {\n        return hostname === _globals2.default.window.location.hostname;\n      }\n    }, {\n      key: \"isSameBasePath_\",\n      value: function isSameBasePath_(path) {\n        return path.indexOf(this.basePath) === 0;\n      }\n    }, {\n      key: \"lockHistoryScrollPosition_\",\n      value: function lockHistoryScrollPosition_() {\n        var state = _globals2.default.window.history.state;\n\n        if (!state) {\n          return;\n        } // Browsers are inconsistent when re-positioning the scroll history on\n        // popstate. At some browsers, history scroll happens before popstate, then\n        // lock the scroll on the last known position as soon as possible after the\n        // current JS execution context and capture the current value. Some others,\n        // history scroll happens after popstate, in this case, we bind an once\n        // scroll event to lock the las known position. Lastly, the previous two\n        // behaviors can happen even on the same browser, hence the race will decide\n        // the winner.\n\n\n        var winner = false;\n\n        var switchScrollPositionRace = function switchScrollPositionRace() {\n          _globals2.default.document.removeEventListener('scroll', switchScrollPositionRace, false);\n\n          if (!winner) {\n            _globals2.default.window.scrollTo(state.scrollLeft, state.scrollTop);\n\n            winner = true;\n          }\n        };\n\n        _metal.async.nextTick(switchScrollPositionRace);\n\n        _globals2.default.document.addEventListener('scroll', switchScrollPositionRace, false);\n      }\n    }, {\n      key: \"maybeDisableNativeScrollRestoration\",\n      value: function maybeDisableNativeScrollRestoration() {\n        if (this.nativeScrollRestorationSupported) {\n          this.nativeScrollRestoration_ = _globals2.default.window.history.scrollRestoration;\n          _globals2.default.window.history.scrollRestoration = 'manual';\n        }\n      }\n    }, {\n      key: \"maybeNavigate_\",\n      value: function maybeNavigate_(href, event) {\n        if (!this.canNavigate(href)) {\n          return;\n        }\n\n        _globals2.default.capturedFormElement = event.capturedFormElement;\n        _globals2.default.capturedFormButtonElement = event.capturedFormButtonElement;\n        var navigateFailed = false;\n\n        try {\n          this.navigate(_utils2.default.getUrlPath(href), false, event);\n        } catch (err) {\n          // Do not prevent link navigation in case some synchronous error occurs\n          navigateFailed = true;\n        }\n\n        if (!navigateFailed) {\n          event.preventDefault();\n        }\n      }\n    }, {\n      key: \"maybeOverloadBeforeUnload_\",\n      value: function maybeOverloadBeforeUnload_() {\n        var _this7 = this;\n\n        if ('function' === typeof window.onbeforeunload) {\n          window._onbeforeunload = window.onbeforeunload;\n\n          window.onbeforeunload = function (event) {\n            _this7.emit('beforeUnload', event);\n\n            if (event && event.defaultPrevented) {\n              return true;\n            }\n          }; // mark the updated handler due unwanted recursion \n\n\n          window.onbeforeunload._overloaded = true;\n        }\n      }\n    }, {\n      key: \"maybeRepositionScrollToHashedAnchor\",\n      value: function maybeRepositionScrollToHashedAnchor() {\n        var hash = _globals2.default.window.location.hash;\n\n        if (hash) {\n          var anchorElement = _globals2.default.document.getElementById(hash.substring(1));\n\n          if (anchorElement) {\n            var _utils$getNodeOffset = _utils2.default.getNodeOffset(anchorElement),\n                offsetLeft = _utils$getNodeOffset.offsetLeft,\n                offsetTop = _utils$getNodeOffset.offsetTop;\n\n            _globals2.default.window.scrollTo(offsetLeft, offsetTop);\n          }\n        }\n      }\n    }, {\n      key: \"maybeRestoreNativeScrollRestoration\",\n      value: function maybeRestoreNativeScrollRestoration() {\n        if (this.nativeScrollRestorationSupported && this.nativeScrollRestoration_) {\n          _globals2.default.window.history.scrollRestoration = this.nativeScrollRestoration_;\n        }\n      }\n    }, {\n      key: \"maybeRestoreRedirectPathHash_\",\n      value: function maybeRestoreRedirectPathHash_(path, redirectPath, hash) {\n        if (redirectPath === _utils2.default.getUrlPathWithoutHash(path)) {\n          return redirectPath + hash;\n        }\n\n        return redirectPath;\n      }\n    }, {\n      key: \"maybeUpdateScrollPositionState_\",\n      value: function maybeUpdateScrollPositionState_() {\n        var hash = _globals2.default.window.location.hash;\n\n        var anchorElement = _globals2.default.document.getElementById(hash.substring(1));\n\n        if (anchorElement) {\n          var _utils$getNodeOffset2 = _utils2.default.getNodeOffset(anchorElement),\n              offsetLeft = _utils$getNodeOffset2.offsetLeft,\n              offsetTop = _utils$getNodeOffset2.offsetTop;\n\n          this.saveHistoryCurrentPageScrollPosition_(offsetTop, offsetLeft);\n        }\n      }\n    }, {\n      key: \"navigate\",\n      value: function navigate(path, opt_replaceHistory, opt_event) {\n        if (!_utils2.default.isHtml5HistorySupported()) {\n          throw new Error('HTML5 History is not supported. Senna will not intercept navigation.');\n        } // When reloading the same path do replaceState instead of pushState to\n        // avoid polluting history with states with the same path.\n\n\n        if (path === this.activePath) {\n          opt_replaceHistory = true;\n        }\n\n        this.emit('beforeNavigate', {\n          event: opt_event,\n          path: path,\n          replaceHistory: !!opt_replaceHistory\n        });\n        return this.pendingNavigate;\n      }\n    }, {\n      key: \"onBeforeNavigate_\",\n      value: function onBeforeNavigate_(event) {\n        if (_globals2.default.capturedFormElement) {\n          event.form = _globals2.default.capturedFormElement;\n        }\n      }\n    }, {\n      key: \"onBeforeNavigateDefault_\",\n      value: function onBeforeNavigateDefault_(event) {\n        if (this.pendingNavigate) {\n          if (this.pendingNavigate.path === event.path) {\n            console.log('Waiting...');\n            return;\n          }\n        }\n\n        this.emit('beforeUnload', event);\n        this.emit('startNavigate', {\n          form: event.form,\n          path: event.path,\n          replaceHistory: event.replaceHistory\n        });\n      }\n    }, {\n      key: \"onBeforeUnloadDefault_\",\n      value: function onBeforeUnloadDefault_(event) {\n        var func = window._onbeforeunload;\n\n        if (func && !func._overloaded && func()) {\n          event.preventDefault();\n        }\n      }\n    }, {\n      key: \"onDocClickDelegate_\",\n      value: function onDocClickDelegate_(event) {\n        if (event.altKey || event.ctrlKey || event.metaKey || event.shiftKey || event.button) {\n          console.log('Navigate aborted, invalid mouse button or modifier key pressed.');\n          return;\n        }\n\n        this.maybeNavigate_(event.delegateTarget.href, event);\n      }\n    }, {\n      key: \"onDocSubmitDelegate_\",\n      value: function onDocSubmitDelegate_(event) {\n        var form = event.delegateTarget;\n\n        if (form.method === 'get') {\n          console.log('GET method not supported');\n          return;\n        }\n\n        event.capturedFormElement = form;\n        var buttonSelector = 'button:not([type]),button[type=submit],input[type=submit]';\n\n        if ((0, _metalDom.match)(_globals2.default.document.activeElement, buttonSelector)) {\n          event.capturedFormButtonElement = _globals2.default.document.activeElement;\n        } else {\n          event.capturedFormButtonElement = form.querySelector(buttonSelector);\n        }\n\n        this.maybeNavigate_(form.action, event);\n      }\n    }, {\n      key: \"onLoad_\",\n      value: function onLoad_() {\n        var _this8 = this;\n\n        this.skipLoadPopstate = true;\n        setTimeout(function () {\n          // The timeout ensures that popstate events will be unblocked right\n          // after the load event occured, but not in the same event-loop cycle.\n          _this8.skipLoadPopstate = false;\n        }, 0); // Try to reposition scroll to the hashed anchor when page loads.\n\n        this.maybeRepositionScrollToHashedAnchor();\n      }\n    }, {\n      key: \"onPopstate_\",\n      value: function onPopstate_(event) {\n        if (this.skipLoadPopstate) {\n          return;\n        } // Do not navigate if the popstate was triggered by a hash change.\n\n\n        if (_utils2.default.isCurrentBrowserPath(this.browserPathBeforeNavigate)) {\n          this.maybeRepositionScrollToHashedAnchor();\n          return;\n        }\n\n        var state = event.state;\n\n        if (!state) {\n          if (_globals2.default.window.location.hash) {\n            // If senna is on an redirect path and a hash popstate happens\n            // to a different url, reload the browser. This behavior doesn't\n            // require senna to route hashed links and is closer to native\n            // browser behavior.\n            if (this.redirectPath && !_utils2.default.isCurrentBrowserPath(this.redirectPath)) {\n              this.reloadPage();\n            } // Always try to reposition scroll to the hashed anchor when\n            // hash popstate happens.\n\n\n            this.maybeRepositionScrollToHashedAnchor();\n          } else {\n            this.reloadPage();\n          }\n\n          return;\n        }\n\n        if (state.senna) {\n          console.log('History navigation to [' + state.path + ']');\n          this.popstateScrollTop = state.scrollTop;\n          this.popstateScrollLeft = state.scrollLeft;\n\n          if (!this.nativeScrollRestorationSupported) {\n            this.lockHistoryScrollPosition_();\n          }\n\n          this.navigate(state.path, true);\n        }\n      }\n    }, {\n      key: \"onScroll_\",\n      value: function onScroll_() {\n        if (this.captureScrollPositionFromScrollEvent) {\n          this.saveHistoryCurrentPageScrollPosition_(_globals2.default.window.pageYOffset, _globals2.default.window.pageXOffset);\n        }\n      }\n    }, {\n      key: \"onStartNavigate_\",\n      value: function onStartNavigate_(event) {\n        var _this9 = this;\n\n        this.maybeDisableNativeScrollRestoration();\n        this.captureScrollPositionFromScrollEvent = false;\n        (0, _metalDom.addClasses)(_globals2.default.document.documentElement, this.loadingCssClass);\n        var endNavigatePayload = {\n          form: event.form,\n          path: event.path\n        };\n        this.pendingNavigate = this.doNavigate_(event.path, event.replaceHistory).catch(function (reason) {\n          endNavigatePayload.error = reason;\n          throw reason;\n        }).thenAlways(function () {\n          if (!_this9.pendingNavigate) {\n            (0, _metalDom.removeClasses)(_globals2.default.document.documentElement, _this9.loadingCssClass);\n\n            _this9.maybeRestoreNativeScrollRestoration();\n\n            _this9.captureScrollPositionFromScrollEvent = true;\n          }\n\n          _this9.emit('endNavigate', endNavigatePayload);\n        });\n        this.pendingNavigate.path = event.path;\n      }\n    }, {\n      key: \"prefetch\",\n      value: function prefetch(path) {\n        var _this10 = this;\n\n        var route = this.findRoute(path);\n\n        if (!route) {\n          return _metalPromise2.default.reject(new _metalPromise2.default.CancellationError('No route for ' + path));\n        }\n\n        console.log('Prefetching [' + path + ']');\n        var nextScreen = this.createScreenInstance(path, route);\n        return nextScreen.load(path).then(function () {\n          return _this10.screens[path] = nextScreen;\n        }).catch(function (reason) {\n          _this10.handleNavigateError_(path, nextScreen, reason);\n\n          throw reason;\n        });\n      }\n    }, {\n      key: \"prepareNavigateHistory_\",\n      value: function prepareNavigateHistory_(path, nextScreen, opt_replaceHistory) {\n        var title = nextScreen.getTitle();\n\n        if (!(0, _metal.isString)(title)) {\n          title = this.getDefaultTitle();\n        }\n\n        var redirectPath = nextScreen.beforeUpdateHistoryPath(path);\n        var historyState = {\n          form: (0, _metal.isDefAndNotNull)(_globals2.default.capturedFormElement),\n          path: path,\n          redirectPath: redirectPath,\n          scrollLeft: 0,\n          scrollTop: 0,\n          senna: true\n        };\n\n        if (opt_replaceHistory) {\n          historyState.scrollTop = this.popstateScrollTop;\n          historyState.scrollLeft = this.popstateScrollLeft;\n        }\n\n        var hash = new _metalUri2.default(path).getHash();\n        redirectPath = this.maybeRestoreRedirectPathHash_(path, redirectPath, hash);\n        this.updateHistory_(title, redirectPath, nextScreen.beforeUpdateHistoryState(historyState), opt_replaceHistory);\n        this.redirectPath = redirectPath;\n      }\n    }, {\n      key: \"prepareNavigateSurfaces_\",\n      value: function prepareNavigateSurfaces_(nextScreen, surfaces, params) {\n        Object.keys(surfaces).forEach(function (id) {\n          var surfaceContent = nextScreen.getSurfaceContent(id, params);\n          surfaces[id].addContent(nextScreen.getId(), surfaceContent);\n          console.log('Screen [' + nextScreen.getId() + '] add content to surface ' + '[' + surfaces[id] + '] [' + ((0, _metal.isDefAndNotNull)(surfaceContent) ? '...' : 'empty') + ']');\n        });\n      }\n    }, {\n      key: \"reloadPage\",\n      value: function reloadPage() {\n        _globals2.default.window.location.reload();\n      }\n    }, {\n      key: \"removeRoute\",\n      value: function removeRoute(route) {\n        return _metal.array.remove(this.routes, route);\n      }\n    }, {\n      key: \"removeScreen\",\n      value: function removeScreen(path) {\n        var _this11 = this;\n\n        var screen = this.screens[path];\n\n        if (screen) {\n          Object.keys(this.surfaces).forEach(function (surfaceId) {\n            return _this11.surfaces[surfaceId].remove(screen.getId());\n          });\n          screen.dispose();\n          delete this.screens[path];\n        }\n      }\n    }, {\n      key: \"saveHistoryCurrentPageScrollPosition_\",\n      value: function saveHistoryCurrentPageScrollPosition_(scrollTop, scrollLeft) {\n        var state = _globals2.default.window.history.state;\n\n        if (state && state.senna) {\n          var _ref = [scrollTop, scrollLeft];\n          state.scrollTop = _ref[0];\n          state.scrollLeft = _ref[1];\n\n          _globals2.default.window.history.replaceState(state, null, null);\n        }\n      }\n    }, {\n      key: \"setAllowPreventNavigate\",\n      value: function setAllowPreventNavigate(allowPreventNavigate) {\n        this.allowPreventNavigate = allowPreventNavigate;\n      }\n    }, {\n      key: \"setBasePath\",\n      value: function setBasePath(basePath) {\n        this.basePath = _utils2.default.removePathTrailingSlash(basePath);\n      }\n    }, {\n      key: \"setDefaultTitle\",\n      value: function setDefaultTitle(defaultTitle) {\n        this.defaultTitle = defaultTitle;\n      }\n    }, {\n      key: \"setFormSelector\",\n      value: function setFormSelector(formSelector) {\n        this.formSelector = formSelector;\n\n        if (this.formEventHandler_) {\n          this.formEventHandler_.removeListener();\n        }\n\n        this.formEventHandler_ = (0, _metalDom.delegate)(document, 'submit', this.formSelector, this.onDocSubmitDelegate_.bind(this), this.allowPreventNavigate);\n      }\n    }, {\n      key: \"setIgnoreQueryStringFromRoutePath\",\n      value: function setIgnoreQueryStringFromRoutePath(ignoreQueryStringFromRoutePath) {\n        this.ignoreQueryStringFromRoutePath = ignoreQueryStringFromRoutePath;\n      }\n    }, {\n      key: \"setLinkSelector\",\n      value: function setLinkSelector(linkSelector) {\n        this.linkSelector = linkSelector;\n\n        if (this.linkEventHandler_) {\n          this.linkEventHandler_.removeListener();\n        }\n\n        this.linkEventHandler_ = (0, _metalDom.delegate)(document, 'click', this.linkSelector, this.onDocClickDelegate_.bind(this), this.allowPreventNavigate);\n      }\n    }, {\n      key: \"setLoadingCssClass\",\n      value: function setLoadingCssClass(loadingCssClass) {\n        this.loadingCssClass = loadingCssClass;\n      }\n    }, {\n      key: \"setUpdateScrollPosition\",\n      value: function setUpdateScrollPosition(updateScrollPosition) {\n        this.updateScrollPosition = updateScrollPosition;\n      }\n    }, {\n      key: \"stopPendingNavigate_\",\n      value: function stopPendingNavigate_() {\n        if (this.pendingNavigate) {\n          this.pendingNavigate.cancel('Cancel pending navigation');\n          this.pendingNavigate = null;\n        }\n      }\n    }, {\n      key: \"syncScrollPositionSyncThenAsync_\",\n      value: function syncScrollPositionSyncThenAsync_() {\n        var _this12 = this;\n\n        var state = _globals2.default.window.history.state;\n\n        if (!state) {\n          return;\n        }\n\n        var scrollTop = state.scrollTop;\n        var scrollLeft = state.scrollLeft;\n\n        var sync = function sync() {\n          if (_this12.updateScrollPosition) {\n            _globals2.default.window.scrollTo(scrollLeft, scrollTop);\n          }\n        };\n\n        return new _metalPromise2.default(function (resolve) {\n          return sync() & _metal.async.nextTick(function () {\n            return sync() & resolve();\n          });\n        });\n      }\n    }, {\n      key: \"updateHistory_\",\n      value: function updateHistory_(title, path, state, opt_replaceHistory) {\n        if (opt_replaceHistory) {\n          _globals2.default.window.history.replaceState(state, title, path);\n        } else {\n          _globals2.default.window.history.pushState(state, title, path);\n        }\n\n        var titleNode = _globals2.default.document.querySelector('title');\n\n        if (titleNode) {\n          titleNode.innerHTML = title;\n        } else {\n          _globals2.default.document.title = title;\n        }\n      }\n    }]);\n\n    return App;\n  }(_metalEvents.EventEmitter);\n\n  exports.default = App;\n});"
            },
            {
              "id": 14,
              "identifier": "/Users/Liferay/trampo/senna.js/node_modules/metal-events/lib/EventHandle.js",
              "name": "./node_modules/metal-events/lib/EventHandle.js",
              "index": 26,
              "index2": 20,
              "size": 3443,
              "cacheable": true,
              "built": true,
              "optional": false,
              "prefetched": false,
              "chunks": [
                0
              ],
              "assets": [],
              "issuer": "/Users/Liferay/trampo/senna.js/node_modules/metal-events/lib/events.js",
              "issuerId": 6,
              "issuerName": "./node_modules/metal-events/lib/events.js",
              "profile": {
                "factory": 26,
                "building": 21,
                "dependencies": 13
              },
              "failed": false,
              "errors": 0,
              "warnings": 0,
              "reasons": [
                {
                  "moduleId": 6,
                  "moduleIdentifier": "/Users/Liferay/trampo/senna.js/node_modules/metal-events/lib/events.js",
                  "module": "./node_modules/metal-events/lib/events.js",
                  "moduleName": "./node_modules/metal-events/lib/events.js",
                  "type": "cjs require",
                  "userRequest": "./EventHandle",
                  "loc": "16:19-43"
                },
                {
                  "moduleId": 38,
                  "moduleIdentifier": "/Users/Liferay/trampo/senna.js/node_modules/metal-events/lib/EventEmitter.js",
                  "module": "./node_modules/metal-events/lib/EventEmitter.js",
                  "moduleName": "./node_modules/metal-events/lib/EventEmitter.js",
                  "type": "cjs require",
                  "userRequest": "./EventHandle",
                  "loc": "11:19-43"
                }
              ],
              "usedExports": true,
              "providedExports": null,
              "optimizationBailout": [
                "ModuleConcatenation bailout: Module is not an ECMAScript module"
              ],
              "depth": 3,
              "source": "'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _metal = require('metal');\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n/**\n * EventHandle utility. Holds information about an event subscription, and\n * allows removing them easily.\n * EventHandle is a Disposable, but it's important to note that the\n * EventEmitter that created it is not the one responsible for disposing it.\n * That responsibility is for the code that holds a reference to it.\n * @param {!EventEmitter} emitter Emitter the event was subscribed to.\n * @param {string} event The name of the event that was subscribed to.\n * @param {!Function} listener The listener subscribed to the event.\n * @constructor\n * @extends {Disposable}\n */\nvar EventHandle = function (_Disposable) {\n\t_inherits(EventHandle, _Disposable);\n\n\tfunction EventHandle(emitter, event, listener) {\n\t\t_classCallCheck(this, EventHandle);\n\n\t\t/**\n   * The EventEmitter instance that the event was subscribed to.\n   * @type {EventEmitter}\n   * @protected\n   */\n\t\tvar _this = _possibleConstructorReturn(this, (EventHandle.__proto__ || Object.getPrototypeOf(EventHandle)).call(this));\n\n\t\t_this.emitter_ = emitter;\n\n\t\t/**\n   * The name of the event that was subscribed to.\n   * @type {string}\n   * @protected\n   */\n\t\t_this.event_ = event;\n\n\t\t/**\n   * The listener subscribed to the event.\n   * @type {Function}\n   * @protected\n   */\n\t\t_this.listener_ = listener;\n\t\treturn _this;\n\t}\n\n\t/**\n  * Disposes of this instance's object references.\n  * @override\n  */\n\n\n\t_createClass(EventHandle, [{\n\t\tkey: 'disposeInternal',\n\t\tvalue: function disposeInternal() {\n\t\t\tthis.removeListener();\n\t\t\tthis.emitter_ = null;\n\t\t\tthis.listener_ = null;\n\t\t}\n\n\t\t/**\n   * Removes the listener subscription from the emitter.\n   */\n\n\t}, {\n\t\tkey: 'removeListener',\n\t\tvalue: function removeListener() {\n\t\t\tif (!this.emitter_.isDisposed()) {\n\t\t\t\tthis.emitter_.removeListener(this.event_, this.listener_);\n\t\t\t}\n\t\t}\n\t}]);\n\n\treturn EventHandle;\n}(_metal.Disposable);\n\nexports.default = EventHandle;"
            },
            {
              "id": 15,
              "identifier": "/Users/Liferay/trampo/senna.js/node_modules/metal-dom/lib/DomEventHandle.js",
              "name": "./node_modules/metal-dom/lib/DomEventHandle.js",
              "index": 36,
              "index2": 29,
              "size": 2880,
              "cacheable": true,
              "built": true,
              "optional": false,
              "prefetched": false,
              "chunks": [
                0
              ],
              "assets": [],
              "issuer": "/Users/Liferay/trampo/senna.js/node_modules/metal-dom/lib/all/dom.js",
              "issuerId": 7,
              "issuerName": "./node_modules/metal-dom/lib/all/dom.js",
              "profile": {
                "factory": 8,
                "building": 49,
                "dependencies": 11
              },
              "failed": false,
              "errors": 0,
              "warnings": 0,
              "reasons": [
                {
                  "moduleId": 7,
                  "moduleIdentifier": "/Users/Liferay/trampo/senna.js/node_modules/metal-dom/lib/all/dom.js",
                  "module": "./node_modules/metal-dom/lib/all/dom.js",
                  "moduleName": "./node_modules/metal-dom/lib/all/dom.js",
                  "type": "cjs require",
                  "userRequest": "../DomEventHandle",
                  "loc": "30:22-50"
                },
                {
                  "moduleId": 42,
                  "moduleIdentifier": "/Users/Liferay/trampo/senna.js/node_modules/metal-dom/lib/domNamed.js",
                  "module": "./node_modules/metal-dom/lib/domNamed.js",
                  "moduleName": "./node_modules/metal-dom/lib/domNamed.js",
                  "type": "cjs require",
                  "userRequest": "./DomEventHandle",
                  "loc": "41:22-49"
                }
              ],
              "usedExports": true,
              "providedExports": null,
              "optimizationBailout": [
                "ModuleConcatenation bailout: Module is not an ECMAScript module"
              ],
              "depth": 3,
              "source": "'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _metalEvents = require('metal-events');\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n/**\n * This is a special EventHandle, that is responsible for dom events, instead\n * of EventEmitter events.\n * @extends {EventHandle}\n */\nvar DomEventHandle = function (_EventHandle) {\n\t_inherits(DomEventHandle, _EventHandle);\n\n\t/**\n  * The constructor for `DomEventHandle`.\n  * @param {!EventEmitter} emitter Emitter the event was subscribed to.\n  * @param {string} event The name of the event that was subscribed to.\n  * @param {!Function} listener The listener subscribed to the event.\n  * @param {boolean} opt_capture Flag indicating if listener should be triggered\n  *   during capture phase, instead of during the bubbling phase. Defaults to false.\n  * @constructor\n  */\n\tfunction DomEventHandle(emitter, event, listener, opt_capture) {\n\t\t_classCallCheck(this, DomEventHandle);\n\n\t\tvar _this = _possibleConstructorReturn(this, (DomEventHandle.__proto__ || Object.getPrototypeOf(DomEventHandle)).call(this, emitter, event, listener));\n\n\t\t_this.capture_ = opt_capture;\n\t\treturn _this;\n\t}\n\n\t/**\n  * @inheritDoc\n  */\n\n\n\t_createClass(DomEventHandle, [{\n\t\tkey: 'removeListener',\n\t\tvalue: function removeListener() {\n\t\t\tthis.emitter_.removeEventListener(this.event_, this.listener_, this.capture_);\n\t\t}\n\t}]);\n\n\treturn DomEventHandle;\n}(_metalEvents.EventHandle);\n\nexports.default = DomEventHandle;"
            },
            {
              "id": 16,
              "identifier": "/Users/Liferay/trampo/senna.js/node_modules/metal-dom/lib/features.js",
              "name": "./node_modules/metal-dom/lib/features.js",
              "index": 38,
              "index2": 33,
              "size": 3174,
              "cacheable": true,
              "built": true,
              "optional": false,
              "prefetched": false,
              "chunks": [
                0
              ],
              "assets": [],
              "issuer": "/Users/Liferay/trampo/senna.js/node_modules/metal-dom/lib/all/dom.js",
              "issuerId": 7,
              "issuerName": "./node_modules/metal-dom/lib/all/dom.js",
              "profile": {
                "factory": 8,
                "building": 46,
                "dependencies": 14
              },
              "failed": false,
              "errors": 0,
              "warnings": 0,
              "reasons": [
                {
                  "moduleId": 7,
                  "moduleIdentifier": "/Users/Liferay/trampo/senna.js/node_modules/metal-dom/lib/all/dom.js",
                  "module": "./node_modules/metal-dom/lib/all/dom.js",
                  "moduleName": "./node_modules/metal-dom/lib/all/dom.js",
                  "type": "cjs require",
                  "userRequest": "../features",
                  "loc": "34:16-38"
                },
                {
                  "moduleId": 47,
                  "moduleIdentifier": "/Users/Liferay/trampo/senna.js/node_modules/metal-dom/lib/events.js",
                  "module": "./node_modules/metal-dom/lib/events.js",
                  "moduleName": "./node_modules/metal-dom/lib/events.js",
                  "type": "cjs require",
                  "userRequest": "./features",
                  "loc": "5:16-37"
                }
              ],
              "usedExports": true,
              "providedExports": null,
              "optimizationBailout": [
                "ModuleConcatenation bailout: Module is not an ECMAScript module"
              ],
              "depth": 3,
              "source": "'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _dom = require('./dom');\n\nvar _metal = require('metal');\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\n * Class with static methods responsible for doing browser feature checks.\n */\nvar features = function () {\n\tfunction features() {\n\t\t_classCallCheck(this, features);\n\t}\n\n\t_createClass(features, null, [{\n\t\tkey: 'checkAnimationEventName',\n\n\t\t/**\n   * Some browsers still supports prefixed animation events. This method can\n   * be used to retrieve the current browser event name for both, animation\n   * and transition.\n   * @return {object}\n   */\n\t\tvalue: function checkAnimationEventName() {\n\t\t\tif (features.animationEventName_ === undefined) {\n\t\t\t\tfeatures.animationEventName_ = {\n\t\t\t\t\tanimation: features.checkAnimationEventName_('animation'),\n\t\t\t\t\ttransition: features.checkAnimationEventName_('transition')\n\t\t\t\t};\n\t\t\t}\n\t\t\treturn features.animationEventName_;\n\t\t}\n\n\t\t/**\n   * @protected\n   * @param {string} type Type to test: animation, transition.\n   * @return {string} Browser event name.\n   */\n\n\t}, {\n\t\tkey: 'checkAnimationEventName_',\n\t\tvalue: function checkAnimationEventName_(type) {\n\t\t\tvar prefixes = ['Webkit', 'MS', 'O', ''];\n\t\t\tvar typeTitleCase = _metal.string.replaceInterval(type, 0, 1, type.substring(0, 1).toUpperCase());\n\t\t\tvar suffixes = [typeTitleCase + 'End', typeTitleCase + 'End', typeTitleCase + 'End', type + 'end'];\n\t\t\tfor (var i = 0; i < prefixes.length; i++) {\n\t\t\t\tif (features.animationElement_.style[prefixes[i] + typeTitleCase] !== undefined) {\n\t\t\t\t\treturn prefixes[i].toLowerCase() + suffixes[i];\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn type + 'end';\n\t\t}\n\n\t\t/**\n   * Some browsers (like IE9) change the order of element attributes, when html\n   * is rendered. This method can be used to check if this behavior happens on\n   * the current browser.\n   * @return {boolean}\n   */\n\n\t}, {\n\t\tkey: 'checkAttrOrderChange',\n\t\tvalue: function checkAttrOrderChange() {\n\t\t\tif (features.attrOrderChange_ === undefined) {\n\t\t\t\tvar originalContent = '<div data-component=\"\" data-ref=\"\"></div>';\n\t\t\t\tvar element = document.createElement('div');\n\t\t\t\t(0, _dom.append)(element, originalContent);\n\t\t\t\tfeatures.attrOrderChange_ = originalContent !== element.innerHTML;\n\t\t\t}\n\t\t\treturn features.attrOrderChange_;\n\t\t}\n\t}]);\n\n\treturn features;\n}();\n\nfeatures.animationElement_ = document.createElement('div');\nfeatures.animationEventName_ = undefined;\nfeatures.attrOrderChange_ = undefined;\n\nexports.default = features;"
            },
            {
              "id": 17,
              "identifier": "/Users/Liferay/trampo/senna.js/node_modules/babel-loader/lib/index.js??ref--0!/Users/Liferay/trampo/senna.js/src/surface/Surface.js",
              "name": "./src/surface/Surface.js",
              "index": 46,
              "index2": 42,
              "size": 9734,
              "cacheable": true,
              "built": true,
              "optional": false,
              "prefetched": false,
              "chunks": [
                0
              ],
              "assets": [],
              "issuer": "/Users/Liferay/trampo/senna.js/node_modules/babel-loader/lib/index.js??ref--0!/Users/Liferay/trampo/senna.js/src/app/App.js",
              "issuerId": 13,
              "issuerName": "./src/app/App.js",
              "profile": {
                "factory": 283,
                "building": 134,
                "dependencies": 44
              },
              "failed": false,
              "errors": 0,
              "warnings": 0,
              "reasons": [
                {
                  "moduleId": 13,
                  "moduleIdentifier": "/Users/Liferay/trampo/senna.js/node_modules/babel-loader/lib/index.js??ref--0!/Users/Liferay/trampo/senna.js/src/app/App.js",
                  "module": "./src/app/App.js",
                  "moduleName": "./src/app/App.js",
                  "type": "amd require",
                  "userRequest": "../surface/Surface",
                  "loc": "1:0-1185:2"
                },
                {
                  "moduleId": 18,
                  "moduleIdentifier": "/Users/Liferay/trampo/senna.js/node_modules/babel-loader/lib/index.js??ref--0!/Users/Liferay/trampo/senna.js/src/screen/HtmlScreen.js",
                  "module": "./src/screen/HtmlScreen.js",
                  "moduleName": "./src/screen/HtmlScreen.js",
                  "type": "amd require",
                  "userRequest": "../surface/Surface",
                  "loc": "1:0-425:2"
                }
              ],
              "usedExports": true,
              "providedExports": null,
              "optimizationBailout": [
                "ModuleConcatenation bailout: Module is not an ECMAScript module"
              ],
              "depth": 2,
              "source": "define([\"exports\", \"../globals/globals\", \"metal\", \"metal-dom\", \"metal-promise\"], function (exports, _globals, _metal, _metalDom, _metalPromise) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n\n  var _globals2 = _interopRequireDefault(_globals);\n\n  var _metalPromise2 = _interopRequireDefault(_metalPromise);\n\n  function _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n      default: obj\n    };\n  }\n\n  function _typeof(obj) {\n    if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n      _typeof = function _typeof(obj) {\n        return typeof obj;\n      };\n    } else {\n      _typeof = function _typeof(obj) {\n        return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n      };\n    }\n\n    return _typeof(obj);\n  }\n\n  function _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n      throw new TypeError(\"Cannot call a class as a function\");\n    }\n  }\n\n  function _defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  function _createClass(Constructor, protoProps, staticProps) {\n    if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) _defineProperties(Constructor, staticProps);\n    return Constructor;\n  }\n\n  function _possibleConstructorReturn(self, call) {\n    if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n      return call;\n    }\n\n    if (!self) {\n      throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }\n\n    return self;\n  }\n\n  function _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n      throw new TypeError(\"Super expression must either be null or a function\");\n    }\n\n    subClass.prototype = Object.create(superClass && superClass.prototype, {\n      constructor: {\n        value: subClass,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n    if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n  }\n\n  var Surface = function (_Disposable) {\n    _inherits(Surface, _Disposable);\n\n    /**\n     * Surface class representing the references to elements on the page that\n     * can potentially be updated by <code>App</code>.\n     * @param {string} id\n     * @constructor\n     */\n    function Surface(id) {\n      var _this;\n\n      _classCallCheck(this, Surface);\n\n      _this = _possibleConstructorReturn(this, (Surface.__proto__ || Object.getPrototypeOf(Surface)).call(this));\n\n      if (!id) {\n        throw new Error('Surface element id not specified. A surface element requires a valid id.');\n      }\n      /**\n       * Holds the active child element.\n       * @type {Element}\n       * @default null\n       * @protected\n       */\n\n\n      _this.activeChild = null;\n      /**\n       * Holds the default child element.\n       * @type {Element}\n       * @default null\n       * @protected\n       */\n\n      _this.defaultChild = null;\n      /**\n       * Holds the element with the specified surface id, if not found creates a\n       * new element with the specified id.\n       * @type {Element}\n       * @default null\n       * @protected\n       */\n\n      _this.element = null;\n      /**\n       * Holds the surface id.\n       * @type {String}\n       * @default null\n       * @protected\n       */\n\n      _this.id = id;\n      /**\n       * Holds the default transitionFn for the surfaces.\n       * @param {?Element=} from The visible surface element.\n       * @param {?Element=} to The surface element to be flipped.\n       * @default null\n       */\n\n      _this.transitionFn = null;\n      _this.defaultChild = _this.getChild(Surface.DEFAULT);\n\n      _this.maybeWrapContentAsDefault_();\n\n      _this.activeChild = _this.defaultChild;\n      return _this;\n    }\n    /**\n     * Adds screen content to a surface. If content hasn't been passed, see if\n     * an element exists in the DOM that matches the id. By convention, the\n     * element should already be nested in the right element and should have an\n     * id that is a concatentation of the surface id + '-' + the screen id.\n     * @param {!string} screenId The screen id the content belongs too.\n     * @param {?string|Element=} opt_content The string content or element to\n     *     add be added as surface content.\n     * @return {Element}\n     */\n\n\n    _createClass(Surface, [{\n      key: \"addContent\",\n      value: function addContent(screenId, opt_content) {\n        var child = this.defaultChild;\n\n        if ((0, _metal.isDefAndNotNull)(opt_content)) {\n          child = this.getChild(screenId);\n\n          if (child) {\n            (0, _metalDom.removeChildren)(child);\n          } else {\n            child = this.createChild(screenId);\n            this.transition(child, null);\n          }\n\n          (0, _metalDom.append)(child, opt_content);\n        }\n\n        var element = this.getElement();\n\n        if (element && child) {\n          (0, _metalDom.append)(element, child);\n        }\n\n        return child;\n      }\n    }, {\n      key: \"createChild\",\n      value: function createChild(screenId) {\n        var child = _globals2.default.document.createElement('div');\n\n        child.setAttribute('id', this.makeId_(screenId));\n        return child;\n      }\n    }, {\n      key: \"getChild\",\n      value: function getChild(screenId) {\n        return _globals2.default.document.getElementById(this.makeId_(screenId));\n      }\n    }, {\n      key: \"getElement\",\n      value: function getElement() {\n        if (this.element) {\n          return this.element;\n        }\n\n        this.element = _globals2.default.document.getElementById(this.id);\n        return this.element;\n      }\n    }, {\n      key: \"getId\",\n      value: function getId() {\n        return this.id;\n      }\n    }, {\n      key: \"getTransitionFn\",\n      value: function getTransitionFn() {\n        return this.transitionFn;\n      }\n    }, {\n      key: \"makeId_\",\n      value: function makeId_(screenId) {\n        return this.id + '-' + screenId;\n      }\n    }, {\n      key: \"maybeWrapContentAsDefault_\",\n      value: function maybeWrapContentAsDefault_() {\n        var element = this.getElement();\n\n        if (element && !this.defaultChild) {\n          var fragment = _globals2.default.document.createDocumentFragment();\n\n          while (element.firstChild) {\n            fragment.appendChild(element.firstChild);\n          }\n\n          this.defaultChild = this.addContent(Surface.DEFAULT, fragment);\n          this.transition(null, this.defaultChild);\n        }\n      }\n    }, {\n      key: \"setId\",\n      value: function setId(id) {\n        this.id = id;\n      }\n    }, {\n      key: \"setTransitionFn\",\n      value: function setTransitionFn(transitionFn) {\n        this.transitionFn = transitionFn;\n      }\n    }, {\n      key: \"show\",\n      value: function show(screenId) {\n        var from = this.activeChild;\n        var to = this.getChild(screenId);\n\n        if (!to) {\n          to = this.defaultChild;\n        }\n\n        this.activeChild = to;\n        return this.transition(from, to).thenAlways(function () {\n          if (from && from !== to) {\n            (0, _metalDom.exitDocument)(from);\n          }\n        });\n      }\n    }, {\n      key: \"remove\",\n      value: function remove(screenId) {\n        var child = this.getChild(screenId);\n\n        if (child) {\n          (0, _metalDom.exitDocument)(child);\n        }\n      }\n    }, {\n      key: \"toString\",\n      value: function toString() {\n        return this.id;\n      }\n    }, {\n      key: \"transition\",\n      value: function transition(from, to) {\n        var transitionFn = this.transitionFn || Surface.defaultTransition;\n        return _metalPromise2.default.resolve(transitionFn.call(this, from, to));\n      }\n    }]);\n\n    return Surface;\n  }(_metal.Disposable);\n\n  /**\n     * Holds the default surface name. Elements on the page must contain a child\n     * element containing the default content, this element must be as following:\n     *\n     * Example:\n     * <code>\n     *   <div id=\"mysurface\">\n     *     <div id=\"mysurface-default\">Default surface content.</div>\n     *   </div>\n     * </code>\n     *\n     * The default content is relevant for the initial page content. When a\n     * screen doesn't provide content for the surface the default content is\n     * restored into the page.\n     *\n     * @type {!String}\n     * @default default\n     * @static\n     */\n  Surface.DEFAULT = 'default';\n  /**\n   * Holds the default transition for all surfaces. Each surface could have its\n   * own transition.\n   *\n   * Example:\n   *\n   * <code>\n   * surface.setTransitionFn(function(from, to) {\n   *   if (from) {\n   *     from.style.display = 'none';\n   *     from.classList.remove('flipped');\n   *   }\n   *   if (to) {\n   *     to.style.display = 'block';\n   *     to.classList.add('flipped');\n   *   }\n   *   return null;\n   * });\n   * </code>\n   *\n   * @param {?Element=} from The visible surface element.\n   * @param {?Element=} to The surface element to be flipped.\n   * @static\n   */\n\n  Surface.defaultTransition = function (from, to) {\n    if (from) {\n      from.style.display = 'none';\n      from.classList.remove('flipped');\n    }\n\n    if (to) {\n      to.style.display = 'block';\n      to.classList.add('flipped');\n    }\n  };\n\n  exports.default = Surface;\n});"
            },
            {
              "id": 18,
              "identifier": "/Users/Liferay/trampo/senna.js/node_modules/babel-loader/lib/index.js??ref--0!/Users/Liferay/trampo/senna.js/src/screen/HtmlScreen.js",
              "name": "./src/screen/HtmlScreen.js",
              "index": 47,
              "index2": 48,
              "size": 14342,
              "cacheable": true,
              "built": true,
              "optional": false,
              "prefetched": false,
              "chunks": [
                0
              ],
              "assets": [],
              "issuer": "/Users/Liferay/trampo/senna.js/node_modules/babel-loader/lib/index.js??ref--0!/Users/Liferay/trampo/senna.js/src/senna.js",
              "issuerId": 21,
              "issuerName": "./src/senna.js",
              "profile": {
                "factory": 18,
                "building": 558,
                "dependencies": 360
              },
              "failed": false,
              "errors": 0,
              "warnings": 0,
              "reasons": [
                {
                  "moduleId": 21,
                  "moduleIdentifier": "/Users/Liferay/trampo/senna.js/node_modules/babel-loader/lib/index.js??ref--0!/Users/Liferay/trampo/senna.js/src/senna.js",
                  "module": "./src/senna.js",
                  "moduleName": "./src/senna.js",
                  "type": "amd require",
                  "userRequest": "./screen/HtmlScreen",
                  "loc": "1:0-37:2"
                },
                {
                  "moduleId": 36,
                  "moduleIdentifier": "/Users/Liferay/trampo/senna.js/node_modules/babel-loader/lib/index.js??ref--0!/Users/Liferay/trampo/senna.js/src/app/AppDataAttributeHandler.js",
                  "module": "./src/app/AppDataAttributeHandler.js",
                  "moduleName": "./src/app/AppDataAttributeHandler.js",
                  "type": "amd require",
                  "userRequest": "../screen/HtmlScreen",
                  "loc": "1:0-300:2"
                }
              ],
              "usedExports": true,
              "providedExports": null,
              "optimizationBailout": [
                "ModuleConcatenation bailout: Module is not an ECMAScript module"
              ],
              "depth": 1,
              "source": "define([\"exports\", \"metal\", \"metal-dom\", \"metal-promise\", \"../globals/globals\", \"./RequestScreen\", \"../surface/Surface\", \"metal-useragent\", \"metal-uri\", \"../utils/utils\"], function (exports, _metal, _metalDom, _metalPromise, _globals, _RequestScreen2, _Surface, _metalUseragent, _metalUri, _utils) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n\n  var _metalPromise2 = _interopRequireDefault(_metalPromise);\n\n  var _globals2 = _interopRequireDefault(_globals);\n\n  var _RequestScreen3 = _interopRequireDefault(_RequestScreen2);\n\n  var _Surface2 = _interopRequireDefault(_Surface);\n\n  var _metalUseragent2 = _interopRequireDefault(_metalUseragent);\n\n  var _metalUri2 = _interopRequireDefault(_metalUri);\n\n  var _utils2 = _interopRequireDefault(_utils);\n\n  function _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n      default: obj\n    };\n  }\n\n  function _typeof(obj) {\n    if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n      _typeof = function _typeof(obj) {\n        return typeof obj;\n      };\n    } else {\n      _typeof = function _typeof(obj) {\n        return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n      };\n    }\n\n    return _typeof(obj);\n  }\n\n  function _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n      throw new TypeError(\"Cannot call a class as a function\");\n    }\n  }\n\n  function _defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  function _createClass(Constructor, protoProps, staticProps) {\n    if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) _defineProperties(Constructor, staticProps);\n    return Constructor;\n  }\n\n  function _possibleConstructorReturn(self, call) {\n    if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n      return call;\n    }\n\n    if (!self) {\n      throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }\n\n    return self;\n  }\n\n  function _get(object, property, receiver) {\n    if (object === null) object = Function.prototype;\n    var desc = Object.getOwnPropertyDescriptor(object, property);\n\n    if (desc === undefined) {\n      var parent = Object.getPrototypeOf(object);\n\n      if (parent === null) {\n        return undefined;\n      } else {\n        return _get(parent, property, receiver);\n      }\n    } else if (\"value\" in desc) {\n      return desc.value;\n    } else {\n      var getter = desc.get;\n\n      if (getter === undefined) {\n        return undefined;\n      }\n\n      return getter.call(receiver);\n    }\n  }\n\n  function _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n      throw new TypeError(\"Super expression must either be null or a function\");\n    }\n\n    subClass.prototype = Object.create(superClass && superClass.prototype, {\n      constructor: {\n        value: subClass,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n    if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n  }\n\n  var HtmlScreen = function (_RequestScreen) {\n    _inherits(HtmlScreen, _RequestScreen);\n\n    /**\n     * Screen class that perform a request and extracts surface contents from\n     * the response content.\n     * @constructor\n     * @extends {RequestScreen}\n     */\n    function HtmlScreen() {\n      var _this;\n\n      _classCallCheck(this, HtmlScreen);\n\n      _this = _possibleConstructorReturn(this, (HtmlScreen.__proto__ || Object.getPrototypeOf(HtmlScreen)).call(this));\n      /**\n       * Holds the title selector. Relevant to extract the <code><title></code>\n       * element from request fragments to use as the screen title.\n       * @type {!string}\n       * @default title\n       * @protected\n       */\n\n      _this.titleSelector = 'title';\n      return _this;\n    }\n    /**\n     * @inheritDoc\n     */\n\n\n    _createClass(HtmlScreen, [{\n      key: \"activate\",\n      value: function activate() {\n        _get(HtmlScreen.prototype.__proto__ || Object.getPrototypeOf(HtmlScreen.prototype), \"activate\", this).call(this);\n\n        this.releaseVirtualDocument();\n        this.pendingStyles = null;\n      }\n    }, {\n      key: \"allocateVirtualDocumentForContent\",\n      value: function allocateVirtualDocumentForContent(htmlString) {\n        if (!this.virtualDocument) {\n          this.virtualDocument = _globals2.default.document.createElement('html');\n        }\n\n        this.copyNodeAttributesFromContent_(htmlString, this.virtualDocument);\n        this.virtualDocument.innerHTML = htmlString;\n      }\n    }, {\n      key: \"appendStyleIntoDocument_\",\n      value: function appendStyleIntoDocument_(newStyle) {\n        var isTemporaryStyle = (0, _metalDom.match)(newStyle, HtmlScreen.selectors.stylesTemporary);\n\n        if (isTemporaryStyle) {\n          this.pendingStyles.push(newStyle);\n        }\n\n        if (newStyle.id) {\n          var styleInDoc = _globals2.default.document.getElementById(newStyle.id);\n\n          if (styleInDoc) {\n            styleInDoc.parentNode.insertBefore(newStyle, styleInDoc.nextSibling);\n            return;\n          }\n        }\n\n        _globals2.default.document.head.appendChild(newStyle);\n      }\n    }, {\n      key: \"assertSameBodyIdInVirtualDocument\",\n      value: function assertSameBodyIdInVirtualDocument() {\n        var bodySurface = this.virtualDocument.querySelector('body');\n\n        if (!_globals2.default.document.body.id) {\n          _globals2.default.document.body.id = 'senna_surface_' + (0, _metal.getUid)();\n        }\n\n        if (bodySurface) {\n          bodySurface.id = _globals2.default.document.body.id;\n        }\n      }\n    }, {\n      key: \"copyNodeAttributesFromContent_\",\n      value: function copyNodeAttributesFromContent_(content, node) {\n        content = content.replace(/[<]\\s*html/ig, '<senna');\n        content = content.replace(/\\/html\\s*\\>/ig, '/senna>');\n        node.innerHTML = content;\n        var placeholder = node.querySelector('senna');\n\n        if (placeholder) {\n          _utils2.default.clearNodeAttributes(node);\n\n          _utils2.default.copyNodeAttributes(placeholder, node);\n        }\n      }\n    }, {\n      key: \"disposeInternal\",\n      value: function disposeInternal() {\n        this.disposePendingStyles();\n\n        _get(HtmlScreen.prototype.__proto__ || Object.getPrototypeOf(HtmlScreen.prototype), \"disposeInternal\", this).call(this);\n      }\n    }, {\n      key: \"disposePendingStyles\",\n      value: function disposePendingStyles() {\n        if (this.pendingStyles) {\n          this.pendingStyles.forEach(function (style) {\n            return (0, _metalDom.exitDocument)(style);\n          });\n        }\n      }\n    }, {\n      key: \"evaluateScripts\",\n      value: function evaluateScripts(surfaces) {\n        var _this2 = this;\n\n        var evaluateTrackedScripts = this.evaluateTrackedResources_(_metalDom.globalEval.runScriptsInElement, HtmlScreen.selectors.scripts, HtmlScreen.selectors.scriptsTemporary, HtmlScreen.selectors.scriptsPermanent);\n        return evaluateTrackedScripts.then(function () {\n          return _get(HtmlScreen.prototype.__proto__ || Object.getPrototypeOf(HtmlScreen.prototype), \"evaluateScripts\", _this2).call(_this2, surfaces);\n        });\n      }\n    }, {\n      key: \"evaluateStyles\",\n      value: function evaluateStyles(surfaces) {\n        var _this3 = this;\n\n        this.pendingStyles = [];\n        var evaluateTrackedStyles = this.evaluateTrackedResources_(_metalDom.globalEvalStyles.runStylesInElement, HtmlScreen.selectors.styles, HtmlScreen.selectors.stylesTemporary, HtmlScreen.selectors.stylesPermanent, this.appendStyleIntoDocument_.bind(this));\n        return evaluateTrackedStyles.then(function () {\n          return _get(HtmlScreen.prototype.__proto__ || Object.getPrototypeOf(HtmlScreen.prototype), \"evaluateStyles\", _this3).call(_this3, surfaces);\n        });\n      }\n    }, {\n      key: \"evaluateTrackedResources_\",\n      value: function evaluateTrackedResources_(evaluatorFn, selector, selectorTemporary, selectorPermanent, opt_appendResourceFn) {\n        var _this4 = this;\n\n        var tracked = this.virtualQuerySelectorAll_(selector);\n        var temporariesInDoc = this.querySelectorAll_(selectorTemporary);\n        var permanentsInDoc = this.querySelectorAll_(selectorPermanent); // Adds permanent resources in document to cache.\n\n        permanentsInDoc.forEach(function (resource) {\n          var resourceKey = _this4.getResourceKey_(resource);\n\n          if (resourceKey) {\n            HtmlScreen.permanentResourcesInDoc[resourceKey] = true;\n          }\n        });\n        var frag = (0, _metalDom.buildFragment)();\n        tracked.forEach(function (resource) {\n          var resourceKey = _this4.getResourceKey_(resource); // Do not load permanent resources if already in document.\n\n\n          if (!HtmlScreen.permanentResourcesInDoc[resourceKey]) {\n            frag.appendChild(resource);\n          } // If resource has key and is permanent add to cache.\n\n\n          if (resourceKey && (0, _metalDom.match)(resource, selectorPermanent)) {\n            HtmlScreen.permanentResourcesInDoc[resourceKey] = true;\n          }\n        });\n        return new _metalPromise2.default(function (resolve) {\n          evaluatorFn(frag, function () {\n            temporariesInDoc.forEach(function (resource) {\n              return (0, _metalDom.exitDocument)(resource);\n            });\n            resolve();\n          }, opt_appendResourceFn);\n        });\n      }\n    }, {\n      key: \"flip\",\n      value: function flip(surfaces) {\n        var _this5 = this;\n\n        return _get(HtmlScreen.prototype.__proto__ || Object.getPrototypeOf(HtmlScreen.prototype), \"flip\", this).call(this, surfaces).then(function () {\n          _utils2.default.clearNodeAttributes(document.documentElement);\n\n          _utils2.default.copyNodeAttributes(_this5.virtualDocument, document.documentElement);\n        });\n      }\n    }, {\n      key: \"getResourceKey_\",\n      value: function getResourceKey_(resource) {\n        return resource.id || resource.href || resource.src || '';\n      }\n    }, {\n      key: \"getSurfaceContent\",\n      value: function getSurfaceContent(surfaceId) {\n        var surface = this.virtualDocument.querySelector('#' + surfaceId);\n\n        if (surface) {\n          var defaultChild = surface.querySelector('#' + surfaceId + '-' + _Surface2.default.DEFAULT);\n\n          if (defaultChild) {\n            return defaultChild.innerHTML;\n          }\n\n          return surface.innerHTML; // If default content not found, use surface content\n        }\n      }\n    }, {\n      key: \"getTitleSelector\",\n      value: function getTitleSelector() {\n        return this.titleSelector;\n      }\n    }, {\n      key: \"load\",\n      value: function load(path) {\n        var _this6 = this;\n\n        return _get(HtmlScreen.prototype.__proto__ || Object.getPrototypeOf(HtmlScreen.prototype), \"load\", this).call(this, path).then(function (content) {\n          _this6.allocateVirtualDocumentForContent(content);\n\n          _this6.resolveTitleFromVirtualDocument();\n\n          _this6.assertSameBodyIdInVirtualDocument();\n\n          if (_metalUseragent2.default.isIe) {\n            _this6.makeTemporaryStylesHrefsUnique_();\n          }\n\n          return content;\n        });\n      }\n    }, {\n      key: \"makeTemporaryStylesHrefsUnique_\",\n      value: function makeTemporaryStylesHrefsUnique_() {\n        var _this7 = this;\n\n        var temporariesInDoc = this.virtualQuerySelectorAll_(HtmlScreen.selectors.stylesTemporary);\n        temporariesInDoc.forEach(function (style) {\n          return _this7.replaceStyleAndMakeUnique_(style);\n        });\n      }\n    }, {\n      key: \"replaceStyleAndMakeUnique_\",\n      value: function replaceStyleAndMakeUnique_(style) {\n        if (style.href) {\n          var newStyle = _globals2.default.document.createElement(style.tagName);\n\n          style.href = new _metalUri2.default(style.href).makeUnique().toString();\n\n          _utils2.default.copyNodeAttributes(style, newStyle);\n\n          style.parentNode.replaceChild(newStyle, style);\n          style.disabled = true;\n        }\n      }\n    }, {\n      key: \"virtualQuerySelectorAll_\",\n      value: function virtualQuerySelectorAll_(selector) {\n        return Array.prototype.slice.call(this.virtualDocument.querySelectorAll(selector));\n      }\n    }, {\n      key: \"querySelectorAll_\",\n      value: function querySelectorAll_(selector) {\n        return Array.prototype.slice.call(_globals2.default.document.querySelectorAll(selector));\n      }\n    }, {\n      key: \"releaseVirtualDocument\",\n      value: function releaseVirtualDocument() {\n        this.virtualDocument = null;\n      }\n    }, {\n      key: \"resolveTitleFromVirtualDocument\",\n      value: function resolveTitleFromVirtualDocument() {\n        var title = this.virtualDocument.querySelector(this.titleSelector);\n\n        if (title) {\n          this.setTitle(title.textContent.trim());\n        }\n      }\n    }, {\n      key: \"setTitleSelector\",\n      value: function setTitleSelector(titleSelector) {\n        this.titleSelector = titleSelector;\n      }\n    }]);\n\n    return HtmlScreen;\n  }(_RequestScreen3.default);\n\n  /**\n   * Helper selectors for tracking resources.\n   * @type {object}\n   * @protected\n   * @static\n   */\n  HtmlScreen.selectors = {\n    scripts: 'script[data-senna-track]',\n    scriptsPermanent: 'script[data-senna-track=\"permanent\"]',\n    scriptsTemporary: 'script[data-senna-track=\"temporary\"]',\n    styles: 'style[data-senna-track],link[data-senna-track]',\n    stylesPermanent: 'style[data-senna-track=\"permanent\"],link[data-senna-track=\"permanent\"]',\n    stylesTemporary: 'style[data-senna-track=\"temporary\"],link[data-senna-track=\"temporary\"]'\n  };\n  /**\n   * Caches permanent resource keys.\n   * @type {object}\n   * @protected\n   * @static\n   */\n\n  HtmlScreen.permanentResourcesInDoc = {};\n  exports.default = HtmlScreen;\n});"
            },
            {
              "id": 19,
              "identifier": "/Users/Liferay/trampo/senna.js/node_modules/babel-loader/lib/index.js??ref--0!/Users/Liferay/trampo/senna.js/src/screen/RequestScreen.js",
              "name": "./src/screen/RequestScreen.js",
              "index": 48,
              "index2": 47,
              "size": 11101,
              "cacheable": true,
              "built": true,
              "optional": false,
              "prefetched": false,
              "chunks": [
                0
              ],
              "assets": [],
              "issuer": "/Users/Liferay/trampo/senna.js/node_modules/babel-loader/lib/index.js??ref--0!/Users/Liferay/trampo/senna.js/src/senna.js",
              "issuerId": 21,
              "issuerName": "./src/senna.js",
              "profile": {
                "factory": 18,
                "building": 632,
                "dependencies": 286
              },
              "failed": false,
              "errors": 0,
              "warnings": 0,
              "reasons": [
                {
                  "moduleId": 18,
                  "moduleIdentifier": "/Users/Liferay/trampo/senna.js/node_modules/babel-loader/lib/index.js??ref--0!/Users/Liferay/trampo/senna.js/src/screen/HtmlScreen.js",
                  "module": "./src/screen/HtmlScreen.js",
                  "moduleName": "./src/screen/HtmlScreen.js",
                  "type": "amd require",
                  "userRequest": "./RequestScreen",
                  "loc": "1:0-425:2"
                },
                {
                  "moduleId": 21,
                  "moduleIdentifier": "/Users/Liferay/trampo/senna.js/node_modules/babel-loader/lib/index.js??ref--0!/Users/Liferay/trampo/senna.js/src/senna.js",
                  "module": "./src/senna.js",
                  "moduleName": "./src/senna.js",
                  "type": "amd require",
                  "userRequest": "./screen/RequestScreen",
                  "loc": "1:0-37:2"
                }
              ],
              "usedExports": true,
              "providedExports": null,
              "optimizationBailout": [
                "ModuleConcatenation bailout: Module is not an ECMAScript module"
              ],
              "depth": 1,
              "source": "define([\"exports\", \"metal\", \"metal-ajax\", \"metal-structs\", \"metal-promise\", \"../errors/errors\", \"../utils/utils\", \"../globals/globals\", \"./Screen\", \"metal-uri\", \"metal-useragent\"], function (exports, _metal, _metalAjax, _metalStructs, _metalPromise, _errors, _utils, _globals, _Screen2, _metalUri, _metalUseragent) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n\n  var _metalAjax2 = _interopRequireDefault(_metalAjax);\n\n  var _metalPromise2 = _interopRequireDefault(_metalPromise);\n\n  var _errors2 = _interopRequireDefault(_errors);\n\n  var _utils2 = _interopRequireDefault(_utils);\n\n  var _globals2 = _interopRequireDefault(_globals);\n\n  var _Screen3 = _interopRequireDefault(_Screen2);\n\n  var _metalUri2 = _interopRequireDefault(_metalUri);\n\n  var _metalUseragent2 = _interopRequireDefault(_metalUseragent);\n\n  function _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n      default: obj\n    };\n  }\n\n  function _typeof(obj) {\n    if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n      _typeof = function _typeof(obj) {\n        return typeof obj;\n      };\n    } else {\n      _typeof = function _typeof(obj) {\n        return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n      };\n    }\n\n    return _typeof(obj);\n  }\n\n  function _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n      throw new TypeError(\"Cannot call a class as a function\");\n    }\n  }\n\n  function _defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  function _createClass(Constructor, protoProps, staticProps) {\n    if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) _defineProperties(Constructor, staticProps);\n    return Constructor;\n  }\n\n  function _possibleConstructorReturn(self, call) {\n    if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n      return call;\n    }\n\n    if (!self) {\n      throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }\n\n    return self;\n  }\n\n  function _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n      throw new TypeError(\"Super expression must either be null or a function\");\n    }\n\n    subClass.prototype = Object.create(superClass && superClass.prototype, {\n      constructor: {\n        value: subClass,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n    if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n  }\n\n  var RequestScreen = function (_Screen) {\n    _inherits(RequestScreen, _Screen);\n\n    /**\n     * Request screen abstract class to perform io operations on descendant\n     * screens.\n     * @constructor\n     * @extends {Screen}\n     */\n    function RequestScreen() {\n      var _this;\n\n      _classCallCheck(this, RequestScreen);\n\n      _this = _possibleConstructorReturn(this, (RequestScreen.__proto__ || Object.getPrototypeOf(RequestScreen)).call(this));\n      /**\n       * @inheritDoc\n       * @default true\n       */\n\n      _this.cacheable = true;\n      /**\n       * Holds default http headers to set on request.\n       * @type {?Object=}\n       * @default {\n       *   'X-PJAX': 'true',\n       *   'X-Requested-With': 'XMLHttpRequest'\n       * }\n       * @protected\n       */\n\n      _this.httpHeaders = {\n        'X-PJAX': 'true',\n        'X-Requested-With': 'XMLHttpRequest'\n      };\n      /**\n       * Holds default http method to perform the request.\n       * @type {!string}\n       * @default RequestScreen.GET\n       * @protected\n       */\n\n      _this.httpMethod = RequestScreen.GET;\n      /**\n       * Holds the XHR object responsible for the request.\n       * @type {XMLHttpRequest}\n       * @default null\n       * @protected\n       */\n\n      _this.request = null;\n      /**\n       * Holds the request timeout in milliseconds.\n       * @type {!number}\n       * @default 30000\n       * @protected\n       */\n\n      _this.timeout = 30000;\n      return _this;\n    }\n    /**\n     * Asserts that response status code is valid.\n     * @param {number} status\n     * @protected\n     */\n\n\n    _createClass(RequestScreen, [{\n      key: \"assertValidResponseStatusCode\",\n      value: function assertValidResponseStatusCode(status) {\n        if (!this.isValidResponseStatusCode(status)) {\n          var error = new Error(_errors2.default.INVALID_STATUS);\n          error.invalidStatus = true;\n          error.statusCode = status;\n          throw error;\n        }\n      }\n    }, {\n      key: \"beforeUpdateHistoryPath\",\n      value: function beforeUpdateHistoryPath(path) {\n        var redirectPath = this.getRequestPath();\n\n        if (redirectPath && redirectPath !== path) {\n          return redirectPath;\n        }\n\n        return path;\n      }\n    }, {\n      key: \"beforeUpdateHistoryState\",\n      value: function beforeUpdateHistoryState(state) {\n        // If state is ours and navigate to post-without-redirect-get set\n        // history state to null, that way Senna will reload the page on\n        // popstate since it cannot predict post data.\n        if (state.senna && state.form && state.redirectPath === state.path) {\n          return null;\n        }\n\n        return state;\n      }\n    }, {\n      key: \"formatLoadPath\",\n      value: function formatLoadPath(path) {\n        var uri = new _metalUri2.default(path);\n        uri.setHostname(_globals2.default.window.location.hostname);\n        uri.setProtocol(_globals2.default.window.location.protocol);\n\n        if (_globals2.default.window.location.port) {\n          uri.setPort(_globals2.default.window.location.port);\n        }\n\n        if (_metalUseragent2.default.isIeOrEdge && this.httpMethod === RequestScreen.GET) {\n          return uri.makeUnique().toString();\n        }\n\n        return uri.toString();\n      }\n    }, {\n      key: \"getHttpHeaders\",\n      value: function getHttpHeaders() {\n        return this.httpHeaders;\n      }\n    }, {\n      key: \"getHttpMethod\",\n      value: function getHttpMethod() {\n        return this.httpMethod;\n      }\n    }, {\n      key: \"getRequestPath\",\n      value: function getRequestPath() {\n        var request = this.getRequest();\n\n        if (request) {\n          var requestPath = request.requestPath;\n          var responseUrl = this.maybeExtractResponseUrlFromRequest(request);\n\n          if (responseUrl) {\n            requestPath = responseUrl;\n          }\n\n          if (_metalUseragent2.default.isIeOrEdge && this.httpMethod === RequestScreen.GET) {\n            requestPath = new _metalUri2.default(requestPath).removeUnique().toString();\n          }\n\n          return _utils2.default.getUrlPath(requestPath);\n        }\n\n        return null;\n      }\n    }, {\n      key: \"getRequest\",\n      value: function getRequest() {\n        return this.request;\n      }\n    }, {\n      key: \"getTimeout\",\n      value: function getTimeout() {\n        return this.timeout;\n      }\n    }, {\n      key: \"isValidResponseStatusCode\",\n      value: function isValidResponseStatusCode(statusCode) {\n        return statusCode >= 200 && statusCode <= 399;\n      }\n    }, {\n      key: \"load\",\n      value: function load(path) {\n        var _this2 = this;\n\n        var cache = this.getCache();\n\n        if ((0, _metal.isDefAndNotNull)(cache)) {\n          return _metalPromise2.default.resolve(cache);\n        }\n\n        var body = null;\n        var httpMethod = this.httpMethod;\n        var headers = new _metalStructs.MultiMap();\n        Object.keys(this.httpHeaders).forEach(function (header) {\n          return headers.add(header, _this2.httpHeaders[header]);\n        });\n\n        if (_globals2.default.capturedFormElement) {\n          body = new FormData(_globals2.default.capturedFormElement);\n          this.maybeAppendSubmitButtonValue_(body);\n          httpMethod = RequestScreen.POST;\n\n          if (_metalUseragent2.default.isIeOrEdge) {\n            headers.add('If-None-Match', '\"0\"');\n          }\n        }\n\n        var requestPath = this.formatLoadPath(path);\n        return _metalAjax2.default.request(requestPath, httpMethod, body, headers, null, this.timeout).then(function (xhr) {\n          _this2.setRequest(xhr);\n\n          _this2.assertValidResponseStatusCode(xhr.status);\n\n          if (httpMethod === RequestScreen.GET && _this2.isCacheable()) {\n            _this2.addCache(xhr.responseText);\n          }\n\n          xhr.requestPath = requestPath;\n          return xhr.responseText;\n        }).catch(function (reason) {\n          switch (reason.message) {\n            case _errors2.default.REQUEST_TIMEOUT:\n              reason.timeout = true;\n              break;\n\n            case _errors2.default.REQUEST_ERROR:\n              reason.requestError = true;\n              break;\n\n            case _errors2.default.REQUEST_PREMATURE_TERMINATION:\n              reason.requestError = true;\n              reason.requestPrematureTermination = true;\n              break;\n          }\n\n          throw reason;\n        });\n      }\n    }, {\n      key: \"maybeAppendSubmitButtonValue_\",\n      value: function maybeAppendSubmitButtonValue_(body) {\n        var button = _globals2.default.capturedFormButtonElement;\n\n        if (button && button.name) {\n          body.append(button.name, button.value);\n        }\n      }\n    }, {\n      key: \"maybeExtractResponseUrlFromRequest\",\n      value: function maybeExtractResponseUrlFromRequest(request) {\n        var responseUrl = request.responseURL;\n\n        if (responseUrl) {\n          return responseUrl;\n        }\n\n        return request.getResponseHeader(RequestScreen.X_REQUEST_URL_HEADER);\n      }\n    }, {\n      key: \"setHttpHeaders\",\n      value: function setHttpHeaders(httpHeaders) {\n        this.httpHeaders = httpHeaders;\n      }\n    }, {\n      key: \"setHttpMethod\",\n      value: function setHttpMethod(httpMethod) {\n        this.httpMethod = httpMethod.toLowerCase();\n      }\n    }, {\n      key: \"setRequest\",\n      value: function setRequest(request) {\n        this.request = request;\n      }\n    }, {\n      key: \"setTimeout\",\n      value: function setTimeout(timeout) {\n        this.timeout = timeout;\n      }\n    }]);\n\n    return RequestScreen;\n  }(_Screen3.default);\n\n  /**\n   * Holds value for method get.\n   * @type {string}\n   * @default 'get'\n   * @static\n   */\n  RequestScreen.GET = 'get';\n  /**\n   * Holds value for method post.\n   * @type {string}\n   * @default 'post'\n   * @static\n   */\n\n  RequestScreen.POST = 'post';\n  /**\n   * Fallback http header to retrieve response request url.\n   * @type {string}\n   * @default 'X-Request-URL'\n   * @static\n   */\n\n  RequestScreen.X_REQUEST_URL_HEADER = 'X-Request-URL';\n  exports.default = RequestScreen;\n});"
            },
            {
              "id": 20,
              "identifier": "/Users/Liferay/trampo/senna.js/node_modules/metal-useragent/lib/UA.js",
              "name": "./node_modules/metal-useragent/lib/UA.js",
              "index": 51,
              "index2": 46,
              "size": 5007,
              "cacheable": true,
              "built": true,
              "optional": false,
              "prefetched": false,
              "chunks": [
                0
              ],
              "assets": [],
              "issuer": "/Users/Liferay/trampo/senna.js/node_modules/babel-loader/lib/index.js??ref--0!/Users/Liferay/trampo/senna.js/src/screen/HtmlScreen.js",
              "issuerId": 18,
              "issuerName": "./src/screen/HtmlScreen.js",
              "profile": {
                "factory": 359,
                "building": 12
              },
              "failed": false,
              "errors": 0,
              "warnings": 0,
              "reasons": [
                {
                  "moduleId": 18,
                  "moduleIdentifier": "/Users/Liferay/trampo/senna.js/node_modules/babel-loader/lib/index.js??ref--0!/Users/Liferay/trampo/senna.js/src/screen/HtmlScreen.js",
                  "module": "./src/screen/HtmlScreen.js",
                  "moduleName": "./src/screen/HtmlScreen.js",
                  "type": "amd require",
                  "userRequest": "metal-useragent",
                  "loc": "1:0-425:2"
                },
                {
                  "moduleId": 19,
                  "moduleIdentifier": "/Users/Liferay/trampo/senna.js/node_modules/babel-loader/lib/index.js??ref--0!/Users/Liferay/trampo/senna.js/src/screen/RequestScreen.js",
                  "module": "./src/screen/RequestScreen.js",
                  "moduleName": "./src/screen/RequestScreen.js",
                  "type": "amd require",
                  "userRequest": "metal-useragent",
                  "loc": "1:0-387:2"
                }
              ],
              "usedExports": true,
              "providedExports": null,
              "optimizationBailout": [
                "ModuleConcatenation bailout: Module is not an ECMAScript module"
              ],
              "depth": 2,
              "source": "'use strict';\n\n/**\n * Metal.js browser user agent detection. It's extremely recommended the usage\n * of feature checking over browser user agent sniffing. Unfortunately, in some\n * situations feature checking can be slow or even impossible, therefore use\n * this utility with caution.\n * @see <a href=\"http://www.useragentstring.com/\">User agent strings</a>.\n */\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar UA = function () {\n\tfunction UA() {\n\t\t_classCallCheck(this, UA);\n\t}\n\n\t_createClass(UA, null, [{\n\t\tkey: 'getNativeUserAgent',\n\n\t\t/**\n   * Gets the native userAgent string from navigator if it exists. If\n   * navigator or navigator.userAgent string is missing, returns an empty\n   * string.\n   * @return {string}\n   * @private\n   * @static\n   */\n\t\tvalue: function getNativeUserAgent() {\n\t\t\tvar navigator = UA.globals.window.navigator;\n\t\t\tif (navigator) {\n\t\t\t\tvar userAgent = navigator.userAgent;\n\t\t\t\tif (userAgent) {\n\t\t\t\t\treturn userAgent;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn '';\n\t\t}\n\n\t\t/**\n   * Gets the native platform string from navigator if it exists. If\n   * navigator or navigator.platform string is missing, returns an empty\n   * string.\n   * @return {string}\n   * @private\n   * @static\n   */\n\n\t}, {\n\t\tkey: 'getNativePlatform',\n\t\tvalue: function getNativePlatform() {\n\t\t\tvar navigator = UA.globals.window.navigator;\n\t\t\tif (navigator) {\n\t\t\t\tvar platform = navigator.platform;\n\t\t\t\tif (platform) {\n\t\t\t\t\treturn platform;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn '';\n\t\t}\n\n\t\t/**\n   * Whether the platform contains the given string, ignoring case.\n   * @param {string} str\n   * @return {boolean}\n   * @private\n   * @static\n  */\n\n\t}, {\n\t\tkey: 'matchPlatform',\n\t\tvalue: function matchPlatform(str) {\n\t\t\treturn UA.platform.indexOf(str) !== -1;\n\t\t}\n\n\t\t/**\n   * Whether the user agent contains the given string, ignoring case.\n   * @param {string} str\n   * @return {boolean}\n   * @private\n   * @static\n  */\n\n\t}, {\n\t\tkey: 'matchUserAgent',\n\t\tvalue: function matchUserAgent(str) {\n\t\t\treturn UA.userAgent.indexOf(str) !== -1;\n\t\t}\n\n\t\t/**\n   * Tests the user agent.\n   * @param {string} userAgent The user agent string.\n   * @static\n   */\n\n\t}, {\n\t\tkey: 'testUserAgent',\n\t\tvalue: function testUserAgent() {\n\t\t\tvar userAgent = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n\t\t\tvar platform = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n\n\t\t\t/**\n    * Holds the user agent value extracted from browser native user agent.\n    * @type {string}\n    * @static\n    */\n\t\t\tUA.userAgent = userAgent;\n\n\t\t\t/**\n    * Holds the platform value extracted from browser native platform.\n    * @type {string}\n    * @static\n    */\n\t\t\tUA.platform = platform;\n\n\t\t\t/**\n    * Whether the user's OS is Mac.\n    * @type {boolean}\n    * @static\n    */\n\t\t\tUA.isMac = UA.matchPlatform('Mac');\n\n\t\t\t/**\n    * Whether the user's OS is Win.\n    * @type {boolean}\n    * @static\n    */\n\t\t\tUA.isWin = UA.matchPlatform('Win');\n\n\t\t\t/**\n    * Whether the user's browser is Opera.\n    * @type {boolean}\n    * @static\n    */\n\t\t\tUA.isOpera = UA.matchUserAgent('Opera') || UA.matchUserAgent('OPR');\n\n\t\t\t/**\n    * Whether the user's browser is IE.\n    * @type {boolean}\n    * @static\n    */\n\t\t\tUA.isIe = UA.matchUserAgent('Trident') || UA.matchUserAgent('MSIE');\n\n\t\t\t/**\n    * Whether the user's browser is Edge.\n    * @type {boolean}\n    * @static\n    */\n\t\t\tUA.isEdge = UA.matchUserAgent('Edge');\n\n\t\t\t/**\n    * Whether the user's browser is IE or Edge.\n    * @type {boolean}\n    * @static\n    */\n\t\t\tUA.isIeOrEdge = UA.isIe || UA.isEdge;\n\n\t\t\t/**\n    * Whether the user's browser is Chrome.\n    * @type {boolean}\n    * @static\n    */\n\t\t\tUA.isChrome = (UA.matchUserAgent('Chrome') || UA.matchUserAgent('CriOS')) && !UA.isOpera && !UA.isEdge;\n\n\t\t\t/**\n    * Whether the user's browser is Safari.\n    * @type {boolean}\n    * @static\n    */\n\t\t\tUA.isSafari = UA.matchUserAgent('Safari') && !(UA.isChrome || UA.isOpera || UA.isEdge);\n\n\t\t\t/**\n    * Whether the user's browser is Firefox.\n    * @type {boolean}\n    * @static\n    */\n\t\t\tUA.isFirefox = UA.matchUserAgent('Firefox');\n\t\t}\n\t}]);\n\n\treturn UA;\n}();\n\n/**\n * Exposes global references.\n * @type {object}\n * @static\n */\n\n\nUA.globals = {\n\twindow: window\n};\n\nUA.testUserAgent(UA.getNativeUserAgent(), UA.getNativePlatform());\n\nexports.default = UA;"
            },
            {
              "id": 21,
              "identifier": "/Users/Liferay/trampo/senna.js/node_modules/babel-loader/lib/index.js??ref--0!/Users/Liferay/trampo/senna.js/src/senna.js",
              "name": "./src/senna.js",
              "index": 0,
              "index2": 51,
              "size": 1359,
              "cacheable": true,
              "built": true,
              "optional": false,
              "prefetched": false,
              "chunks": [
                0
              ],
              "assets": [],
              "issuer": null,
              "issuerId": null,
              "issuerName": null,
              "profile": {
                "factory": 106,
                "building": 384
              },
              "failed": false,
              "errors": 0,
              "warnings": 0,
              "reasons": [],
              "usedExports": true,
              "providedExports": null,
              "optimizationBailout": [
                "ModuleConcatenation bailout: Module is not an ECMAScript module"
              ],
              "depth": 0,
              "source": "define([\"exports\", \"./utils/utils\", \"./app/dataAttributeHandler\", \"./app/App\", \"./screen/HtmlScreen\", \"./screen/RequestScreen\", \"./route/Route\", \"./screen/Screen\"], function (exports, _utils, _dataAttributeHandler, _App, _HtmlScreen, _RequestScreen, _Route, _Screen) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.Screen = exports.RequestScreen = exports.Route = exports.HtmlScreen = exports.App = exports.utils = exports.dataAttributeHandler = undefined;\n\n  var _utils2 = _interopRequireDefault(_utils);\n\n  var _dataAttributeHandler2 = _interopRequireDefault(_dataAttributeHandler);\n\n  var _App2 = _interopRequireDefault(_App);\n\n  var _HtmlScreen2 = _interopRequireDefault(_HtmlScreen);\n\n  var _RequestScreen2 = _interopRequireDefault(_RequestScreen);\n\n  var _Route2 = _interopRequireDefault(_Route);\n\n  var _Screen2 = _interopRequireDefault(_Screen);\n\n  function _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n      default: obj\n    };\n  }\n\n  exports.default = _App2.default;\n  exports.dataAttributeHandler = _dataAttributeHandler2.default;\n  exports.utils = _utils2.default;\n  exports.App = _App2.default;\n  exports.HtmlScreen = _HtmlScreen2.default;\n  exports.Route = _Route2.default;\n  exports.RequestScreen = _RequestScreen2.default;\n  exports.Screen = _Screen2.default;\n});"
            },
            {
              "id": 22,
              "identifier": "/Users/Liferay/trampo/senna.js/node_modules/metal-uri/lib/Uri.js",
              "name": "./node_modules/metal-uri/lib/Uri.js",
              "index": 4,
              "index2": 14,
              "size": 14745,
              "cacheable": true,
              "built": true,
              "optional": false,
              "prefetched": false,
              "chunks": [
                0
              ],
              "assets": [],
              "issuer": "/Users/Liferay/trampo/senna.js/node_modules/metal-uri/node.js",
              "issuerId": 4,
              "issuerName": "./node_modules/metal-uri/node.js",
              "profile": {
                "factory": 32,
                "building": 9,
                "dependencies": 14
              },
              "failed": false,
              "errors": 0,
              "warnings": 0,
              "reasons": [
                {
                  "moduleId": 4,
                  "moduleIdentifier": "/Users/Liferay/trampo/senna.js/node_modules/metal-uri/node.js",
                  "module": "./node_modules/metal-uri/node.js",
                  "moduleName": "./node_modules/metal-uri/node.js",
                  "type": "cjs require",
                  "userRequest": "./lib/Uri",
                  "loc": "3:10-30"
                }
              ],
              "usedExports": true,
              "providedExports": null,
              "optimizationBailout": [
                "ModuleConcatenation bailout: Module is not an ECMAScript module"
              ],
              "depth": 3,
              "source": "'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\n\nvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _metal = require('metal');\n\nvar _parse = require('./parse');\n\nvar _parse2 = _interopRequireDefault(_parse);\n\nvar _metalStructs = require('metal-structs');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar parseFn_ = _parse2.default;\n\nvar Uri = function () {\n\n\t/**\n  * This class contains setters and getters for the parts of the URI.\n  * The following figure displays an example URIs and their component parts.\n  *\n  *                                  path\n  *\t                             ┌───┴────┐\n  *\t  abc://example.com:123/path/data?key=value#fragid1\n  *\t  └┬┘   └────┬────┘ └┬┘           └───┬───┘ └──┬──┘\n  * protocol  hostname  port            search    hash\n  *          └──────┬───────┘\n  *                host\n  *\n  * @param {*=} opt_uri Optional string URI to parse\n  * @constructor\n  */\n\tfunction Uri() {\n\t\tvar opt_uri = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n\n\t\t_classCallCheck(this, Uri);\n\n\t\tthis.url = Uri.parse(this.maybeAddProtocolAndHostname_(opt_uri));\n\t}\n\n\t/**\n  * Adds parameters to uri from a <code>MultiMap</code> as source.\n  * @param {MultiMap} multimap The <code>MultiMap</code> containing the\n  *   parameters.\n  * @protected\n  * @chainable\n  */\n\n\n\t_createClass(Uri, [{\n\t\tkey: 'addParametersFromMultiMap',\n\t\tvalue: function addParametersFromMultiMap(multimap) {\n\t\t\tvar _this = this;\n\n\t\t\tmultimap.names().forEach(function (name) {\n\t\t\t\tmultimap.getAll(name).forEach(function (value) {\n\t\t\t\t\t_this.addParameterValue(name, value);\n\t\t\t\t});\n\t\t\t});\n\t\t\treturn this;\n\t\t}\n\n\t\t/**\n   * Adds the value of the named query parameters.\n   * @param {string} key The parameter to set.\n   * @param {*} value The new value. Will be explicitly casted to String.\n   * @chainable\n   */\n\n\t}, {\n\t\tkey: 'addParameterValue',\n\t\tvalue: function addParameterValue(name, value) {\n\t\t\tthis.ensureQueryInitialized_();\n\t\t\tif ((0, _metal.isDef)(value)) {\n\t\t\t\tvalue = String(value);\n\t\t\t}\n\t\t\tthis.query.add(name, value);\n\t\t\treturn this;\n\t\t}\n\n\t\t/**\n   * Adds the values of the named query parameter.\n   * @param {string} key The parameter to set.\n   * @param {*} value The new value.\n   * @chainable\n   */\n\n\t}, {\n\t\tkey: 'addParameterValues',\n\t\tvalue: function addParameterValues(name, values) {\n\t\t\tvar _this2 = this;\n\n\t\t\tvalues.forEach(function (value) {\n\t\t\t\treturn _this2.addParameterValue(name, value);\n\t\t\t});\n\t\t\treturn this;\n\t\t}\n\n\t\t/**\n   * Ensures query internal map is initialized and synced with initial value\n   * extracted from URI search part.\n   * @protected\n   */\n\n\t}, {\n\t\tkey: 'ensureQueryInitialized_',\n\t\tvalue: function ensureQueryInitialized_() {\n\t\t\tvar _this3 = this;\n\n\t\t\tif (this.query) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tthis.query = new _metalStructs.MultiMap();\n\t\t\tvar search = this.url.search;\n\t\t\tif (search) {\n\t\t\t\tsearch.substring(1).split('&').forEach(function (param) {\n\t\t\t\t\tvar _param$split = param.split('='),\n\t\t\t\t\t    _param$split2 = _slicedToArray(_param$split, 2),\n\t\t\t\t\t    key = _param$split2[0],\n\t\t\t\t\t    value = _param$split2[1];\n\n\t\t\t\t\tif ((0, _metal.isDef)(value)) {\n\t\t\t\t\t\tvalue = Uri.urlDecode(value);\n\t\t\t\t\t}\n\t\t\t\t\t_this3.addParameterValue(key, value);\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\t/**\n   * Gets the hash part of uri.\n   * @return {string}\n   */\n\n\t}, {\n\t\tkey: 'getHash',\n\t\tvalue: function getHash() {\n\t\t\treturn this.url.hash || '';\n\t\t}\n\n\t\t/**\n   * Gets the host part of uri. E.g. <code>[hostname]:[port]</code>.\n   * @return {string}\n   */\n\n\t}, {\n\t\tkey: 'getHost',\n\t\tvalue: function getHost() {\n\t\t\tvar host = this.getHostname();\n\t\t\tif (host) {\n\t\t\t\tvar port = this.getPort();\n\t\t\t\tif (port && port !== '80') {\n\t\t\t\t\thost += ':' + port;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn host;\n\t\t}\n\n\t\t/**\n   * Gets the hostname part of uri without protocol and port.\n   * @return {string}\n   */\n\n\t}, {\n\t\tkey: 'getHostname',\n\t\tvalue: function getHostname() {\n\t\t\tvar hostname = this.url.hostname;\n\t\t\tif (hostname === Uri.HOSTNAME_PLACEHOLDER) {\n\t\t\t\treturn '';\n\t\t\t}\n\t\t\treturn hostname;\n\t\t}\n\n\t\t/**\n   * Gets the origin part of uri. E.g. <code>http://[hostname]:[port]</code>.\n   * @return {string}\n   */\n\n\t}, {\n\t\tkey: 'getOrigin',\n\t\tvalue: function getOrigin() {\n\t\t\tvar host = this.getHost();\n\t\t\tif (host) {\n\t\t\t\treturn this.getProtocol() + '//' + host;\n\t\t\t}\n\t\t\treturn '';\n\t\t}\n\n\t\t/**\n   * Returns the first value for a given parameter or undefined if the given\n   * parameter name does not appear in the query string.\n   * @param {string} paramName Unescaped parameter name.\n   * @return {string|undefined} The first value for a given parameter or\n   *   undefined if the given parameter name does not appear in the query\n   *   string.\n   */\n\n\t}, {\n\t\tkey: 'getParameterValue',\n\t\tvalue: function getParameterValue(name) {\n\t\t\tthis.ensureQueryInitialized_();\n\t\t\treturn this.query.get(name);\n\t\t}\n\n\t\t/**\n   * Returns the value<b>s</b> for a given parameter as a list of decoded\n   * query parameter values.\n   * @param {string} name The parameter to get values for.\n   * @return {!Array<?>} The values for a given parameter as a list of decoded\n   *   query parameter values.\n   */\n\n\t}, {\n\t\tkey: 'getParameterValues',\n\t\tvalue: function getParameterValues(name) {\n\t\t\tthis.ensureQueryInitialized_();\n\t\t\treturn this.query.getAll(name);\n\t\t}\n\n\t\t/**\n   * Returns the name<b>s</b> of the parameters.\n   * @return {!Array<string>} The names for the parameters as a list of\n   *   strings.\n   */\n\n\t}, {\n\t\tkey: 'getParameterNames',\n\t\tvalue: function getParameterNames() {\n\t\t\tthis.ensureQueryInitialized_();\n\t\t\treturn this.query.names();\n\t\t}\n\n\t\t/**\n   * Gets the function currently being used to parse URIs.\n   * @return {!function()}\n   */\n\n\t}, {\n\t\tkey: 'getPathname',\n\n\n\t\t/**\n   * Gets the pathname part of uri.\n   * @return {string}\n   */\n\t\tvalue: function getPathname() {\n\t\t\treturn this.url.pathname;\n\t\t}\n\n\t\t/**\n   * Gets the port number part of uri as string.\n   * @return {string}\n   */\n\n\t}, {\n\t\tkey: 'getPort',\n\t\tvalue: function getPort() {\n\t\t\treturn this.url.port;\n\t\t}\n\n\t\t/**\n   * Gets the protocol part of uri. E.g. <code>http:</code>.\n   * @return {string}\n   */\n\n\t}, {\n\t\tkey: 'getProtocol',\n\t\tvalue: function getProtocol() {\n\t\t\treturn this.url.protocol;\n\t\t}\n\n\t\t/**\n   * Gets the search part of uri. Search value is retrieved from query\n   * parameters.\n   * @return {string}\n   */\n\n\t}, {\n\t\tkey: 'getSearch',\n\t\tvalue: function getSearch() {\n\t\t\tvar _this4 = this;\n\n\t\t\tvar search = '';\n\t\t\tvar querystring = '';\n\t\t\tthis.getParameterNames().forEach(function (name) {\n\t\t\t\t_this4.getParameterValues(name).forEach(function (value) {\n\t\t\t\t\tquerystring += name;\n\t\t\t\t\tif ((0, _metal.isDef)(value)) {\n\t\t\t\t\t\tquerystring += '=' + encodeURIComponent(value);\n\t\t\t\t\t}\n\t\t\t\t\tquerystring += '&';\n\t\t\t\t});\n\t\t\t});\n\t\t\tquerystring = querystring.slice(0, -1);\n\t\t\tif (querystring) {\n\t\t\t\tsearch += '?' + querystring;\n\t\t\t}\n\t\t\treturn search;\n\t\t}\n\n\t\t/**\n   * Checks if uri contains the parameter.\n   * @param {string} name\n   * @return {boolean}\n   */\n\n\t}, {\n\t\tkey: 'hasParameter',\n\t\tvalue: function hasParameter(name) {\n\t\t\tthis.ensureQueryInitialized_();\n\t\t\treturn this.query.contains(name);\n\t\t}\n\n\t\t/**\n   * Makes this URL unique by adding a random param to it. Useful for avoiding\n   * cache.\n   */\n\n\t}, {\n\t\tkey: 'makeUnique',\n\t\tvalue: function makeUnique() {\n\t\t\tthis.setParameterValue(Uri.RANDOM_PARAM, _metal.string.getRandomString());\n\t\t\treturn this;\n\t\t}\n\n\t\t/**\n   * Maybe adds protocol and a hostname placeholder on a parial URI if needed.\n   * Relevent for compatibility with <code>URL</code> native object.\n   * @param {string=} opt_uri\n   * @return {string} URI with protocol and hostname placeholder.\n   */\n\n\t}, {\n\t\tkey: 'maybeAddProtocolAndHostname_',\n\t\tvalue: function maybeAddProtocolAndHostname_(opt_uri) {\n\t\t\tvar url = opt_uri;\n\t\t\tif (opt_uri.indexOf('://') === -1 && opt_uri.indexOf('javascript:') !== 0) {\n\t\t\t\t// jshint ignore:line\n\n\t\t\t\turl = Uri.DEFAULT_PROTOCOL;\n\t\t\t\tif (opt_uri[0] !== '/' || opt_uri[1] !== '/') {\n\t\t\t\t\turl += '//';\n\t\t\t\t}\n\n\t\t\t\tswitch (opt_uri.charAt(0)) {\n\t\t\t\t\tcase '.':\n\t\t\t\t\tcase '?':\n\t\t\t\t\tcase '#':\n\t\t\t\t\t\turl += Uri.HOSTNAME_PLACEHOLDER;\n\t\t\t\t\t\turl += '/';\n\t\t\t\t\t\turl += opt_uri;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase '':\n\t\t\t\t\tcase '/':\n\t\t\t\t\t\tif (opt_uri[1] !== '/') {\n\t\t\t\t\t\t\turl += Uri.HOSTNAME_PLACEHOLDER;\n\t\t\t\t\t\t}\n\t\t\t\t\t\turl += opt_uri;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tdefault:\n\t\t\t\t\t\turl += opt_uri;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn url;\n\t\t}\n\n\t\t/**\n   * Parses the given uri string into an object.\n   * @param {*=} opt_uri Optional string URI to parse\n   */\n\n\t}, {\n\t\tkey: 'removeParameter',\n\n\n\t\t/**\n   * Removes the named query parameter.\n   * @param {string} name The parameter to remove.\n   * @chainable\n   */\n\t\tvalue: function removeParameter(name) {\n\t\t\tthis.ensureQueryInitialized_();\n\t\t\tthis.query.remove(name);\n\t\t\treturn this;\n\t\t}\n\n\t\t/**\n   * Removes uniqueness parameter of the uri.\n   * @chainable\n   */\n\n\t}, {\n\t\tkey: 'removeUnique',\n\t\tvalue: function removeUnique() {\n\t\t\tthis.removeParameter(Uri.RANDOM_PARAM);\n\t\t\treturn this;\n\t\t}\n\n\t\t/**\n   * Sets the hash.\n   * @param {string} hash\n   * @chainable\n   */\n\n\t}, {\n\t\tkey: 'setHash',\n\t\tvalue: function setHash(hash) {\n\t\t\tthis.url.hash = hash;\n\t\t\treturn this;\n\t\t}\n\n\t\t/**\n   * Sets the hostname.\n   * @param {string} hostname\n   * @chainable\n   */\n\n\t}, {\n\t\tkey: 'setHostname',\n\t\tvalue: function setHostname(hostname) {\n\t\t\tthis.url.hostname = hostname;\n\t\t\treturn this;\n\t\t}\n\n\t\t/**\n   * Sets the value of the named query parameters, clearing previous values\n   * for that key.\n   * @param {string} key The parameter to set.\n   * @param {*} value The new value.\n   * @chainable\n   */\n\n\t}, {\n\t\tkey: 'setParameterValue',\n\t\tvalue: function setParameterValue(name, value) {\n\t\t\tthis.removeParameter(name);\n\t\t\tthis.addParameterValue(name, value);\n\t\t\treturn this;\n\t\t}\n\n\t\t/**\n   * Sets the values of the named query parameters, clearing previous values\n   * for that key.\n   * @param {string} key The parameter to set.\n   * @param {*} value The new value.\n   * @chainable\n   */\n\n\t}, {\n\t\tkey: 'setParameterValues',\n\t\tvalue: function setParameterValues(name, values) {\n\t\t\tvar _this5 = this;\n\n\t\t\tthis.removeParameter(name);\n\t\t\tvalues.forEach(function (value) {\n\t\t\t\treturn _this5.addParameterValue(name, value);\n\t\t\t});\n\t\t\treturn this;\n\t\t}\n\n\t\t/**\n   * Sets the pathname.\n   * @param {string} pathname\n   * @chainable\n   */\n\n\t}, {\n\t\tkey: 'setPathname',\n\t\tvalue: function setPathname(pathname) {\n\t\t\tthis.url.pathname = pathname;\n\t\t\treturn this;\n\t\t}\n\n\t\t/**\n   * Sets the port number.\n   * @param {*} port Port number.\n   * @chainable\n   */\n\n\t}, {\n\t\tkey: 'setPort',\n\t\tvalue: function setPort(port) {\n\t\t\tthis.url.port = port;\n\t\t\treturn this;\n\t\t}\n\n\t\t/**\n   * Sets the function that will be used for parsing the original string uri\n   * into an object.\n   * @param {!function()} parseFn\n   */\n\n\t}, {\n\t\tkey: 'setProtocol',\n\n\n\t\t/**\n   * Sets the protocol. If missing <code>http:</code> is used as default.\n   * @param {string} protocol\n   * @chainable\n   */\n\t\tvalue: function setProtocol(protocol) {\n\t\t\tthis.url.protocol = protocol;\n\t\t\tif (this.url.protocol[this.url.protocol.length - 1] !== ':') {\n\t\t\t\tthis.url.protocol += ':';\n\t\t\t}\n\t\t\treturn this;\n\t\t}\n\n\t\t/**\n   * @return {string} The string form of the url.\n   * @override\n   */\n\n\t}, {\n\t\tkey: 'toString',\n\t\tvalue: function toString() {\n\t\t\tvar href = '';\n\t\t\tvar host = this.getHost();\n\t\t\tif (host) {\n\t\t\t\thref += this.getProtocol() + '//';\n\t\t\t}\n\t\t\thref += host + this.getPathname() + this.getSearch() + this.getHash();\n\t\t\treturn href;\n\t\t}\n\n\t\t/**\n   * Joins the given paths.\n   * @param {string} basePath\n   * @param {...string} ...paths Any number of paths to be joined with the base url.\n   * @static\n   */\n\n\t}], [{\n\t\tkey: 'getParseFn',\n\t\tvalue: function getParseFn() {\n\t\t\treturn parseFn_;\n\t\t}\n\t}, {\n\t\tkey: 'parse',\n\t\tvalue: function parse(opt_uri) {\n\t\t\treturn parseFn_(opt_uri);\n\t\t}\n\t}, {\n\t\tkey: 'setParseFn',\n\t\tvalue: function setParseFn(parseFn) {\n\t\t\tparseFn_ = parseFn;\n\t\t}\n\t}, {\n\t\tkey: 'joinPaths',\n\t\tvalue: function joinPaths(basePath) {\n\t\t\tfor (var _len = arguments.length, paths = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n\t\t\t\tpaths[_key - 1] = arguments[_key];\n\t\t\t}\n\n\t\t\tif (basePath.charAt(basePath.length - 1) === '/') {\n\t\t\t\tbasePath = basePath.substring(0, basePath.length - 1);\n\t\t\t}\n\t\t\tpaths = paths.map(function (path) {\n\t\t\t\treturn path.charAt(0) === '/' ? path.substring(1) : path;\n\t\t\t});\n\t\t\treturn [basePath].concat(paths).join('/').replace(/\\/$/, '');\n\t\t}\n\n\t\t/**\n   * URL-decodes the string. We need to specially handle '+'s because\n   * the javascript library doesn't convert them to spaces.\n   * @param {string} str The string to url decode.\n   * @return {string} The decoded {@code str}.\n   */\n\n\t}, {\n\t\tkey: 'urlDecode',\n\t\tvalue: function urlDecode(str) {\n\t\t\treturn decodeURIComponent(str.replace(/\\+/g, ' '));\n\t\t}\n\t}]);\n\n\treturn Uri;\n}();\n\n/**\n * Default protocol value.\n * @type {string}\n * @default http:\n * @static\n */\n\n\nvar isSecure = function isSecure() {\n\treturn typeof window !== 'undefined' && window.location && window.location.protocol && window.location.protocol.indexOf('https') === 0;\n};\n\nUri.DEFAULT_PROTOCOL = isSecure() ? 'https:' : 'http:';\n\n/**\n * Hostname placeholder. Relevant to internal usage only.\n * @type {string}\n * @static\n */\nUri.HOSTNAME_PLACEHOLDER = 'hostname' + Date.now();\n\n/**\n * Name used by the param generated by `makeUnique`.\n * @type {string}\n * @static\n */\nUri.RANDOM_PARAM = 'zx';\n\nexports.default = Uri;"
            },
            {
              "id": 23,
              "identifier": "/Users/Liferay/trampo/senna.js/node_modules/metal/lib/coreNamed.js",
              "name": "./node_modules/metal/lib/coreNamed.js",
              "index": 7,
              "index2": 1,
              "size": 9924,
              "cacheable": true,
              "built": true,
              "optional": false,
              "prefetched": false,
              "chunks": [
                0
              ],
              "assets": [],
              "issuer": "/Users/Liferay/trampo/senna.js/node_modules/metal/lib/core.js",
              "issuerId": 11,
              "issuerName": "./node_modules/metal/lib/core.js",
              "profile": {
                "factory": 52,
                "building": 3
              },
              "failed": false,
              "errors": 0,
              "warnings": 0,
              "reasons": [
                {
                  "moduleId": 11,
                  "moduleIdentifier": "/Users/Liferay/trampo/senna.js/node_modules/metal/lib/core.js",
                  "module": "./node_modules/metal/lib/core.js",
                  "moduleName": "./node_modules/metal/lib/core.js",
                  "type": "cjs require",
                  "userRequest": "./coreNamed",
                  "loc": "13:17-39"
                }
              ],
              "usedExports": true,
              "providedExports": null,
              "optimizationBailout": [
                "ModuleConcatenation bailout: Module is not an ECMAScript module"
              ],
              "depth": 4,
              "source": "'use strict';\n\n/**\n * A collection of core utility functions.\n * @const\n */\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nexports.abstractMethod = abstractMethod;\nexports.disableCompatibilityMode = disableCompatibilityMode;\nexports.enableCompatibilityMode = enableCompatibilityMode;\nexports.getCompatibilityModeData = getCompatibilityModeData;\nexports.getFunctionName = getFunctionName;\nexports.getStaticProperty = getStaticProperty;\nexports.getUid = getUid;\nexports.identityFunction = identityFunction;\nexports.isBoolean = isBoolean;\nexports.isDef = isDef;\nexports.isDefAndNotNull = isDefAndNotNull;\nexports.isDocument = isDocument;\nexports.isDocumentFragment = isDocumentFragment;\nexports.isElement = isElement;\nexports.isFunction = isFunction;\nexports.isNull = isNull;\nexports.isNumber = isNumber;\nexports.isWindow = isWindow;\nexports.isObject = isObject;\nexports.isPromise = isPromise;\nexports.isString = isString;\nexports.isServerSide = isServerSide;\nexports.nullFunction = nullFunction;\nvar compatibilityModeData_ = void 0;\n\n/**\n * Counter for unique id.\n * @type {Number}\n * @private\n */\nvar uniqueIdCounter_ = 1;\n\n/**\n * Unique id property prefix.\n * @type {String}\n * @protected\n */\nvar UID_PROPERTY = exports.UID_PROPERTY = 'core_' + (Math.random() * 1e9 >>> 0);\n\n/**\n * When defining a class Foo with an abstract method bar(), you can do:\n * Foo.prototype.bar = abstractMethod\n *\n * Now if a subclass of Foo fails to override bar(), an error will be thrown\n * when bar() is invoked.\n *\n * @type {!Function}\n * @throws {Error} when invoked to indicate the method should be overridden.\n */\nfunction abstractMethod() {\n  throw Error('Unimplemented abstract method');\n}\n\n/**\n * Disables Metal.js's compatibility mode.\n */\nfunction disableCompatibilityMode() {\n  compatibilityModeData_ = undefined;\n}\n\n/**\n * Enables Metal.js's compatibility mode with the following features from rc\n * and 1.x versions:\n *     - Using \"key\" to reference component instances. In the current version\n *       this should be done via \"ref\" instead. This allows old code still\n *       using \"key\" to keep working like before. NOTE: this may cause\n *       problems, since \"key\" is meant to be used differently. Only use this\n *       if it's not possible to upgrade the code to use \"ref\" instead.\n * @param {Object=} opt_data Optional object with data to specify more\n *     details, such as:\n *         - renderers {Array} the template renderers that should be in\n *           compatibility mode, either their constructors or strings\n *           representing them (e.g. 'soy' or 'jsx'). By default, all the ones\n *           that extend from IncrementalDomRenderer.\n * @type {Object}\n */\nfunction enableCompatibilityMode() {\n  var opt_data = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n  compatibilityModeData_ = opt_data;\n}\n\n/**\n * Returns the data used for compatibility mode, or nothing if it hasn't been\n * enabled.\n * @return {Object}\n */\nfunction getCompatibilityModeData() {\n  // Compatibility mode can be set via the __METAL_COMPATIBILITY__ global var.\n  if (compatibilityModeData_ === undefined) {\n    if (typeof window !== 'undefined' && window.__METAL_COMPATIBILITY__) {\n      enableCompatibilityMode(window.__METAL_COMPATIBILITY__);\n    }\n  }\n  return compatibilityModeData_;\n}\n\n/**\n * Returns the first argument if it's truthy, or the second otherwise.\n * @param {*} a\n * @param {*} b\n * @return {*}\n * @protected\n */\nfunction getFirstTruthy_(a, b) {\n  return a || b;\n}\n\n/**\n * Gets the name of the given function. If the current browser doesn't\n * support the `name` property, this will calculate it from the function's\n * content string.\n * @param {!function()} fn\n * @return {string}\n */\nfunction getFunctionName(fn) {\n  if (!fn.name) {\n    var str = fn.toString();\n    fn.name = str.substring(9, str.indexOf('('));\n  }\n  return fn.name;\n}\n\n/**\n * Gets the value of a static property in the given class. The value will be\n * inherited from ancestors as expected, unless a custom merge function is given,\n * which can change how the super classes' value for that property will be merged\n * together.\n * The final merged value will be stored in another property, so that it won't\n * be recalculated even if this function is called multiple times.\n * @param {!function()} ctor Class constructor.\n * @param {string} propertyName Property name to be merged.\n * @param {function(*, *):*=} opt_mergeFn Function that receives the merged\n *     value of the property so far and the next value to be merged to it.\n *     Should return these two merged together. If not passed the final property\n *     will be the first truthy value among ancestors.\n */\nfunction getStaticProperty(ctor, propertyName, opt_mergeFn) {\n  var mergedName = propertyName + '_MERGED';\n  if (!ctor.hasOwnProperty(mergedName)) {\n    var merged = ctor.hasOwnProperty(propertyName) ? ctor[propertyName] : null;\n    if (ctor.__proto__ && !ctor.__proto__.isPrototypeOf(Function)) {\n      var mergeFn = opt_mergeFn || getFirstTruthy_;\n      merged = mergeFn(merged, getStaticProperty(ctor.__proto__, propertyName, mergeFn));\n    }\n    ctor[mergedName] = merged;\n  }\n  return ctor[mergedName];\n}\n\n/**\n * Gets an unique id. If `opt_object` argument is passed, the object is\n * mutated with an unique id. Consecutive calls with the same object\n * reference won't mutate the object again, instead the current object uid\n * returns. See {@link UID_PROPERTY}.\n * @param {Object=} opt_object Optional object to be mutated with the uid. If\n *     not specified this method only returns the uid.\n * @param {boolean=} opt_noInheritance Optional flag indicating if this\n *     object's uid property can be inherited from parents or not.\n * @throws {Error} when invoked to indicate the method should be overridden.\n */\nfunction getUid(opt_object, opt_noInheritance) {\n  if (opt_object) {\n    var id = opt_object[UID_PROPERTY];\n    if (opt_noInheritance && !opt_object.hasOwnProperty(UID_PROPERTY)) {\n      id = null;\n    }\n    return id || (opt_object[UID_PROPERTY] = uniqueIdCounter_++);\n  }\n  return uniqueIdCounter_++;\n}\n\n/**\n * The identity function. Returns its first argument.\n * @param {*=} opt_returnValue The single value that will be returned.\n * @return {?} The first argument.\n */\nfunction identityFunction(opt_returnValue) {\n  return opt_returnValue;\n}\n\n/**\n * Returns true if the specified value is a boolean.\n * @param {?} val Variable to test.\n * @return {boolean} Whether variable is boolean.\n */\nfunction isBoolean(val) {\n  return typeof val === 'boolean';\n}\n\n/**\n * Returns true if the specified value is not undefined.\n * @param {?} val Variable to test.\n * @return {boolean} Whether variable is defined.\n */\nfunction isDef(val) {\n  return val !== undefined;\n}\n\n/**\n * Returns true if value is not undefined or null.\n * @param {*} val\n * @return {boolean}\n */\nfunction isDefAndNotNull(val) {\n  return isDef(val) && !isNull(val);\n}\n\n/**\n * Returns true if value is a document.\n * @param {*} val\n * @return {boolean}\n */\nfunction isDocument(val) {\n  return val && (typeof val === 'undefined' ? 'undefined' : _typeof(val)) === 'object' && val.nodeType === 9;\n}\n\n/**\n * Returns true if value is a document-fragment.\n * @param {*} val\n * @return {boolean}\n */\nfunction isDocumentFragment(val) {\n  return val && (typeof val === 'undefined' ? 'undefined' : _typeof(val)) === 'object' && val.nodeType === 11;\n}\n\n/**\n * Returns true if value is a dom element.\n * @param {*} val\n * @return {boolean}\n */\nfunction isElement(val) {\n  return val && (typeof val === 'undefined' ? 'undefined' : _typeof(val)) === 'object' && val.nodeType === 1;\n}\n\n/**\n * Returns true if the specified value is a function.\n * @param {?} val Variable to test.\n * @return {boolean} Whether variable is a function.\n */\nfunction isFunction(val) {\n  return typeof val === 'function';\n}\n\n/**\n * Returns true if value is null.\n * @param {*} val\n * @return {boolean}\n */\nfunction isNull(val) {\n  return val === null;\n}\n\n/**\n * Returns true if the specified value is a number.\n * @param {?} val Variable to test.\n * @return {boolean} Whether variable is a number.\n */\nfunction isNumber(val) {\n  return typeof val === 'number';\n}\n\n/**\n * Returns true if value is a window.\n * @param {*} val\n * @return {boolean}\n */\nfunction isWindow(val) {\n  return val !== null && val === val.window;\n}\n\n/**\n * Returns true if the specified value is an object. This includes arrays\n * and functions.\n * @param {?} val Variable to test.\n * @return {boolean} Whether variable is an object.\n */\nfunction isObject(val) {\n  var type = typeof val === 'undefined' ? 'undefined' : _typeof(val);\n  return type === 'object' && val !== null || type === 'function';\n}\n\n/**\n * Returns true if value is a Promise.\n * @param {*} val\n * @return {boolean}\n */\nfunction isPromise(val) {\n  return val && (typeof val === 'undefined' ? 'undefined' : _typeof(val)) === 'object' && typeof val.then === 'function';\n}\n\n/**\n * Returns true if value is a string.\n * @param {*} val\n * @return {boolean}\n */\nfunction isString(val) {\n  return typeof val === 'string' || val instanceof String;\n}\n\n/**\n * Sets to true if running inside Node.js environment with extra check for\n * `process.browser` to skip Karma runner environment. Karma environment has\n * `process` defined even though it runs on the browser.\n * @return {boolean}\n */\nfunction isServerSide() {\n  return typeof process !== 'undefined' && typeof process.env !== 'undefined' && process.env.NODE_ENV !== 'test' && !process.browser;\n}\n\n/**\n * Null function used for default values of callbacks, etc.\n * @return {void} Nothing.\n */\nfunction nullFunction() {}"
            },
            {
              "id": 24,
              "identifier": "/Users/Liferay/trampo/senna.js/node_modules/metal/lib/array/array.js",
              "name": "./node_modules/metal/lib/array/array.js",
              "index": 8,
              "index2": 3,
              "size": 3790,
              "cacheable": true,
              "built": true,
              "optional": false,
              "prefetched": false,
              "chunks": [
                0
              ],
              "assets": [],
              "issuer": "/Users/Liferay/trampo/senna.js/node_modules/metal/lib/metal.js",
              "issuerId": 0,
              "issuerName": "./node_modules/metal/lib/metal.js",
              "profile": {
                "factory": 29,
                "building": 28,
                "dependencies": 0
              },
              "failed": false,
              "errors": 0,
              "warnings": 0,
              "reasons": [
                {
                  "moduleId": 0,
                  "moduleIdentifier": "/Users/Liferay/trampo/senna.js/node_modules/metal/lib/metal.js",
                  "module": "./node_modules/metal/lib/metal.js",
                  "moduleName": "./node_modules/metal/lib/metal.js",
                  "type": "cjs require",
                  "userRequest": "./array/array",
                  "loc": "22:13-37"
                }
              ],
              "usedExports": true,
              "providedExports": null,
              "optimizationBailout": [
                "ModuleConcatenation bailout: Module is not an ECMAScript module"
              ],
              "depth": 3,
              "source": "'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _core = require('../core');\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar array = function () {\n\tfunction array() {\n\t\t_classCallCheck(this, array);\n\t}\n\n\t_createClass(array, null, [{\n\t\tkey: 'equal',\n\n\t\t/**\n   * Checks if the given arrays have the same content.\n   * @param {!Array<*>} arr1\n   * @param {!Array<*>} arr2\n   * @return {boolean}\n   */\n\t\tvalue: function equal(arr1, arr2) {\n\t\t\tif (arr1 === arr2) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tif (arr1.length !== arr2.length) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tfor (var i = 0; i < arr1.length; i++) {\n\t\t\t\tif (arr1[i] !== arr2[i]) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\n\t\t/**\n   * Returns the first value in the given array that isn't undefined.\n   * @param {!Array} arr\n   * @return {*}\n   */\n\n\t}, {\n\t\tkey: 'firstDefinedValue',\n\t\tvalue: function firstDefinedValue(arr) {\n\t\t\tfor (var i = 0; i < arr.length; i++) {\n\t\t\t\tif (arr[i] !== undefined) {\n\t\t\t\t\treturn arr[i];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t/**\n   * Transforms the input nested array to become flat.\n   * @param {Array.<*|Array.<*>>} arr Nested array to flatten.\n   * @param {Array.<*>} opt_output Optional output array.\n   * @return {Array.<*>} Flat array.\n   */\n\n\t}, {\n\t\tkey: 'flatten',\n\t\tvalue: function flatten(arr, opt_output) {\n\t\t\tvar output = opt_output || [];\n\t\t\tfor (var i = 0; i < arr.length; i++) {\n\t\t\t\tif (Array.isArray(arr[i])) {\n\t\t\t\t\tarray.flatten(arr[i], output);\n\t\t\t\t} else {\n\t\t\t\t\toutput.push(arr[i]);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn output;\n\t\t}\n\n\t\t/**\n   * Removes the first occurrence of a particular value from an array.\n   * @param {Array.<T>} arr Array from which to remove value.\n   * @param {T} obj Object to remove.\n   * @return {boolean} True if an element was removed.\n   * @template T\n   */\n\n\t}, {\n\t\tkey: 'remove',\n\t\tvalue: function remove(arr, obj) {\n\t\t\tvar i = arr.indexOf(obj);\n\t\t\tvar rv = void 0;\n\t\t\tif (rv = i >= 0) {\n\t\t\t\tarray.removeAt(arr, i);\n\t\t\t}\n\t\t\treturn rv;\n\t\t}\n\n\t\t/**\n   * Removes from an array the element at index i\n   * @param {Array} arr Array or array like object from which to remove value.\n   * @param {number} i The index to remove.\n   * @return {boolean} True if an element was removed.\n   */\n\n\t}, {\n\t\tkey: 'removeAt',\n\t\tvalue: function removeAt(arr, i) {\n\t\t\treturn Array.prototype.splice.call(arr, i, 1).length === 1;\n\t\t}\n\n\t\t/**\n   * Slices the given array, just like Array.prototype.slice, but this\n   * is faster and working on all array-like objects (like arguments).\n   * @param {!Object} arr Array-like object to slice.\n   * @param {number} start The index that should start the slice.\n   * @param {number=} opt_end The index where the slice should end, not\n   *   included in the final array. If not given, all elements after the\n   *   start index will be included.\n   * @return {!Array}\n   */\n\n\t}, {\n\t\tkey: 'slice',\n\t\tvalue: function slice(arr, start, opt_end) {\n\t\t\tvar sliced = [];\n\t\t\tvar end = (0, _core.isDef)(opt_end) ? opt_end : arr.length;\n\t\t\tfor (var i = start; i < end; i++) {\n\t\t\t\tsliced.push(arr[i]);\n\t\t\t}\n\t\t\treturn sliced;\n\t\t}\n\t}]);\n\n\treturn array;\n}();\n\nexports.default = array;"
            },
            {
              "id": 25,
              "identifier": "/Users/Liferay/trampo/senna.js/node_modules/metal/lib/async/async.js",
              "name": "./node_modules/metal/lib/async/async.js",
              "index": 9,
              "index2": 4,
              "size": 7174,
              "cacheable": true,
              "built": true,
              "optional": false,
              "prefetched": false,
              "chunks": [
                0
              ],
              "assets": [],
              "issuer": "/Users/Liferay/trampo/senna.js/node_modules/metal/lib/metal.js",
              "issuerId": 0,
              "issuerName": "./node_modules/metal/lib/metal.js",
              "profile": {
                "factory": 29,
                "building": 26
              },
              "failed": false,
              "errors": 0,
              "warnings": 0,
              "reasons": [
                {
                  "moduleId": 0,
                  "moduleIdentifier": "/Users/Liferay/trampo/senna.js/node_modules/metal/lib/metal.js",
                  "module": "./node_modules/metal/lib/metal.js",
                  "moduleName": "./node_modules/metal/lib/metal.js",
                  "type": "cjs require",
                  "userRequest": "./async/async",
                  "loc": "26:13-37"
                }
              ],
              "usedExports": true,
              "providedExports": null,
              "optimizationBailout": [
                "ModuleConcatenation bailout: Module is not an ECMAScript module"
              ],
              "depth": 3,
              "source": "/*!\n * Polyfill from Google's Closure Library.\n * Copyright 2013 The Closure Library Authors. All Rights Reserved.\n */\n\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\nvar async = {};\n\n/**\n * Throw an item without interrupting the current execution context.  For\n * example, if processing a group of items in a loop, sometimes it is useful\n * to report an error while still allowing the rest of the batch to be\n * processed.\n * @param {*} exception\n */\nasync.throwException = function (exception) {\n\t// Each throw needs to be in its own context.\n\tasync.nextTick(function () {\n\t\tthrow exception;\n\t});\n};\n\n/**\n * Fires the provided callback just before the current callstack unwinds, or as\n * soon as possible after the current JS execution context.\n * @param {function(this:THIS)} callback\n * @param {THIS=} opt_context Object to use as the \"this value\" when calling\n *     the provided function.\n * @template THIS\n */\nasync.run = function (callback, opt_context) {\n\tif (!async.run.workQueueScheduled_) {\n\t\t// Nothing is currently scheduled, schedule it now.\n\t\tasync.nextTick(async.run.processWorkQueue);\n\t\tasync.run.workQueueScheduled_ = true;\n\t}\n\n\tasync.run.workQueue_.push(new async.run.WorkItem_(callback, opt_context));\n};\n\n/** @private {boolean} */\nasync.run.workQueueScheduled_ = false;\n\n/** @private {!Array.<!async.run.WorkItem_>} */\nasync.run.workQueue_ = [];\n\n/**\n * Run any pending async.run work items. This function is not intended\n * for general use, but for use by entry point handlers to run items ahead of\n * async.nextTick.\n */\nasync.run.processWorkQueue = function () {\n\t// NOTE: additional work queue items may be pushed while processing.\n\twhile (async.run.workQueue_.length) {\n\t\t// Don't let the work queue grow indefinitely.\n\t\tvar workItems = async.run.workQueue_;\n\t\tasync.run.workQueue_ = [];\n\t\tfor (var i = 0; i < workItems.length; i++) {\n\t\t\tvar workItem = workItems[i];\n\t\t\ttry {\n\t\t\t\tworkItem.fn.call(workItem.scope);\n\t\t\t} catch (e) {\n\t\t\t\tasync.throwException(e);\n\t\t\t}\n\t\t}\n\t}\n\n\t// There are no more work items, reset the work queue.\n\tasync.run.workQueueScheduled_ = false;\n};\n\n/**\n * @constructor\n * @final\n * @struct\n * @private\n *\n * @param {function()} fn\n * @param {Object|null|undefined} scope\n */\nasync.run.WorkItem_ = function (fn, scope) {\n\t/** @const */\n\tthis.fn = fn;\n\t/** @const */\n\tthis.scope = scope;\n};\n\n/**\n * Fires the provided callbacks as soon as possible after the current JS\n * execution context. setTimeout(…, 0) always takes at least 5ms for legacy\n * reasons.\n * @param {function(this:SCOPE)} callback Callback function to fire as soon as\n *     possible.\n * @param {SCOPE=} opt_context Object in whose scope to call the listener.\n * @template SCOPE\n */\nasync.nextTick = function (callback, opt_context) {\n\tvar cb = callback;\n\tif (opt_context) {\n\t\tcb = callback.bind(opt_context);\n\t}\n\tcb = async.nextTick.wrapCallback_(cb);\n\t// Introduced and currently only supported by IE10.\n\t// Verify if variable is defined on the current runtime (i.e., node, browser).\n\t// Can't use typeof enclosed in a function (such as core.isFunction) or an\n\t// exception will be thrown when the function is called on an environment\n\t// where the variable is undefined.\n\tif (typeof setImmediate === 'function') {\n\t\tsetImmediate(cb);\n\t\treturn;\n\t}\n\t// Look for and cache the custom fallback version of setImmediate.\n\tif (!async.nextTick.setImmediate_) {\n\t\tasync.nextTick.setImmediate_ = async.nextTick.getSetImmediateEmulator_();\n\t}\n\tasync.nextTick.setImmediate_(cb);\n};\n\n/**\n * Cache for the setImmediate implementation.\n * @type {function(function())}\n * @private\n */\nasync.nextTick.setImmediate_ = null;\n\n/**\n * Determines the best possible implementation to run a function as soon as\n * the JS event loop is idle.\n * @return {function(function())} The \"setImmediate\" implementation.\n * @private\n */\nasync.nextTick.getSetImmediateEmulator_ = function () {\n\t// Create a private message channel and use it to postMessage empty messages\n\t// to ourselves.\n\tvar Channel = void 0;\n\n\t// Verify if variable is defined on the current runtime (i.e., node, browser).\n\t// Can't use typeof enclosed in a function (such as core.isFunction) or an\n\t// exception will be thrown when the function is called on an environment\n\t// where the variable is undefined.\n\tif (typeof MessageChannel === 'function') {\n\t\tChannel = MessageChannel;\n\t}\n\n\t// If MessageChannel is not available and we are in a browser, implement\n\t// an iframe based polyfill in browsers that have postMessage and\n\t// document.addEventListener. The latter excludes IE8 because it has a\n\t// synchronous postMessage implementation.\n\tif (typeof Channel === 'undefined' && typeof window !== 'undefined' && window.postMessage && window.addEventListener) {\n\t\t/** @constructor */\n\t\tChannel = function Channel() {\n\t\t\t// Make an empty, invisible iframe.\n\t\t\tvar iframe = document.createElement('iframe');\n\t\t\tiframe.style.display = 'none';\n\t\t\tiframe.src = '';\n\t\t\tdocument.documentElement.appendChild(iframe);\n\t\t\tvar win = iframe.contentWindow;\n\t\t\tvar doc = win.document;\n\t\t\tdoc.open();\n\t\t\tdoc.write('');\n\t\t\tdoc.close();\n\t\t\tvar message = 'callImmediate' + Math.random();\n\t\t\tvar origin = win.location.protocol + '//' + win.location.host;\n\t\t\tvar onmessage = function (e) {\n\t\t\t\t// Validate origin and message to make sure that this message was\n\t\t\t\t// intended for us.\n\t\t\t\tif (e.origin !== origin && e.data !== message) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tthis.port1.onmessage();\n\t\t\t}.bind(this);\n\t\t\twin.addEventListener('message', onmessage, false);\n\t\t\tthis.port1 = {};\n\t\t\tthis.port2 = {\n\t\t\t\tpostMessage: function postMessage() {\n\t\t\t\t\twin.postMessage(message, origin);\n\t\t\t\t}\n\t\t\t};\n\t\t};\n\t}\n\tif (typeof Channel !== 'undefined') {\n\t\tvar channel = new Channel();\n\t\t// Use a fifo linked list to call callbacks in the right order.\n\t\tvar head = {};\n\t\tvar tail = head;\n\t\tchannel.port1.onmessage = function () {\n\t\t\thead = head.next;\n\t\t\tvar cb = head.cb;\n\t\t\thead.cb = null;\n\t\t\tcb();\n\t\t};\n\t\treturn function (cb) {\n\t\t\ttail.next = {\n\t\t\t\tcb: cb\n\t\t\t};\n\t\t\ttail = tail.next;\n\t\t\tchannel.port2.postMessage(0);\n\t\t};\n\t}\n\t// Implementation for IE6-8: Script elements fire an asynchronous\n\t// onreadystatechange event when inserted into the DOM.\n\tif (typeof document !== 'undefined' && 'onreadystatechange' in document.createElement('script')) {\n\t\treturn function (cb) {\n\t\t\tvar script = document.createElement('script');\n\t\t\tscript.onreadystatechange = function () {\n\t\t\t\t// Clean up and call the callback.\n\t\t\t\tscript.onreadystatechange = null;\n\t\t\t\tscript.parentNode.removeChild(script);\n\t\t\t\tscript = null;\n\t\t\t\tcb();\n\t\t\t\tcb = null;\n\t\t\t};\n\t\t\tdocument.documentElement.appendChild(script);\n\t\t};\n\t}\n\t// Fall back to setTimeout with 0. In browsers this creates a delay of 5ms\n\t// or more.\n\treturn function (cb) {\n\t\tsetTimeout(cb, 0);\n\t};\n};\n\n/**\n * Helper function that is overrided to protect callbacks with entry point\n * monitor if the application monitors entry points.\n * @param {function()} callback Callback function to fire as soon as possible.\n * @return {function()} The wrapped callback.\n * @private\n */\nasync.nextTick.wrapCallback_ = function (opt_returnValue) {\n\treturn opt_returnValue;\n};\n\nexports.default = async;"
            },
            {
              "id": 26,
              "identifier": "/Users/Liferay/trampo/senna.js/node_modules/metal/lib/disposable/Disposable.js",
              "name": "./node_modules/metal/lib/disposable/Disposable.js",
              "index": 10,
              "index2": 5,
              "size": 2100,
              "cacheable": true,
              "built": true,
              "optional": false,
              "prefetched": false,
              "chunks": [
                0
              ],
              "assets": [],
              "issuer": "/Users/Liferay/trampo/senna.js/node_modules/metal/lib/metal.js",
              "issuerId": 0,
              "issuerName": "./node_modules/metal/lib/metal.js",
              "profile": {
                "factory": 29,
                "building": 29
              },
              "failed": false,
              "errors": 0,
              "warnings": 0,
              "reasons": [
                {
                  "moduleId": 0,
                  "moduleIdentifier": "/Users/Liferay/trampo/senna.js/node_modules/metal/lib/metal.js",
                  "module": "./node_modules/metal/lib/metal.js",
                  "moduleName": "./node_modules/metal/lib/metal.js",
                  "type": "cjs require",
                  "userRequest": "./disposable/Disposable",
                  "loc": "30:18-52"
                }
              ],
              "usedExports": true,
              "providedExports": null,
              "optimizationBailout": [
                "ModuleConcatenation bailout: Module is not an ECMAScript module"
              ],
              "depth": 3,
              "source": "'use strict';\n\n/**\n * Disposable utility. When inherited provides the `dispose` function to its\n * subclass, which is responsible for disposing of any object references\n * when an instance won't be used anymore. Subclasses should override\n * `disposeInternal` to implement any specific disposing logic.\n * @constructor\n */\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar Disposable = function () {\n\tfunction Disposable() {\n\t\t_classCallCheck(this, Disposable);\n\n\t\t/**\n   * Flag indicating if this instance has already been disposed.\n   * @type {boolean}\n   * @protected\n   */\n\t\tthis.disposed_ = false;\n\t}\n\n\t/**\n  * Disposes of this instance's object references. Calls `disposeInternal`.\n  */\n\n\n\t_createClass(Disposable, [{\n\t\tkey: 'dispose',\n\t\tvalue: function dispose() {\n\t\t\tif (!this.disposed_) {\n\t\t\t\tthis.disposeInternal();\n\t\t\t\tthis.disposed_ = true;\n\t\t\t}\n\t\t}\n\n\t\t/**\n   * Subclasses should override this method to implement any specific\n   * disposing logic (like clearing references and calling `dispose` on other\n   * disposables).\n   */\n\n\t}, {\n\t\tkey: 'disposeInternal',\n\t\tvalue: function disposeInternal() {}\n\n\t\t/**\n   * Checks if this instance has already been disposed.\n   * @return {boolean}\n   */\n\n\t}, {\n\t\tkey: 'isDisposed',\n\t\tvalue: function isDisposed() {\n\t\t\treturn this.disposed_;\n\t\t}\n\t}]);\n\n\treturn Disposable;\n}();\n\nexports.default = Disposable;"
            },
            {
              "id": 27,
              "identifier": "/Users/Liferay/trampo/senna.js/node_modules/metal/lib/object/object.js",
              "name": "./node_modules/metal/lib/object/object.js",
              "index": 11,
              "index2": 6,
              "size": 3096,
              "cacheable": true,
              "built": true,
              "optional": false,
              "prefetched": false,
              "chunks": [
                0
              ],
              "assets": [],
              "issuer": "/Users/Liferay/trampo/senna.js/node_modules/metal/lib/metal.js",
              "issuerId": 0,
              "issuerName": "./node_modules/metal/lib/metal.js",
              "profile": {
                "factory": 29,
                "building": 31
              },
              "failed": false,
              "errors": 0,
              "warnings": 0,
              "reasons": [
                {
                  "moduleId": 0,
                  "moduleIdentifier": "/Users/Liferay/trampo/senna.js/node_modules/metal/lib/metal.js",
                  "module": "./node_modules/metal/lib/metal.js",
                  "moduleName": "./node_modules/metal/lib/metal.js",
                  "type": "cjs require",
                  "userRequest": "./object/object",
                  "loc": "34:14-40"
                }
              ],
              "usedExports": true,
              "providedExports": null,
              "optimizationBailout": [
                "ModuleConcatenation bailout: Module is not an ECMAScript module"
              ],
              "depth": 3,
              "source": "'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar object = function () {\n\tfunction object() {\n\t\t_classCallCheck(this, object);\n\t}\n\n\t_createClass(object, null, [{\n\t\tkey: 'mixin',\n\n\t\t/**\n   * Copies all the members of a source object to a target object.\n   * @param {Object} target Target object.\n   * @param {...Object} var_args The objects from which values will be copied.\n   * @return {Object} Returns the target object reference.\n   */\n\t\tvalue: function mixin(target) {\n\t\t\tvar key = void 0,\n\t\t\t    source = void 0;\n\t\t\tfor (var i = 1; i < arguments.length; i++) {\n\t\t\t\tsource = arguments[i];\n\t\t\t\tfor (key in source) {\n\t\t\t\t\ttarget[key] = source[key];\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn target;\n\t\t}\n\n\t\t/**\n   * Returns an object based on its fully qualified external name.\n   * @param {string} name The fully qualified name.\n   * @param {object=} opt_obj The object within which to look; default is\n   *     <code>window</code>.\n   * @return {?} The value (object or primitive) or, if not found, undefined.\n   */\n\n\t}, {\n\t\tkey: 'getObjectByName',\n\t\tvalue: function getObjectByName(name, opt_obj) {\n\t\t\tvar scope = opt_obj || window;\n\t\t\tvar parts = name.split('.');\n\t\t\treturn parts.reduce(function (part, key) {\n\t\t\t\treturn part[key];\n\t\t\t}, scope);\n\t\t}\n\n\t\t/**\n   * Returns a new object with the same keys as the given one, but with\n   * their values set to the return values of the specified function.\n   * @param {!Object} obj\n   * @param {!function(string, *)} fn\n   * @return {!Object}\n   */\n\n\t}, {\n\t\tkey: 'map',\n\t\tvalue: function map(obj, fn) {\n\t\t\tvar mappedObj = {};\n\t\t\tvar keys = Object.keys(obj);\n\t\t\tfor (var i = 0; i < keys.length; i++) {\n\t\t\t\tmappedObj[keys[i]] = fn(keys[i], obj[keys[i]]);\n\t\t\t}\n\t\t\treturn mappedObj;\n\t\t}\n\n\t\t/**\n   * Checks if the two given objects are equal. This is done via a shallow\n   * check, including only the keys directly contained by the 2 objects.\n   * @return {boolean}\n   */\n\n\t}, {\n\t\tkey: 'shallowEqual',\n\t\tvalue: function shallowEqual(obj1, obj2) {\n\t\t\tif (obj1 === obj2) {\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\tvar keys1 = Object.keys(obj1);\n\t\t\tvar keys2 = Object.keys(obj2);\n\t\t\tif (keys1.length !== keys2.length) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tfor (var i = 0; i < keys1.length; i++) {\n\t\t\t\tif (obj1[keys1[i]] !== obj2[keys1[i]]) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\t}]);\n\n\treturn object;\n}();\n\nexports.default = object;"
            },
            {
              "id": 28,
              "identifier": "/Users/Liferay/trampo/senna.js/node_modules/metal/lib/string/string.js",
              "name": "./node_modules/metal/lib/string/string.js",
              "index": 12,
              "index2": 7,
              "size": 4127,
              "cacheable": true,
              "built": true,
              "optional": false,
              "prefetched": false,
              "chunks": [
                0
              ],
              "assets": [],
              "issuer": "/Users/Liferay/trampo/senna.js/node_modules/metal/lib/metal.js",
              "issuerId": 0,
              "issuerName": "./node_modules/metal/lib/metal.js",
              "profile": {
                "factory": 29,
                "building": 33
              },
              "failed": false,
              "errors": 0,
              "warnings": 0,
              "reasons": [
                {
                  "moduleId": 0,
                  "moduleIdentifier": "/Users/Liferay/trampo/senna.js/node_modules/metal/lib/metal.js",
                  "module": "./node_modules/metal/lib/metal.js",
                  "moduleName": "./node_modules/metal/lib/metal.js",
                  "type": "cjs require",
                  "userRequest": "./string/string",
                  "loc": "38:14-40"
                }
              ],
              "usedExports": true,
              "providedExports": null,
              "optimizationBailout": [
                "ModuleConcatenation bailout: Module is not an ECMAScript module"
              ],
              "depth": 3,
              "source": "'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar string = function () {\n\tfunction string() {\n\t\t_classCallCheck(this, string);\n\t}\n\n\t_createClass(string, null, [{\n\t\tkey: 'caseInsensitiveCompare',\n\n\t\t/**\n   * Compares the given strings without taking the case into account.\n   * @param {string|number} str1\n   * @param {string|number} str2\n   * @return {number} Either -1, 0 or 1, according to if the first string is\n   *     \"smaller\", equal or \"bigger\" than the second given string.\n   */\n\t\tvalue: function caseInsensitiveCompare(str1, str2) {\n\t\t\tvar test1 = String(str1).toLowerCase();\n\t\t\tvar test2 = String(str2).toLowerCase();\n\n\t\t\tif (test1 < test2) {\n\t\t\t\treturn -1;\n\t\t\t} else if (test1 === test2) {\n\t\t\t\treturn 0;\n\t\t\t} else {\n\t\t\t\treturn 1;\n\t\t\t}\n\t\t}\n\n\t\t/**\n   * Removes the breaking spaces from the left and right of the string and\n   * collapses the sequences of breaking spaces in the middle into single spaces.\n   * The original and the result strings render the same way in HTML.\n   * @param {string} str A string in which to collapse spaces.\n   * @return {string} Copy of the string with normalized breaking spaces.\n   */\n\n\t}, {\n\t\tkey: 'collapseBreakingSpaces',\n\t\tvalue: function collapseBreakingSpaces(str) {\n\t\t\treturn str.replace(/[\\t\\r\\n ]+/g, ' ').replace(/^[\\t\\r\\n ]+|[\\t\\r\\n ]+$/g, '');\n\t\t}\n\n\t\t/**\n  * Escapes characters in the string that are not safe to use in a RegExp.\n  * @param {*} str The string to escape. If not a string, it will be casted\n  *     to one.\n  * @return {string} A RegExp safe, escaped copy of {@code s}.\n  */\n\n\t}, {\n\t\tkey: 'escapeRegex',\n\t\tvalue: function escapeRegex(str) {\n\t\t\treturn String(str).replace(/([-()\\[\\]{}+?*.$\\^|,:#<!\\\\])/g, '\\\\$1').replace(/\\x08/g, '\\\\x08');\n\t\t}\n\n\t\t/**\n  * Returns a string with at least 64-bits of randomness.\n  * @return {string} A random string, e.g. sn1s7vb4gcic.\n  */\n\n\t}, {\n\t\tkey: 'getRandomString',\n\t\tvalue: function getRandomString() {\n\t\t\tvar x = 2147483648;\n\t\t\treturn Math.floor(Math.random() * x).toString(36) + Math.abs(Math.floor(Math.random() * x) ^ Date.now()).toString(36);\n\t\t}\n\n\t\t/**\n   * Calculates the hashcode for a string. The hashcode value is computed by\n   * the sum algorithm: s[0]*31^(n-1) + s[1]*31^(n-2) + ... + s[n-1]. A nice\n   * property of using 31 prime is that the multiplication can be replaced by\n   * a shift and a subtraction for better performance: 31*i == (i<<5)-i.\n   * Modern VMs do this sort of optimization automatically.\n   * @param {String} val Target string.\n   * @return {Number} Returns the string hashcode.\n   */\n\n\t}, {\n\t\tkey: 'hashCode',\n\t\tvalue: function hashCode(val) {\n\t\t\tvar hash = 0;\n\t\t\tfor (var i = 0, len = val.length; i < len; i++) {\n\t\t\t\thash = 31 * hash + val.charCodeAt(i);\n\t\t\t\thash %= 0x100000000;\n\t\t\t}\n\t\t\treturn hash;\n\t\t}\n\n\t\t/**\n   * Replaces interval into the string with specified value, e.g.\n   * `replaceInterval(\"abcde\", 1, 4, \"\")` returns \"ae\".\n   * @param {string} str The input string.\n   * @param {Number} start Start interval position to be replaced.\n   * @param {Number} end End interval position to be replaced.\n   * @param {string} value The value that replaces the specified interval.\n   * @return {string}\n   */\n\n\t}, {\n\t\tkey: 'replaceInterval',\n\t\tvalue: function replaceInterval(str, start, end, value) {\n\t\t\treturn str.substring(0, start) + value + str.substring(end);\n\t\t}\n\t}]);\n\n\treturn string;\n}();\n\nexports.default = string;"
            },
            {
              "id": 29,
              "identifier": "/Users/Liferay/trampo/senna.js/node_modules/metal-uri/lib/parse.js",
              "name": "./node_modules/metal-uri/lib/parse.js",
              "index": 13,
              "index2": 10,
              "size": 1118,
              "cacheable": true,
              "built": true,
              "optional": false,
              "prefetched": false,
              "chunks": [
                0
              ],
              "assets": [],
              "issuer": "/Users/Liferay/trampo/senna.js/node_modules/metal-uri/lib/Uri.js",
              "issuerId": 22,
              "issuerName": "./node_modules/metal-uri/lib/Uri.js",
              "profile": {
                "factory": 54,
                "building": 1,
                "dependencies": 0
              },
              "failed": false,
              "errors": 0,
              "warnings": 0,
              "reasons": [
                {
                  "moduleId": 22,
                  "moduleIdentifier": "/Users/Liferay/trampo/senna.js/node_modules/metal-uri/lib/Uri.js",
                  "module": "./node_modules/metal-uri/lib/Uri.js",
                  "moduleName": "./node_modules/metal-uri/lib/Uri.js",
                  "type": "cjs require",
                  "userRequest": "./parse",
                  "loc": "13:13-31"
                }
              ],
              "usedExports": true,
              "providedExports": null,
              "optimizationBailout": [
                "ModuleConcatenation bailout: Module is not an ECMAScript module"
              ],
              "depth": 4,
              "source": "'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\n\nvar _metal = require('metal');\n\nvar _parseFromAnchor = require('./parseFromAnchor');\n\nvar _parseFromAnchor2 = _interopRequireDefault(_parseFromAnchor);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Parses the given uri string into an object. The URL function will be used\n * when present, otherwise we'll fall back to the anchor node element.\n * @param {*=} opt_uri Optional string URI to parse\n */\nfunction parse(opt_uri) {\n\tif ((0, _metal.isFunction)(URL) && URL.length) {\n\t\tvar url = new URL(opt_uri);\n\n\t\t// Safari Browsers will cap port to the max 16-bit unsigned integer (65535) instead\n\t\t// of throwing a TypeError as per spec. It will still keep the port number in the\n\t\t// href attribute, so we can use this mismatch to raise the expected exception.\n\t\tif (url.port && url.href.indexOf(url.port) === -1) {\n\t\t\tthrow new TypeError(opt_uri + ' is not a valid URL');\n\t\t}\n\n\t\treturn url;\n\t} else {\n\t\treturn (0, _parseFromAnchor2.default)(opt_uri);\n\t}\n}\n\nexports.default = parse;"
            },
            {
              "id": 30,
              "identifier": "/Users/Liferay/trampo/senna.js/node_modules/metal-uri/lib/parseFromAnchor.js",
              "name": "./node_modules/metal-uri/lib/parseFromAnchor.js",
              "index": 14,
              "index2": 9,
              "size": 696,
              "cacheable": true,
              "built": true,
              "optional": false,
              "prefetched": false,
              "chunks": [
                0
              ],
              "assets": [],
              "issuer": "/Users/Liferay/trampo/senna.js/node_modules/metal-uri/lib/parse.js",
              "issuerId": 29,
              "issuerName": "./node_modules/metal-uri/lib/parse.js",
              "profile": {
                "factory": 13,
                "building": 1
              },
              "failed": false,
              "errors": 0,
              "warnings": 0,
              "reasons": [
                {
                  "moduleId": 29,
                  "moduleIdentifier": "/Users/Liferay/trampo/senna.js/node_modules/metal-uri/lib/parse.js",
                  "module": "./node_modules/metal-uri/lib/parse.js",
                  "moduleName": "./node_modules/metal-uri/lib/parse.js",
                  "type": "cjs require",
                  "userRequest": "./parseFromAnchor",
                  "loc": "9:23-51"
                }
              ],
              "usedExports": true,
              "providedExports": null,
              "optimizationBailout": [
                "ModuleConcatenation bailout: Module is not an ECMAScript module"
              ],
              "depth": 5,
              "source": "'use strict';\n\n/**\n * Parses the given uri string into an object.\n * @param {*=} opt_uri Optional string URI to parse\n */\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\nfunction parseFromAnchor(opt_uri) {\n\tvar link = document.createElement('a');\n\tlink.href = opt_uri;\n\n\tif (link.protocol === ':' || !/:/.test(link.href)) {\n\t\tthrow new TypeError(opt_uri + ' is not a valid URL');\n\t}\n\n\treturn {\n\t\thash: link.hash,\n\t\thostname: link.hostname,\n\t\tpassword: link.password,\n\t\tpathname: link.pathname[0] === '/' ? link.pathname : '/' + link.pathname,\n\t\tport: link.port,\n\t\tprotocol: link.protocol,\n\t\tsearch: link.search,\n\t\tusername: link.username\n\t};\n}\n\nexports.default = parseFromAnchor;"
            },
            {
              "id": 31,
              "identifier": "/Users/Liferay/trampo/senna.js/node_modules/metal-structs/lib/MultiMap.js",
              "name": "./node_modules/metal-structs/lib/MultiMap.js",
              "index": 16,
              "index2": 11,
              "size": 4542,
              "cacheable": true,
              "built": true,
              "optional": false,
              "prefetched": false,
              "chunks": [
                0
              ],
              "assets": [],
              "issuer": "/Users/Liferay/trampo/senna.js/node_modules/metal-structs/lib/all/structs.js",
              "issuerId": 12,
              "issuerName": "./node_modules/metal-structs/lib/all/structs.js",
              "profile": {
                "factory": 7,
                "building": 56,
                "dependencies": 3
              },
              "failed": false,
              "errors": 0,
              "warnings": 0,
              "reasons": [
                {
                  "moduleId": 12,
                  "moduleIdentifier": "/Users/Liferay/trampo/senna.js/node_modules/metal-structs/lib/all/structs.js",
                  "module": "./node_modules/metal-structs/lib/all/structs.js",
                  "moduleName": "./node_modules/metal-structs/lib/all/structs.js",
                  "type": "cjs require",
                  "userRequest": "../MultiMap",
                  "loc": "8:16-38"
                }
              ],
              "usedExports": true,
              "providedExports": null,
              "optimizationBailout": [
                "ModuleConcatenation bailout: Module is not an ECMAScript module"
              ],
              "depth": 3,
              "source": "'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\n\nvar _metal = require('metal');\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n/**\n * A cached reference to the create function.\n */\nvar create = Object.create;\n\n/**\n * Case insensitive string Multimap implementation. Allows multiple values for\n * the same key name.\n * @extends {Disposable}\n */\n\nvar MultiMap = function (_Disposable) {\n\t_inherits(MultiMap, _Disposable);\n\n\tfunction MultiMap() {\n\t\t_classCallCheck(this, MultiMap);\n\n\t\tvar _this = _possibleConstructorReturn(this, _Disposable.call(this));\n\n\t\t_this.keys = create(null);\n\t\t_this.values = create(null);\n\t\treturn _this;\n\t}\n\n\t/**\n  * Adds value to a key name.\n  * @param {string} name\n  * @param {*} value\n  * @chainable\n  */\n\n\n\tMultiMap.prototype.add = function add(name, value) {\n\t\tthis.keys[name.toLowerCase()] = name;\n\t\tthis.values[name.toLowerCase()] = this.values[name.toLowerCase()] || [];\n\t\tthis.values[name.toLowerCase()].push(value);\n\t\treturn this;\n\t};\n\n\t/**\n  * Clears map names and values.\n  * @chainable\n  */\n\n\n\tMultiMap.prototype.clear = function clear() {\n\t\tthis.keys = create(null);\n\t\tthis.values = create(null);\n\t\treturn this;\n\t};\n\n\t/**\n  * Checks if map contains a value to the key name.\n  * @param {string} name\n  * @return {boolean}\n  * @chainable\n  */\n\n\n\tMultiMap.prototype.contains = function contains(name) {\n\t\treturn name.toLowerCase() in this.values;\n\t};\n\n\t/**\n  * @inheritDoc\n  */\n\n\n\tMultiMap.prototype.disposeInternal = function disposeInternal() {\n\t\tthis.values = null;\n\t};\n\n\t/**\n  * Creates a `MultiMap` instance from the given object.\n  * @param {!Object} obj\n  * @return {!MultiMap}\n  */\n\n\n\tMultiMap.fromObject = function fromObject(obj) {\n\t\tvar map = new MultiMap();\n\t\tvar keys = Object.keys(obj);\n\t\tfor (var i = 0; i < keys.length; i++) {\n\t\t\tmap.set(keys[i], obj[keys[i]]);\n\t\t}\n\t\treturn map;\n\t};\n\n\t/**\n  * Gets the first added value from a key name.\n  * @param {string} name\n  * @return {*}\n  * @chainable\n  */\n\n\n\tMultiMap.prototype.get = function get(name) {\n\t\tvar values = this.values[name.toLowerCase()];\n\t\tif (values) {\n\t\t\treturn values[0];\n\t\t}\n\t};\n\n\t/**\n  * Gets all values from a key name.\n  * @param {string} name\n  * @return {Array.<*>}\n  */\n\n\n\tMultiMap.prototype.getAll = function getAll(name) {\n\t\treturn this.values[name.toLowerCase()];\n\t};\n\n\t/**\n  * Returns true if the map is empty, false otherwise.\n  * @return {boolean}\n  */\n\n\n\tMultiMap.prototype.isEmpty = function isEmpty() {\n\t\treturn this.size() === 0;\n\t};\n\n\t/**\n  * Gets array of key names.\n  * @return {Array.<string>}\n  */\n\n\n\tMultiMap.prototype.names = function names() {\n\t\tvar _this2 = this;\n\n\t\treturn Object.keys(this.values).map(function (key) {\n\t\t\treturn _this2.keys[key];\n\t\t});\n\t};\n\n\t/**\n  * Removes all values from a key name.\n  * @param {string} name\n  * @chainable\n  */\n\n\n\tMultiMap.prototype.remove = function remove(name) {\n\t\tdelete this.keys[name.toLowerCase()];\n\t\tdelete this.values[name.toLowerCase()];\n\t\treturn this;\n\t};\n\n\t/**\n  * Sets the value of a key name. Relevant to replace the current values with\n  * a new one.\n  * @param {string} name\n  * @param {*} value\n  * @chainable\n  */\n\n\n\tMultiMap.prototype.set = function set(name, value) {\n\t\tthis.keys[name.toLowerCase()] = name;\n\t\tthis.values[name.toLowerCase()] = [value];\n\t\treturn this;\n\t};\n\n\t/**\n  * Gets the size of the map key names.\n  * @return {number}\n  */\n\n\n\tMultiMap.prototype.size = function size() {\n\t\treturn this.names().length;\n\t};\n\n\t/**\n  * Returns the parsed values as a string.\n  * @return {string}\n  */\n\n\n\tMultiMap.prototype.toString = function toString() {\n\t\treturn JSON.stringify(this.values);\n\t};\n\n\treturn MultiMap;\n}(_metal.Disposable);\n\nexports.default = MultiMap;"
            },
            {
              "id": 32,
              "identifier": "/Users/Liferay/trampo/senna.js/node_modules/metal-structs/lib/TreeNode.js",
              "name": "./node_modules/metal-structs/lib/TreeNode.js",
              "index": 17,
              "index2": 12,
              "size": 5460,
              "cacheable": true,
              "built": true,
              "optional": false,
              "prefetched": false,
              "chunks": [
                0
              ],
              "assets": [],
              "issuer": "/Users/Liferay/trampo/senna.js/node_modules/metal-structs/lib/all/structs.js",
              "issuerId": 12,
              "issuerName": "./node_modules/metal-structs/lib/all/structs.js",
              "profile": {
                "factory": 7,
                "building": 58,
                "dependencies": 1
              },
              "failed": false,
              "errors": 0,
              "warnings": 0,
              "reasons": [
                {
                  "moduleId": 12,
                  "moduleIdentifier": "/Users/Liferay/trampo/senna.js/node_modules/metal-structs/lib/all/structs.js",
                  "module": "./node_modules/metal-structs/lib/all/structs.js",
                  "moduleName": "./node_modules/metal-structs/lib/all/structs.js",
                  "type": "cjs require",
                  "userRequest": "../TreeNode",
                  "loc": "12:16-38"
                }
              ],
              "usedExports": true,
              "providedExports": null,
              "optimizationBailout": [
                "ModuleConcatenation bailout: Module is not an ECMAScript module"
              ],
              "depth": 3,
              "source": "'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\n\nvar _metal = require('metal');\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\n * Generic tree node data structure with arbitrary number of child nodes.\n * @param {V} value Value.\n * @constructor\n */\nvar TreeNode = function () {\n\tfunction TreeNode(value) {\n\t\t_classCallCheck(this, TreeNode);\n\n\t\t/**\n   * The value.\n   * @private {V}\n   */\n\t\tthis.value_ = value;\n\n\t\t/**\n   * Reference to the parent node or null if it has no parent.\n   * @private {TreeNode}\n   */\n\t\tthis.parent_ = null;\n\n\t\t/**\n   * Child nodes or null in case of leaf node.\n   * @private {Array<!TreeNode>}\n   */\n\t\tthis.children_ = null;\n\t}\n\n\t/**\n  * Appends a child node to this node.\n  * @param {!TreeNode} child Orphan child node.\n  */\n\n\n\tTreeNode.prototype.addChild = function addChild(child) {\n\t\tassertChildHasNoParent(child);\n\t\tchild.setParent(this);\n\t\tthis.children_ = this.children_ || [];\n\t\tthis.children_.push(child);\n\t};\n\n\t/**\n  * Tells whether this node is the ancestor of the given node.\n  * @param {!TreeNode} node A node.\n  * @return {boolean} Whether this node is the ancestor of {@code node}.\n  */\n\n\n\tTreeNode.prototype.contains = function contains(node) {\n\t\tvar current = node.getParent();\n\t\twhile (current) {\n\t\t\tif (current === this) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tcurrent = current.getParent();\n\t\t}\n\t\treturn false;\n\t};\n\n\t/**\n  * @return {!Array<TreeNode>} All ancestor nodes in bottom-up order.\n  */\n\n\n\tTreeNode.prototype.getAncestors = function getAncestors() {\n\t\tvar ancestors = [];\n\t\tvar node = this.getParent();\n\t\twhile (node) {\n\t\t\tancestors.push(node);\n\t\t\tnode = node.getParent();\n\t\t}\n\t\treturn ancestors;\n\t};\n\n\t/**\n  * Gets the child node of this node at the given index.\n  * @param {number} index Child index.\n  * @return {?TreeNode} The node at the given index\n  * or null if not found.\n  */\n\n\n\tTreeNode.prototype.getChildAt = function getChildAt(index) {\n\t\treturn this.getChildren()[index] || null;\n\t};\n\n\t/**\n  * @return {?Array<!TreeNode>} Child nodes or null in case of leaf node.\n  */\n\n\n\tTreeNode.prototype.getChildren = function getChildren() {\n\t\treturn this.children_ || TreeNode.EMPTY_ARRAY;\n\t};\n\n\t/**\n  * @return {number} The number of children.\n  */\n\n\n\tTreeNode.prototype.getChildCount = function getChildCount() {\n\t\treturn this.getChildren().length;\n\t};\n\n\t/**\n  * @return {number} The number of ancestors of the node.\n  */\n\n\n\tTreeNode.prototype.getDepth = function getDepth() {\n\t\tvar depth = 0;\n\t\tvar node = this;\n\t\twhile (node.getParent()) {\n\t\t\tdepth++;\n\t\t\tnode = node.getParent();\n\t\t}\n\t\treturn depth;\n\t};\n\n\t/**\n  * @return {?TreeNode} Parent node or null if it has no parent.\n  */\n\n\n\tTreeNode.prototype.getParent = function getParent() {\n\t\treturn this.parent_;\n\t};\n\n\t/**\n  * @return {!TreeNode} The root of the tree structure, i.e. the farthest\n  * ancestor of the node or the node itself if it has no parents.\n  */\n\n\n\tTreeNode.prototype.getRoot = function getRoot() {\n\t\tvar root = this;\n\t\twhile (root.getParent()) {\n\t\t\troot = root.getParent();\n\t\t}\n\t\treturn root;\n\t};\n\n\t/**\n  * Gets the value.\n  * @return {V} The value.\n  */\n\n\n\tTreeNode.prototype.getValue = function getValue() {\n\t\treturn this.value_;\n\t};\n\n\t/**\n  * @return {boolean} Whether the node is a leaf node.\n  */\n\n\n\tTreeNode.prototype.isLeaf = function isLeaf() {\n\t\treturn !this.getChildCount();\n\t};\n\n\t/**\n  * Removes the given child node of this node.\n  * @param {TreeNode} child The node to remove.\n  * @return {TreeNode} The removed node if any, null otherwise.\n  */\n\n\n\tTreeNode.prototype.removeChild = function removeChild(child) {\n\t\tif (_metal.array.remove(this.getChildren(), child)) {\n\t\t\treturn child;\n\t\t}\n\t\treturn null;\n\t};\n\n\t/**\n  * Sets the parent node of this node. The callers must ensure that the\n  * parent node and only that has this node among its children.\n  * @param {TreeNode} parent The parent to set. If null, the node will be\n  * detached from the tree.\n  * @protected\n  */\n\n\n\tTreeNode.prototype.setParent = function setParent(parent) {\n\t\tthis.parent_ = parent;\n\t};\n\n\t/**\n  * Traverses the subtree. The first callback starts with this node,\n  * and visits the descendant nodes depth-first, in preorder.\n  * The second callback, starts with deepest child then visits\n  * the ancestor nodes depth-first, in postorder. E.g.\n  *\n  *  \t A\n  *    / \\\n  *   B   C\n  *  /   / \\\n  * D   E   F\n  *\n  * preorder -> ['A', 'B', 'D', 'C', 'E', 'F']\n  * postorder -> ['D', 'B', 'E', 'F', 'C', 'A']\n  *\n  * @param {function=} opt_preorderFn The callback to execute when visiting a node.\n  * @param {function=} opt_postorderFn The callback to execute before leaving a node.\n  */\n\n\n\tTreeNode.prototype.traverse = function traverse(opt_preorderFn, opt_postorderFn) {\n\t\tif (opt_preorderFn) {\n\t\t\topt_preorderFn(this);\n\t\t}\n\t\tthis.getChildren().forEach(function (child) {\n\t\t\treturn child.traverse(opt_preorderFn, opt_postorderFn);\n\t\t});\n\t\tif (opt_postorderFn) {\n\t\t\topt_postorderFn(this);\n\t\t}\n\t};\n\n\treturn TreeNode;\n}();\n\n/**\n * Constant for empty array to avoid unnecessary allocations.\n * @private\n */\n\n\nTreeNode.EMPTY_ARRAY = [];\n\n/**\n * Asserts that child has no parent.\n * @param {TreeNode} child A child.\n * @private\n */\nvar assertChildHasNoParent = function assertChildHasNoParent(child) {\n\tif (child.getParent()) {\n\t\tthrow new Error('Cannot add child with parent.');\n\t}\n};\n\nexports.default = TreeNode;"
            },
            {
              "id": 33,
              "identifier": "external \"path\"",
              "name": "external \"path\"",
              "index": 18,
              "index2": 15,
              "size": 42,
              "cacheable": false,
              "built": false,
              "optional": false,
              "prefetched": false,
              "chunks": [
                0
              ],
              "assets": [],
              "issuer": "/Users/Liferay/trampo/senna.js/node_modules/metal-uri/node.js",
              "issuerId": 4,
              "issuerName": "./node_modules/metal-uri/node.js",
              "profile": {
                "factory": 0,
                "building": 0
              },
              "failed": false,
              "errors": 0,
              "warnings": 0,
              "reasons": [
                {
                  "moduleId": 4,
                  "moduleIdentifier": "/Users/Liferay/trampo/senna.js/node_modules/metal-uri/node.js",
                  "module": "./node_modules/metal-uri/node.js",
                  "moduleName": "./node_modules/metal-uri/node.js",
                  "type": "cjs require",
                  "userRequest": "path",
                  "loc": "10:12-27"
                }
              ],
              "usedExports": true,
              "providedExports": null,
              "optimizationBailout": [
                "ModuleConcatenation bailout: Module is not an ECMAScript module"
              ],
              "depth": 3
            },
            {
              "id": 34,
              "identifier": "external \"url\"",
              "name": "external \"url\"",
              "index": 19,
              "index2": 16,
              "size": 42,
              "cacheable": false,
              "built": false,
              "optional": false,
              "prefetched": false,
              "chunks": [
                0
              ],
              "assets": [],
              "issuer": "/Users/Liferay/trampo/senna.js/node_modules/metal-uri/node.js",
              "issuerId": 4,
              "issuerName": "./node_modules/metal-uri/node.js",
              "profile": {
                "factory": 0,
                "building": 0
              },
              "failed": false,
              "errors": 0,
              "warnings": 0,
              "reasons": [
                {
                  "moduleId": 4,
                  "moduleIdentifier": "/Users/Liferay/trampo/senna.js/node_modules/metal-uri/node.js",
                  "module": "./node_modules/metal-uri/node.js",
                  "moduleName": "./node_modules/metal-uri/node.js",
                  "type": "cjs require",
                  "userRequest": "url",
                  "loc": "11:11-25"
                }
              ],
              "usedExports": true,
              "providedExports": null,
              "optimizationBailout": [
                "ModuleConcatenation bailout: Module is not an ECMAScript module"
              ],
              "depth": 3
            },
            {
              "id": 35,
              "identifier": "/Users/Liferay/trampo/senna.js/node_modules/babel-loader/lib/index.js??ref--0!/Users/Liferay/trampo/senna.js/src/app/dataAttributeHandler.js",
              "name": "./src/app/dataAttributeHandler.js",
              "index": 20,
              "index2": 50,
              "size": 860,
              "cacheable": true,
              "built": true,
              "optional": false,
              "prefetched": false,
              "chunks": [
                0
              ],
              "assets": [],
              "issuer": "/Users/Liferay/trampo/senna.js/node_modules/babel-loader/lib/index.js??ref--0!/Users/Liferay/trampo/senna.js/src/senna.js",
              "issuerId": 21,
              "issuerName": "./src/senna.js",
              "profile": {
                "factory": 17,
                "building": 134,
                "dependencies": 606
              },
              "failed": false,
              "errors": 0,
              "warnings": 0,
              "reasons": [
                {
                  "moduleId": 21,
                  "moduleIdentifier": "/Users/Liferay/trampo/senna.js/node_modules/babel-loader/lib/index.js??ref--0!/Users/Liferay/trampo/senna.js/src/senna.js",
                  "module": "./src/senna.js",
                  "moduleName": "./src/senna.js",
                  "type": "amd require",
                  "userRequest": "./app/dataAttributeHandler",
                  "loc": "1:0-37:2"
                }
              ],
              "usedExports": true,
              "providedExports": null,
              "optimizationBailout": [
                "ModuleConcatenation bailout: Module is not an ECMAScript module"
              ],
              "depth": 1,
              "source": "define([\"exports\", \"../globals/globals\", \"./AppDataAttributeHandler\"], function (exports, _globals, _AppDataAttributeHandler) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n\n  var _globals2 = _interopRequireDefault(_globals);\n\n  var _AppDataAttributeHandler2 = _interopRequireDefault(_AppDataAttributeHandler);\n\n  function _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n      default: obj\n    };\n  }\n\n  /**\n   * Data attribute handler.\n   * @type {AppDataAttributeHandler}\n   */\n  var dataAttributeHandler = new _AppDataAttributeHandler2.default();\n\n  _globals2.default.document.addEventListener('DOMContentLoaded', function () {\n    dataAttributeHandler.setBaseElement(_globals2.default.document.body);\n    dataAttributeHandler.handle();\n  });\n\n  exports.default = dataAttributeHandler;\n});"
            },
            {
              "id": 36,
              "identifier": "/Users/Liferay/trampo/senna.js/node_modules/babel-loader/lib/index.js??ref--0!/Users/Liferay/trampo/senna.js/src/app/AppDataAttributeHandler.js",
              "name": "./src/app/AppDataAttributeHandler.js",
              "index": 21,
              "index2": 49,
              "size": 9834,
              "cacheable": true,
              "built": true,
              "optional": false,
              "prefetched": false,
              "chunks": [
                0
              ],
              "assets": [],
              "issuer": "/Users/Liferay/trampo/senna.js/node_modules/babel-loader/lib/index.js??ref--0!/Users/Liferay/trampo/senna.js/src/app/dataAttributeHandler.js",
              "issuerId": 35,
              "issuerName": "./src/app/dataAttributeHandler.js",
              "profile": {
                "factory": 605,
                "building": 70,
                "dependencies": 108
              },
              "failed": false,
              "errors": 0,
              "warnings": 0,
              "reasons": [
                {
                  "moduleId": 35,
                  "moduleIdentifier": "/Users/Liferay/trampo/senna.js/node_modules/babel-loader/lib/index.js??ref--0!/Users/Liferay/trampo/senna.js/src/app/dataAttributeHandler.js",
                  "module": "./src/app/dataAttributeHandler.js",
                  "moduleName": "./src/app/dataAttributeHandler.js",
                  "type": "amd require",
                  "userRequest": "./AppDataAttributeHandler",
                  "loc": "1:0-30:2"
                }
              ],
              "usedExports": true,
              "providedExports": null,
              "optimizationBailout": [
                "ModuleConcatenation bailout: Module is not an ECMAScript module"
              ],
              "depth": 2,
              "source": "define([\"exports\", \"metal\", \"./dataAttributes\", \"../globals/globals\", \"./App\", \"../screen/HtmlScreen\", \"../route/Route\"], function (exports, _metal, _dataAttributes, _globals, _App, _HtmlScreen, _Route) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n\n  var _dataAttributes2 = _interopRequireDefault(_dataAttributes);\n\n  var _globals2 = _interopRequireDefault(_globals);\n\n  var _App2 = _interopRequireDefault(_App);\n\n  var _HtmlScreen2 = _interopRequireDefault(_HtmlScreen);\n\n  var _Route2 = _interopRequireDefault(_Route);\n\n  function _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n      default: obj\n    };\n  }\n\n  function _typeof(obj) {\n    if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n      _typeof = function _typeof(obj) {\n        return typeof obj;\n      };\n    } else {\n      _typeof = function _typeof(obj) {\n        return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n      };\n    }\n\n    return _typeof(obj);\n  }\n\n  function _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n      throw new TypeError(\"Cannot call a class as a function\");\n    }\n  }\n\n  function _defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  function _createClass(Constructor, protoProps, staticProps) {\n    if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) _defineProperties(Constructor, staticProps);\n    return Constructor;\n  }\n\n  function _possibleConstructorReturn(self, call) {\n    if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n      return call;\n    }\n\n    if (!self) {\n      throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }\n\n    return self;\n  }\n\n  function _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n      throw new TypeError(\"Super expression must either be null or a function\");\n    }\n\n    subClass.prototype = Object.create(superClass && superClass.prototype, {\n      constructor: {\n        value: subClass,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n    if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n  }\n\n  var AppDataAttributeHandler = function (_Disposable) {\n    _inherits(AppDataAttributeHandler, _Disposable);\n\n    /**\n     * Initilizes App, register surfaces and routes from data attributes.\n     * @constructor\n     */\n    function AppDataAttributeHandler() {\n      var _this;\n\n      _classCallCheck(this, AppDataAttributeHandler);\n\n      _this = _possibleConstructorReturn(this, (AppDataAttributeHandler.__proto__ || Object.getPrototypeOf(AppDataAttributeHandler)).call(this));\n      /**\n       * Holds the app reference initialized by data attributes.\n       * @type {App}\n       * @default null\n       */\n\n      _this.app = null;\n      /**\n       * Holds the base element to search initialization data attributes. This\n       * element is the container used to enable initialization based on the\n       * presence of `data-senna` attribute.\n       * @type {Element}\n       * @default null\n       */\n\n      _this.baseElement = null;\n      return _this;\n    }\n    /**\n     * Inits application based on information scanned from document.\n     */\n\n\n    _createClass(AppDataAttributeHandler, [{\n      key: \"handle\",\n      value: function handle() {\n        if (!(0, _metal.isElement)(this.baseElement)) {\n          throw new Error('Senna data attribute handler base element ' + 'not set or invalid, try setting a valid element that ' + 'contains a `data-senna` attribute.');\n        }\n\n        if (!this.baseElement.hasAttribute(_dataAttributes2.default.senna)) {\n          console.log('Senna was not initialized from data attributes. ' + 'In order to enable its usage from data attributes try setting ' + 'in the base element, e.g. `<body data-senna>`.');\n          return;\n        }\n\n        if (this.app) {\n          throw new Error('Senna app was already initialized.');\n        }\n\n        console.log('Senna initialized from data attribute.');\n        this.app = new _App2.default();\n        this.maybeAddRoutes_();\n        this.maybeAddSurfaces_();\n        this.maybeSetBasePath_();\n        this.maybeSetLinkSelector_();\n        this.maybeSetLoadingCssClass_();\n        this.maybeSetUpdateScrollPosition_();\n        this.maybeDispatch_();\n      }\n    }, {\n      key: \"disposeInternal\",\n      value: function disposeInternal() {\n        if (this.app) {\n          this.app.dispose();\n        }\n      }\n    }, {\n      key: \"getApp\",\n      value: function getApp() {\n        return this.app;\n      }\n    }, {\n      key: \"getBaseElement\",\n      value: function getBaseElement() {\n        return this.baseElement;\n      }\n    }, {\n      key: \"maybeAddRoutes_\",\n      value: function maybeAddRoutes_() {\n        var _this2 = this;\n\n        var routesSelector = 'link[rel=\"senna-route\"]';\n        this.querySelectorAllAsArray_(routesSelector).forEach(function (link) {\n          return _this2.maybeParseLinkRoute_(link);\n        });\n\n        if (!this.app.hasRoutes()) {\n          this.app.addRoutes(new _Route2.default(/.*/, _HtmlScreen2.default));\n          console.log('Senna can\\'t find route elements, adding default.');\n        }\n      }\n    }, {\n      key: \"maybeAddSurfaces_\",\n      value: function maybeAddSurfaces_() {\n        var _this3 = this;\n\n        var surfacesSelector = '[' + _dataAttributes2.default.surface + ']';\n        this.querySelectorAllAsArray_(surfacesSelector).forEach(function (surfaceElement) {\n          _this3.updateElementIdIfSpecialSurface_(surfaceElement);\n\n          _this3.app.addSurfaces(surfaceElement.id);\n        });\n      }\n    }, {\n      key: \"maybeDispatch_\",\n      value: function maybeDispatch_() {\n        if (this.baseElement.hasAttribute(_dataAttributes2.default.dispatch)) {\n          this.app.dispatch();\n        }\n      }\n    }, {\n      key: \"maybeParseLinkRoute_\",\n      value: function maybeParseLinkRoute_(link) {\n        var route = new _Route2.default(this.maybeParseLinkRoutePath_(link), this.maybeParseLinkRouteHandler_(link));\n        this.app.addRoutes(route);\n        console.log('Senna scanned route ' + route.getPath());\n      }\n    }, {\n      key: \"maybeParseLinkRouteHandler_\",\n      value: function maybeParseLinkRouteHandler_(link) {\n        var handler = link.getAttribute('type');\n\n        if ((0, _metal.isDefAndNotNull)(handler)) {\n          handler = _metal.object.getObjectByName(handler);\n        }\n\n        return handler;\n      }\n    }, {\n      key: \"maybeParseLinkRoutePath_\",\n      value: function maybeParseLinkRoutePath_(link) {\n        var path = link.getAttribute('href');\n\n        if ((0, _metal.isDefAndNotNull)(path)) {\n          if (path.indexOf('regex:') === 0) {\n            path = new RegExp(path.substring(6));\n          }\n        }\n\n        return path;\n      }\n    }, {\n      key: \"maybeSetBasePath_\",\n      value: function maybeSetBasePath_() {\n        var basePath = this.baseElement.getAttribute(_dataAttributes2.default.basePath);\n\n        if ((0, _metal.isDefAndNotNull)(basePath)) {\n          this.app.setBasePath(basePath);\n          console.log('Senna scanned base path ' + basePath);\n        }\n      }\n    }, {\n      key: \"maybeSetLinkSelector_\",\n      value: function maybeSetLinkSelector_() {\n        var linkSelector = this.baseElement.getAttribute(_dataAttributes2.default.linkSelector);\n\n        if ((0, _metal.isDefAndNotNull)(linkSelector)) {\n          this.app.setLinkSelector(linkSelector);\n          console.log('Senna scanned link selector ' + linkSelector);\n        }\n      }\n    }, {\n      key: \"maybeSetLoadingCssClass_\",\n      value: function maybeSetLoadingCssClass_() {\n        var loadingCssClass = this.baseElement.getAttribute(_dataAttributes2.default.loadingCssClass);\n\n        if ((0, _metal.isDefAndNotNull)(loadingCssClass)) {\n          this.app.setLoadingCssClass(loadingCssClass);\n          console.log('Senna scanned loading css class ' + loadingCssClass);\n        }\n      }\n    }, {\n      key: \"maybeSetUpdateScrollPosition_\",\n      value: function maybeSetUpdateScrollPosition_() {\n        var updateScrollPosition = this.baseElement.getAttribute(_dataAttributes2.default.updateScrollPosition);\n\n        if ((0, _metal.isDefAndNotNull)(updateScrollPosition)) {\n          if (updateScrollPosition === 'false') {\n            this.app.setUpdateScrollPosition(false);\n          } else {\n            this.app.setUpdateScrollPosition(true);\n          }\n\n          console.log('Senna scanned update scroll position ' + updateScrollPosition);\n        }\n      }\n    }, {\n      key: \"querySelectorAllAsArray_\",\n      value: function querySelectorAllAsArray_(selector) {\n        return Array.prototype.slice.call(_globals2.default.document.querySelectorAll(selector));\n      }\n    }, {\n      key: \"updateElementIdIfSpecialSurface_\",\n      value: function updateElementIdIfSpecialSurface_(element) {\n        if (!element.id && element === _globals2.default.document.body) {\n          element.id = 'senna_surface_' + (0, _metal.getUid)();\n        }\n      }\n    }, {\n      key: \"setBaseElement\",\n      value: function setBaseElement(baseElement) {\n        this.baseElement = baseElement;\n      }\n    }]);\n\n    return AppDataAttributeHandler;\n  }(_metal.Disposable);\n\n  exports.default = AppDataAttributeHandler;\n});"
            },
            {
              "id": 37,
              "identifier": "/Users/Liferay/trampo/senna.js/node_modules/babel-loader/lib/index.js??ref--0!/Users/Liferay/trampo/senna.js/src/app/dataAttributes.js",
              "name": "./src/app/dataAttributes.js",
              "index": 22,
              "index2": 19,
              "size": 455,
              "cacheable": true,
              "built": true,
              "optional": false,
              "prefetched": false,
              "chunks": [
                0
              ],
              "assets": [],
              "issuer": "/Users/Liferay/trampo/senna.js/node_modules/babel-loader/lib/index.js??ref--0!/Users/Liferay/trampo/senna.js/src/app/AppDataAttributeHandler.js",
              "issuerId": 36,
              "issuerName": "./src/app/AppDataAttributeHandler.js",
              "profile": {
                "factory": 107,
                "building": 8
              },
              "failed": false,
              "errors": 0,
              "warnings": 0,
              "reasons": [
                {
                  "moduleId": 36,
                  "moduleIdentifier": "/Users/Liferay/trampo/senna.js/node_modules/babel-loader/lib/index.js??ref--0!/Users/Liferay/trampo/senna.js/src/app/AppDataAttributeHandler.js",
                  "module": "./src/app/AppDataAttributeHandler.js",
                  "moduleName": "./src/app/AppDataAttributeHandler.js",
                  "type": "amd require",
                  "userRequest": "./dataAttributes",
                  "loc": "1:0-300:2"
                }
              ],
              "usedExports": true,
              "providedExports": null,
              "optimizationBailout": [
                "ModuleConcatenation bailout: Module is not an ECMAScript module"
              ],
              "depth": 3,
              "source": "define([\"exports\"], function (exports) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = {\n    basePath: 'data-senna-base-path',\n    linkSelector: 'data-senna-link-selector',\n    loadingCssClass: 'data-senna-loading-css-class',\n    senna: 'data-senna',\n    dispatch: 'data-senna-dispatch',\n    surface: 'data-senna-surface',\n    updateScrollPosition: 'data-senna-update-scroll-position'\n  };\n});"
            },
            {
              "id": 38,
              "identifier": "/Users/Liferay/trampo/senna.js/node_modules/metal-events/lib/EventEmitter.js",
              "name": "./node_modules/metal-events/lib/EventEmitter.js",
              "index": 25,
              "index2": 21,
              "size": 15264,
              "cacheable": true,
              "built": true,
              "optional": false,
              "prefetched": false,
              "chunks": [
                0
              ],
              "assets": [],
              "issuer": "/Users/Liferay/trampo/senna.js/node_modules/metal-events/lib/events.js",
              "issuerId": 6,
              "issuerName": "./node_modules/metal-events/lib/events.js",
              "profile": {
                "factory": 26,
                "building": 16,
                "dependencies": 18
              },
              "failed": false,
              "errors": 0,
              "warnings": 0,
              "reasons": [
                {
                  "moduleId": 6,
                  "moduleIdentifier": "/Users/Liferay/trampo/senna.js/node_modules/metal-events/lib/events.js",
                  "module": "./node_modules/metal-events/lib/events.js",
                  "moduleName": "./node_modules/metal-events/lib/events.js",
                  "type": "cjs require",
                  "userRequest": "./EventEmitter",
                  "loc": "8:20-45"
                }
              ],
              "usedExports": true,
              "providedExports": null,
              "optimizationBailout": [
                "ModuleConcatenation bailout: Module is not an ECMAScript module"
              ],
              "depth": 3,
              "source": "'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _metal = require('metal');\n\nvar _EventHandle = require('./EventHandle');\n\nvar _EventHandle2 = _interopRequireDefault(_EventHandle);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar singleArray_ = [0];\n\n/**\n * EventEmitter utility.\n * @constructor\n * @extends {Disposable}\n */\n\nvar EventEmitter = function (_Disposable) {\n\t_inherits(EventEmitter, _Disposable);\n\n\tfunction EventEmitter() {\n\t\t_classCallCheck(this, EventEmitter);\n\n\t\t/**\n   * Holds event listeners scoped by event type.\n   * @type {Object<string, !Array<!function()>>}\n   * @protected\n   */\n\t\tvar _this = _possibleConstructorReturn(this, (EventEmitter.__proto__ || Object.getPrototypeOf(EventEmitter)).call(this));\n\n\t\t_this.events_ = null;\n\n\t\t/**\n   * Handlers that are triggered when an event is listened to.\n   * @type {Array}\n   */\n\t\t_this.listenerHandlers_ = null;\n\n\t\t/**\n   * Configuration option which determines if an event facade should be sent\n   * as a param of listeners when emitting events. If set to true, the facade\n   * will be passed as the first argument of the listener.\n   * @type {boolean}\n   * @protected\n   */\n\t\t_this.shouldUseFacade_ = false;\n\t\treturn _this;\n\t}\n\n\t/**\n  * Adds a handler to given holder variable. If the holder doesn't have a\n  * value yet, it will receive the handler directly. If the holder is an array,\n  * the value will just be added to it. Otherwise, the holder will be set to a\n  * new array containing its previous value plus the new handler.\n  * @param {*} holder\n  * @param {!function()|Object} handler\n  * @return {*} The holder's new value.\n  * @protected\n  */\n\n\n\t_createClass(EventEmitter, [{\n\t\tkey: 'addHandler_',\n\t\tvalue: function addHandler_(holder, handler) {\n\t\t\tif (!holder) {\n\t\t\t\tholder = handler;\n\t\t\t} else {\n\t\t\t\tif (!Array.isArray(holder)) {\n\t\t\t\t\tholder = [holder];\n\t\t\t\t}\n\t\t\t\tholder.push(handler);\n\t\t\t}\n\t\t\treturn holder;\n\t\t}\n\n\t\t/**\n   * Adds a listener to the end of the listeners array for the specified events.\n   * @param {!(Array|string)} event\n   * @param {!Function} listener\n   * @param {boolean} opt_default Flag indicating if this listener is a default\n   *   action for this event. Default actions are run last, and only if no previous\n   *   listener call `preventDefault()` on the received event facade.\n   * @return {!EventHandle} Can be used to remove the listener.\n   */\n\n\t}, {\n\t\tkey: 'addListener',\n\t\tvalue: function addListener(event, listener, opt_default) {\n\t\t\tthis.validateListener_(listener);\n\n\t\t\tvar events = this.toEventsArray_(event);\n\t\t\tfor (var i = 0; i < events.length; i++) {\n\t\t\t\tthis.addSingleListener_(events[i], listener, opt_default);\n\t\t\t}\n\n\t\t\treturn new _EventHandle2.default(this, event, listener);\n\t\t}\n\n\t\t/**\n   * Adds a listener to the end of the listeners array for a single event.\n   * @param {string} event\n   * @param {!Function} listener\n   * @param {boolean} opt_default Flag indicating if this listener is a default\n   *   action for this event. Default actions are run last, and only if no previous\n   *   listener call `preventDefault()` on the received event facade.\n   * @return {!EventHandle} Can be used to remove the listener.\n   * @param {Function=} opt_origin The original function that was added as a\n   *   listener, if there is any.\n   * @protected\n   */\n\n\t}, {\n\t\tkey: 'addSingleListener_',\n\t\tvalue: function addSingleListener_(event, listener, opt_default, opt_origin) {\n\t\t\tthis.runListenerHandlers_(event);\n\t\t\tif (opt_default || opt_origin) {\n\t\t\t\tlistener = {\n\t\t\t\t\tdefault: opt_default,\n\t\t\t\t\tfn: listener,\n\t\t\t\t\torigin: opt_origin\n\t\t\t\t};\n\t\t\t}\n\t\t\tthis.events_ = this.events_ || {};\n\t\t\tthis.events_[event] = this.addHandler_(this.events_[event], listener);\n\t\t}\n\n\t\t/**\n   * Builds facade for the given event.\n   * @param {string} event\n   * @return {Object}\n   * @protected\n   */\n\n\t}, {\n\t\tkey: 'buildFacade_',\n\t\tvalue: function buildFacade_(event) {\n\t\t\tif (this.getShouldUseFacade()) {\n\t\t\t\tvar facade = {\n\t\t\t\t\tpreventDefault: function preventDefault() {\n\t\t\t\t\t\tfacade.preventedDefault = true;\n\t\t\t\t\t},\n\t\t\t\t\ttarget: this,\n\t\t\t\t\ttype: event\n\t\t\t\t};\n\t\t\t\treturn facade;\n\t\t\t}\n\t\t}\n\n\t\t/**\n   * Disposes of this instance's object references.\n   * @override\n   */\n\n\t}, {\n\t\tkey: 'disposeInternal',\n\t\tvalue: function disposeInternal() {\n\t\t\tthis.events_ = null;\n\t\t}\n\n\t\t/**\n   * Execute each of the listeners in order with the supplied arguments.\n   * @param {string} event\n   * @param {*} opt_args [arg1], [arg2], [...]\n   * @return {boolean} Returns true if event had listeners, false otherwise.\n   */\n\n\t}, {\n\t\tkey: 'emit',\n\t\tvalue: function emit(event) {\n\t\t\tvar listeners = this.getRawListeners_(event);\n\t\t\tif (listeners.length === 0) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tvar args = _metal.array.slice(arguments, 1);\n\t\t\tthis.runListeners_(listeners, args, this.buildFacade_(event));\n\t\t\treturn true;\n\t\t}\n\n\t\t/**\n   * Gets the listener objects for the given event, if there are any.\n   * @param {string} event\n   * @return {!Array}\n   * @protected\n   */\n\n\t}, {\n\t\tkey: 'getRawListeners_',\n\t\tvalue: function getRawListeners_(event) {\n\t\t\tvar directListeners = toArray(this.events_ && this.events_[event]);\n\t\t\treturn directListeners.concat(toArray(this.events_ && this.events_['*']));\n\t\t}\n\n\t\t/**\n   * Gets the configuration option which determines if an event facade should\n   * be sent as a param of listeners when emitting events. If set to true, the\n   * facade will be passed as the first argument of the listener.\n   * @return {boolean}\n   */\n\n\t}, {\n\t\tkey: 'getShouldUseFacade',\n\t\tvalue: function getShouldUseFacade() {\n\t\t\treturn this.shouldUseFacade_;\n\t\t}\n\n\t\t/**\n   * Returns an array of listeners for the specified event.\n   * @param {string} event\n   * @return {Array} Array of listeners.\n   */\n\n\t}, {\n\t\tkey: 'listeners',\n\t\tvalue: function listeners(event) {\n\t\t\treturn this.getRawListeners_(event).map(function (listener) {\n\t\t\t\treturn listener.fn ? listener.fn : listener;\n\t\t\t});\n\t\t}\n\n\t\t/**\n   * Adds a listener that will be invoked a fixed number of times for the\n   * events. After each event is triggered the specified amount of times, the\n   * listener is removed for it.\n   * @param {!(Array|string)} event\n   * @param {number} amount The amount of times this event should be listened\n   * to.\n   * @param {!Function} listener\n   * @return {!EventHandle} Can be used to remove the listener.\n   */\n\n\t}, {\n\t\tkey: 'many',\n\t\tvalue: function many(event, amount, listener) {\n\t\t\tvar events = this.toEventsArray_(event);\n\t\t\tfor (var i = 0; i < events.length; i++) {\n\t\t\t\tthis.many_(events[i], amount, listener);\n\t\t\t}\n\n\t\t\treturn new _EventHandle2.default(this, event, listener);\n\t\t}\n\n\t\t/**\n   * Adds a listener that will be invoked a fixed number of times for a single\n   * event. After the event is triggered the specified amount of times, the\n   * listener is removed.\n   * @param {string} event\n   * @param {number} amount The amount of times this event should be listened\n   * to.\n   * @param {!Function} listener\n   * @protected\n   */\n\n\t}, {\n\t\tkey: 'many_',\n\t\tvalue: function many_(event, amount, listener) {\n\t\t\tvar self = this;\n\n\t\t\tif (amount <= 0) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tfunction handlerInternal() {\n\t\t\t\tif (--amount === 0) {\n\t\t\t\t\tself.removeListener(event, handlerInternal);\n\t\t\t\t}\n\t\t\t\tlistener.apply(self, arguments);\n\t\t\t}\n\n\t\t\tself.addSingleListener_(event, handlerInternal, false, listener);\n\t\t}\n\n\t\t/**\n   * Checks if a listener object matches the given listener function. To match,\n   * it needs to either point to that listener or have it as its origin.\n   * @param {!Object} listenerObj\n   * @param {!Function} listener\n   * @return {boolean}\n   * @protected\n   */\n\n\t}, {\n\t\tkey: 'matchesListener_',\n\t\tvalue: function matchesListener_(listenerObj, listener) {\n\t\t\tvar fn = listenerObj.fn || listenerObj;\n\t\t\treturn fn === listener || listenerObj.origin && listenerObj.origin === listener;\n\t\t}\n\n\t\t/**\n   * Removes a listener for the specified events.\n   * Caution: changes array indices in the listener array behind the listener.\n   * @param {!(Array|string)} events\n   * @param {!Function} listener\n   * @return {!Object} Returns emitter, so calls can be chained.\n   */\n\n\t}, {\n\t\tkey: 'off',\n\t\tvalue: function off(event, listener) {\n\t\t\tthis.validateListener_(listener);\n\t\t\tif (!this.events_) {\n\t\t\t\treturn this;\n\t\t\t}\n\n\t\t\tvar events = this.toEventsArray_(event);\n\t\t\tfor (var i = 0; i < events.length; i++) {\n\t\t\t\tthis.events_[events[i]] = this.removeMatchingListenerObjs_(toArray(this.events_[events[i]]), listener);\n\t\t\t}\n\n\t\t\treturn this;\n\t\t}\n\n\t\t/**\n   * Adds a listener to the end of the listeners array for the specified events.\n   * @param {!(Array|string)} events\n   * @param {!Function} listener\n   * @return {!EventHandle} Can be used to remove the listener.\n   */\n\n\t}, {\n\t\tkey: 'on',\n\t\tvalue: function on() {\n\t\t\treturn this.addListener.apply(this, arguments);\n\t\t}\n\n\t\t/**\n   * Adds handler that gets triggered when an event is listened to on this\n   * instance.\n   * @param {!function()}\n   */\n\n\t}, {\n\t\tkey: 'onListener',\n\t\tvalue: function onListener(handler) {\n\t\t\tthis.listenerHandlers_ = this.addHandler_(this.listenerHandlers_, handler);\n\t\t}\n\n\t\t/**\n   * Adds a one time listener for the events. This listener is invoked only the\n   * next time each event is fired, after which it is removed.\n   * @param {!(Array|string)} events\n   * @param {!Function} listener\n   * @return {!EventHandle} Can be used to remove the listener.\n   */\n\n\t}, {\n\t\tkey: 'once',\n\t\tvalue: function once(events, listener) {\n\t\t\treturn this.many(events, 1, listener);\n\t\t}\n\n\t\t/**\n   * Removes all listeners, or those of the specified events. It's not a good\n   * idea to remove listeners that were added elsewhere in the code,\n   * especially when it's on an emitter that you didn't create.\n   * @param {(Array|string)=} opt_events\n   * @return {!Object} Returns emitter, so calls can be chained.\n   */\n\n\t}, {\n\t\tkey: 'removeAllListeners',\n\t\tvalue: function removeAllListeners(opt_events) {\n\t\t\tif (this.events_) {\n\t\t\t\tif (opt_events) {\n\t\t\t\t\tvar events = this.toEventsArray_(opt_events);\n\t\t\t\t\tfor (var i = 0; i < events.length; i++) {\n\t\t\t\t\t\tthis.events_[events[i]] = null;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tthis.events_ = null;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn this;\n\t\t}\n\n\t\t/**\n   * Removes all listener objects from the given array that match the given\n   * listener function.\n   * @param {Array.<Object>} listenerObjs\n   * @param {!Function} listener\n   * @return {Array.<Object>|Object} The new listeners array for this event.\n   * @protected\n   */\n\n\t}, {\n\t\tkey: 'removeMatchingListenerObjs_',\n\t\tvalue: function removeMatchingListenerObjs_(listenerObjs, listener) {\n\t\t\tvar finalListeners = [];\n\t\t\tfor (var i = 0; i < listenerObjs.length; i++) {\n\t\t\t\tif (!this.matchesListener_(listenerObjs[i], listener)) {\n\t\t\t\t\tfinalListeners.push(listenerObjs[i]);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn finalListeners.length > 0 ? finalListeners : null;\n\t\t}\n\n\t\t/**\n   * Removes a listener for the specified events.\n   * Caution: changes array indices in the listener array behind the listener.\n   * @param {!(Array|string)} events\n   * @param {!Function} listener\n   * @return {!Object} Returns emitter, so calls can be chained.\n   */\n\n\t}, {\n\t\tkey: 'removeListener',\n\t\tvalue: function removeListener() {\n\t\t\treturn this.off.apply(this, arguments);\n\t\t}\n\n\t\t/**\n   * Runs the handlers when an event is listened to.\n   * @param {string} event\n   * @protected\n   */\n\n\t}, {\n\t\tkey: 'runListenerHandlers_',\n\t\tvalue: function runListenerHandlers_(event) {\n\t\t\tvar handlers = this.listenerHandlers_;\n\t\t\tif (handlers) {\n\t\t\t\thandlers = toArray(handlers);\n\t\t\t\tfor (var i = 0; i < handlers.length; i++) {\n\t\t\t\t\thandlers[i](event);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t/**\n   * Runs the given listeners.\n   * @param {!Array} listeners\n   * @param {!Array} args\n   * @param (Object) facade\n   * @protected\n   */\n\n\t}, {\n\t\tkey: 'runListeners_',\n\t\tvalue: function runListeners_(listeners, args, facade) {\n\t\t\tif (facade) {\n\t\t\t\targs.push(facade);\n\t\t\t}\n\n\t\t\tvar defaultListeners = [];\n\t\t\tfor (var i = 0; i < listeners.length; i++) {\n\t\t\t\tvar listener = listeners[i].fn || listeners[i];\n\t\t\t\tif (listeners[i].default) {\n\t\t\t\t\tdefaultListeners.push(listener);\n\t\t\t\t} else {\n\t\t\t\t\tlistener.apply(this, args);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (!facade || !facade.preventedDefault) {\n\t\t\t\tfor (var j = 0; j < defaultListeners.length; j++) {\n\t\t\t\t\tdefaultListeners[j].apply(this, args);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t/**\n   * Sets the configuration option which determines if an event facade should\n   * be sent as a param of listeners when emitting events. If set to true, the\n   * facade will be passed as the first argument of the listener.\n   * @param {boolean} shouldUseFacade\n   * @return {!Object} Returns emitter, so calls can be chained.\n   */\n\n\t}, {\n\t\tkey: 'setShouldUseFacade',\n\t\tvalue: function setShouldUseFacade(shouldUseFacade) {\n\t\t\tthis.shouldUseFacade_ = shouldUseFacade;\n\t\t\treturn this;\n\t\t}\n\n\t\t/**\n   * Converts the parameter to an array if only one event is given. Reuses the\n   * same array each time this conversion is done, to avoid using more memory\n   * than necessary.\n   * @param  {!(Array|string)} events\n   * @return {!Array}\n   * @protected\n   */\n\n\t}, {\n\t\tkey: 'toEventsArray_',\n\t\tvalue: function toEventsArray_(events) {\n\t\t\tif ((0, _metal.isString)(events)) {\n\t\t\t\tsingleArray_[0] = events;\n\t\t\t\tevents = singleArray_;\n\t\t\t}\n\t\t\treturn events;\n\t\t}\n\n\t\t/**\n   * Checks if the given listener is valid, throwing an exception when it's not.\n   * @param  {*} listener\n   * @protected\n   */\n\n\t}, {\n\t\tkey: 'validateListener_',\n\t\tvalue: function validateListener_(listener) {\n\t\t\tif (!(0, _metal.isFunction)(listener)) {\n\t\t\t\tthrow new TypeError('Listener must be a function');\n\t\t\t}\n\t\t}\n\t}]);\n\n\treturn EventEmitter;\n}(_metal.Disposable);\n\nfunction toArray(val) {\n\tval = val || [];\n\treturn Array.isArray(val) ? val : [val];\n}\n\nexports.default = EventEmitter;"
            },
            {
              "id": 39,
              "identifier": "/Users/Liferay/trampo/senna.js/node_modules/metal-events/lib/EventEmitterProxy.js",
              "name": "./node_modules/metal-events/lib/EventEmitterProxy.js",
              "index": 27,
              "index2": 22,
              "size": 7311,
              "cacheable": true,
              "built": true,
              "optional": false,
              "prefetched": false,
              "chunks": [
                0
              ],
              "assets": [],
              "issuer": "/Users/Liferay/trampo/senna.js/node_modules/metal-events/lib/events.js",
              "issuerId": 6,
              "issuerName": "./node_modules/metal-events/lib/events.js",
              "profile": {
                "factory": 26,
                "building": 19,
                "dependencies": 15
              },
              "failed": false,
              "errors": 0,
              "warnings": 0,
              "reasons": [
                {
                  "moduleId": 6,
                  "moduleIdentifier": "/Users/Liferay/trampo/senna.js/node_modules/metal-events/lib/events.js",
                  "module": "./node_modules/metal-events/lib/events.js",
                  "moduleName": "./node_modules/metal-events/lib/events.js",
                  "type": "cjs require",
                  "userRequest": "./EventEmitterProxy",
                  "loc": "12:25-55"
                }
              ],
              "usedExports": true,
              "providedExports": null,
              "optimizationBailout": [
                "ModuleConcatenation bailout: Module is not an ECMAScript module"
              ],
              "depth": 3,
              "source": "'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _metal = require('metal');\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n/**\n * EventEmitterProxy utility. It's responsible for linking two EventEmitter\n * instances together, emitting events from the first emitter through the\n * second one. That means that listening to a supported event on the target\n * emitter will mean listening to it on the origin emitter as well.\n * @param {EventEmitter} originEmitter Events originated on this emitter\n *   will be fired for the target emitter's listeners as well.\n * @param {EventEmitter} targetEmitter Event listeners attached to this emitter\n *   will also be triggered when the event is fired by the origin emitter.\n * @param {Object} opt_blacklist Optional blacklist of events that should not be\n *   proxied.\n * @constructor\n * @extends {Disposable}\n */\nvar EventEmitterProxy = function (_Disposable) {\n\t_inherits(EventEmitterProxy, _Disposable);\n\n\tfunction EventEmitterProxy(originEmitter, targetEmitter, opt_blacklist, opt_whitelist) {\n\t\t_classCallCheck(this, EventEmitterProxy);\n\n\t\t/**\n   * Map of events that should not be proxied.\n   * @type {Object}\n   * @protected\n   */\n\t\tvar _this = _possibleConstructorReturn(this, (EventEmitterProxy.__proto__ || Object.getPrototypeOf(EventEmitterProxy)).call(this));\n\n\t\t_this.blacklist_ = opt_blacklist;\n\n\t\t/**\n   * The origin emitter. This emitter's events will be proxied through the\n   * target emitter.\n   * @type {EventEmitter}\n   * @protected\n   */\n\t\t_this.originEmitter_ = originEmitter;\n\n\t\t/**\n   * A list of events that are pending to be listened by an actual origin\n   * emitter. Events are stored here when the origin doesn't exist, so they\n   * can be set on a new origin when one is set.\n   * @type {Array}\n   * @protected\n   */\n\t\t_this.pendingEvents_ = null;\n\n\t\t/**\n   * Holds a map of events from the origin emitter that are already being proxied.\n   * @type {Object<string, !EventHandle>}\n   * @protected\n   */\n\t\t_this.proxiedEvents_ = null;\n\n\t\t/**\n   * The target emitter. This emitter will emit all events that come from\n   * the origin emitter.\n   * @type {EventEmitter}\n   * @protected\n   */\n\t\t_this.targetEmitter_ = targetEmitter;\n\n\t\t/**\n   * Map of events that should be proxied. If whitelist is set blacklist is ignored.\n   * @type {Object}\n   * @protected\n   */\n\t\t_this.whitelist_ = opt_whitelist;\n\n\t\t_this.startProxy_();\n\t\treturn _this;\n\t}\n\n\t/**\n  * Adds the given listener for the given event.\n  * @param {string} event\n  * @param {!function()} listener\n  * @return {!EventHandle} The listened event's handle.\n  * @protected\n  */\n\n\n\t_createClass(EventEmitterProxy, [{\n\t\tkey: 'addListener_',\n\t\tvalue: function addListener_(event, listener) {\n\t\t\treturn this.originEmitter_.on(event, listener);\n\t\t}\n\n\t\t/**\n   * @inheritDoc\n   */\n\n\t}, {\n\t\tkey: 'disposeInternal',\n\t\tvalue: function disposeInternal() {\n\t\t\tthis.removeListeners_();\n\t\t\tthis.proxiedEvents_ = null;\n\t\t\tthis.originEmitter_ = null;\n\t\t\tthis.targetEmitter_ = null;\n\t\t}\n\n\t\t/**\n   * Emits the specified event type on the target emitter.\n   * @protected\n   */\n\n\t}, {\n\t\tkey: 'emitOnTarget_',\n\t\tvalue: function emitOnTarget_() {\n\t\t\tthis.targetEmitter_.emit.apply(this.targetEmitter_, arguments);\n\t\t}\n\n\t\t/**\n   * Proxies the given event from the origin to the target emitter.\n   * @param {string} event\n   */\n\n\t}, {\n\t\tkey: 'proxyEvent',\n\t\tvalue: function proxyEvent(event) {\n\t\t\tif (this.shouldProxyEvent_(event)) {\n\t\t\t\tthis.tryToAddListener_(event);\n\t\t\t}\n\t\t}\n\n\t\t/**\n   * Removes the proxy listener for all events.\n   * @protected\n   */\n\n\t}, {\n\t\tkey: 'removeListeners_',\n\t\tvalue: function removeListeners_() {\n\t\t\tif (this.proxiedEvents_) {\n\t\t\t\tvar events = Object.keys(this.proxiedEvents_);\n\t\t\t\tfor (var i = 0; i < events.length; i++) {\n\t\t\t\t\tthis.proxiedEvents_[events[i]].removeListener();\n\t\t\t\t}\n\t\t\t\tthis.proxiedEvents_ = null;\n\t\t\t}\n\t\t\tthis.pendingEvents_ = null;\n\t\t}\n\n\t\t/**\n   * Changes the origin emitter. This automatically detaches any events that\n   * were already being proxied from the previous emitter, and starts proxying\n   * them on the new emitter instead.\n   * @param {!EventEmitter} originEmitter\n   */\n\n\t}, {\n\t\tkey: 'setOriginEmitter',\n\t\tvalue: function setOriginEmitter(originEmitter) {\n\t\t\tvar _this2 = this;\n\n\t\t\tvar events = this.originEmitter_ && this.proxiedEvents_ ? Object.keys(this.proxiedEvents_) : this.pendingEvents_;\n\t\t\tthis.originEmitter_ = originEmitter;\n\t\t\tif (events) {\n\t\t\t\tthis.removeListeners_();\n\t\t\t\tevents.forEach(function (event) {\n\t\t\t\t\treturn _this2.proxyEvent(event);\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\t/**\n   * Checks if the given event should be proxied.\n   * @param {string} event\n   * @return {boolean}\n   * @protected\n   */\n\n\t}, {\n\t\tkey: 'shouldProxyEvent_',\n\t\tvalue: function shouldProxyEvent_(event) {\n\t\t\tif (this.whitelist_ && !this.whitelist_[event]) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tif (this.blacklist_ && this.blacklist_[event]) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\treturn !this.proxiedEvents_ || !this.proxiedEvents_[event];\n\t\t}\n\n\t\t/**\n   * Starts proxying all events from the origin to the target emitter.\n   * @protected\n   */\n\n\t}, {\n\t\tkey: 'startProxy_',\n\t\tvalue: function startProxy_() {\n\t\t\tthis.targetEmitter_.onListener(this.proxyEvent.bind(this));\n\t\t}\n\n\t\t/**\n   * Adds a listener to the origin emitter, if it exists. Otherwise, stores\n   * the pending listener so it can be used on a future origin emitter.\n   * @param {string} event\n   * @protected\n   */\n\n\t}, {\n\t\tkey: 'tryToAddListener_',\n\t\tvalue: function tryToAddListener_(event) {\n\t\t\tif (this.originEmitter_) {\n\t\t\t\tthis.proxiedEvents_ = this.proxiedEvents_ || {};\n\t\t\t\tthis.proxiedEvents_[event] = this.addListener_(event, this.emitOnTarget_.bind(this, event));\n\t\t\t} else {\n\t\t\t\tthis.pendingEvents_ = this.pendingEvents_ || [];\n\t\t\t\tthis.pendingEvents_.push(event);\n\t\t\t}\n\t\t}\n\t}]);\n\n\treturn EventEmitterProxy;\n}(_metal.Disposable);\n\nexports.default = EventEmitterProxy;"
            },
            {
              "id": 40,
              "identifier": "/Users/Liferay/trampo/senna.js/node_modules/metal-events/lib/EventHandler.js",
              "name": "./node_modules/metal-events/lib/EventHandler.js",
              "index": 28,
              "index2": 23,
              "size": 3101,
              "cacheable": true,
              "built": true,
              "optional": false,
              "prefetched": false,
              "chunks": [
                0
              ],
              "assets": [],
              "issuer": "/Users/Liferay/trampo/senna.js/node_modules/metal-events/lib/events.js",
              "issuerId": 6,
              "issuerName": "./node_modules/metal-events/lib/events.js",
              "profile": {
                "factory": 27,
                "building": 21,
                "dependencies": 12
              },
              "failed": false,
              "errors": 0,
              "warnings": 0,
              "reasons": [
                {
                  "moduleId": 6,
                  "moduleIdentifier": "/Users/Liferay/trampo/senna.js/node_modules/metal-events/lib/events.js",
                  "module": "./node_modules/metal-events/lib/events.js",
                  "moduleName": "./node_modules/metal-events/lib/events.js",
                  "type": "cjs require",
                  "userRequest": "./EventHandler",
                  "loc": "20:20-45"
                }
              ],
              "usedExports": true,
              "providedExports": null,
              "optimizationBailout": [
                "ModuleConcatenation bailout: Module is not an ECMAScript module"
              ],
              "depth": 3,
              "source": "'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _metal = require('metal');\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n/**\n * EventHandler utility. It's useful for easily removing a group of\n * listeners from different EventEmitter instances.\n * @constructor\n * @extends {Disposable}\n */\nvar EventHandler = function (_Disposable) {\n\t_inherits(EventHandler, _Disposable);\n\n\tfunction EventHandler() {\n\t\t_classCallCheck(this, EventHandler);\n\n\t\t/**\n   * An array that holds the added event handles, so the listeners can be\n   * removed later.\n   * @type {Array.<EventHandle>}\n   * @protected\n   */\n\t\tvar _this = _possibleConstructorReturn(this, (EventHandler.__proto__ || Object.getPrototypeOf(EventHandler)).call(this));\n\n\t\t_this.eventHandles_ = [];\n\t\treturn _this;\n\t}\n\n\t/**\n  * Adds event handles to be removed later through the `removeAllListeners`\n  * method.\n  * @param {...(!EventHandle)} var_args\n  */\n\n\n\t_createClass(EventHandler, [{\n\t\tkey: 'add',\n\t\tvalue: function add() {\n\t\t\tfor (var i = 0; i < arguments.length; i++) {\n\t\t\t\tthis.eventHandles_.push(arguments[i]);\n\t\t\t}\n\t\t}\n\n\t\t/**\n   * Disposes of this instance's object references.\n   * @override\n   */\n\n\t}, {\n\t\tkey: 'disposeInternal',\n\t\tvalue: function disposeInternal() {\n\t\t\tthis.eventHandles_ = null;\n\t\t}\n\n\t\t/**\n   * Removes all listeners that have been added through the `add` method.\n   */\n\n\t}, {\n\t\tkey: 'removeAllListeners',\n\t\tvalue: function removeAllListeners() {\n\t\t\tfor (var i = 0; i < this.eventHandles_.length; i++) {\n\t\t\t\tthis.eventHandles_[i].removeListener();\n\t\t\t}\n\n\t\t\tthis.eventHandles_ = [];\n\t\t}\n\t}]);\n\n\treturn EventHandler;\n}(_metal.Disposable);\n\nexports.default = EventHandler;"
            },
            {
              "id": 41,
              "identifier": "/Users/Liferay/trampo/senna.js/node_modules/metal-debounce/lib/debounce.js",
              "name": "./node_modules/metal-debounce/lib/debounce.js",
              "index": 30,
              "index2": 26,
              "size": 624,
              "cacheable": true,
              "built": true,
              "optional": false,
              "prefetched": false,
              "chunks": [
                0
              ],
              "assets": [],
              "issuer": "/Users/Liferay/trampo/senna.js/node_modules/babel-loader/lib/index.js??ref--0!/Users/Liferay/trampo/senna.js/src/app/App.js",
              "issuerId": 13,
              "issuerName": "./src/app/App.js",
              "profile": {
                "factory": 459,
                "building": 11
              },
              "failed": false,
              "errors": 0,
              "warnings": 0,
              "reasons": [
                {
                  "moduleId": 13,
                  "moduleIdentifier": "/Users/Liferay/trampo/senna.js/node_modules/babel-loader/lib/index.js??ref--0!/Users/Liferay/trampo/senna.js/src/app/App.js",
                  "module": "./src/app/App.js",
                  "moduleName": "./src/app/App.js",
                  "type": "amd require",
                  "userRequest": "metal-debounce",
                  "loc": "1:0-1185:2"
                }
              ],
              "usedExports": true,
              "providedExports": null,
              "optimizationBailout": [
                "ModuleConcatenation bailout: Module is not an ECMAScript module"
              ],
              "depth": 2,
              "source": "'use strict';\n\n/**\n  * Debounces function execution.\n  * @param {!function()} fn\n  * @param {number} delay\n  * @return {!function()}\n  */\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\nfunction debounce(fn, delay) {\n\treturn function debounced() {\n\t\tvar args = arguments;\n\t\tcancelDebounce(debounced);\n\t\tdebounced.id = setTimeout(function () {\n\t\t\tfn.apply(null, args);\n\t\t}, delay);\n\t};\n}\n\n/**\n * Cancels the scheduled debounced function.\n */\nfunction cancelDebounce(debounced) {\n\tclearTimeout(debounced.id);\n}\n\nexports.default = debounce;\nexports.cancelDebounce = cancelDebounce;\nexports.debounce = debounce;"
            },
            {
              "id": 42,
              "identifier": "/Users/Liferay/trampo/senna.js/node_modules/metal-dom/lib/domNamed.js",
              "name": "./node_modules/metal-dom/lib/domNamed.js",
              "index": 33,
              "index2": 30,
              "size": 26467,
              "cacheable": true,
              "built": true,
              "optional": false,
              "prefetched": false,
              "chunks": [
                0
              ],
              "assets": [],
              "issuer": "/Users/Liferay/trampo/senna.js/node_modules/metal-dom/lib/dom.js",
              "issuerId": 3,
              "issuerName": "./node_modules/metal-dom/lib/dom.js",
              "profile": {
                "factory": 28,
                "building": 13,
                "dependencies": 1
              },
              "failed": false,
              "errors": 0,
              "warnings": 0,
              "reasons": [
                {
                  "moduleId": 3,
                  "moduleIdentifier": "/Users/Liferay/trampo/senna.js/node_modules/metal-dom/lib/dom.js",
                  "module": "./node_modules/metal-dom/lib/dom.js",
                  "moduleName": "./node_modules/metal-dom/lib/dom.js",
                  "type": "cjs require",
                  "userRequest": "./domNamed",
                  "loc": "13:16-37"
                }
              ],
              "usedExports": true,
              "providedExports": null,
              "optimizationBailout": [
                "ModuleConcatenation bailout: Module is not an ECMAScript module"
              ],
              "depth": 4,
              "source": "'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\nexports.customEvents = undefined;\nexports.addClasses = addClasses;\nexports.closest = closest;\nexports.append = append;\nexports.buildFragment = buildFragment;\nexports.contains = contains;\nexports.delegate = delegate;\nexports.enterDocument = enterDocument;\nexports.exitDocument = exitDocument;\nexports.hasClass = hasClass;\nexports.isEmpty = isEmpty;\nexports.match = match;\nexports.next = next;\nexports.on = on;\nexports.once = once;\nexports.parent = parent;\nexports.registerCustomEvent = registerCustomEvent;\nexports.removeChildren = removeChildren;\nexports.removeClasses = removeClasses;\nexports.replace = replace;\nexports.supportsEvent = supportsEvent;\nexports.toElement = toElement;\nexports.toggleClasses = toggleClasses;\nexports.triggerEvent = triggerEvent;\n\nvar _metal = require('metal');\n\nvar _domData = require('./domData');\n\nvar _domData2 = _interopRequireDefault(_domData);\n\nvar _DomDelegatedEventHandle = require('./DomDelegatedEventHandle');\n\nvar _DomDelegatedEventHandle2 = _interopRequireDefault(_DomDelegatedEventHandle);\n\nvar _DomEventHandle = require('./DomEventHandle');\n\nvar _DomEventHandle2 = _interopRequireDefault(_DomEventHandle);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar elementsByTag_ = {};\nvar supportCache_ = {};\nvar customEvents = exports.customEvents = {};\n\nvar LAST_CONTAINER = '__metal_last_container__';\nvar USE_CAPTURE = {\n\tblur: true,\n\terror: true,\n\tfocus: true,\n\tinvalid: true,\n\tload: true,\n\tscroll: true\n};\n\n/**\n * Adds the requested CSS classes to an element.\n * @param {!Element|!Nodelist} elements The element or elements to add CSS classes to.\n * @param {string} classes CSS classes to add.\n */\nfunction addClasses(elements, classes) {\n\tif (!(0, _metal.isObject)(elements) || !(0, _metal.isString)(classes)) {\n\t\treturn;\n\t}\n\n\tif (!elements.length) {\n\t\telements = [elements];\n\t}\n\n\tfor (var i = 0; i < elements.length; i++) {\n\t\tif ('classList' in elements[i]) {\n\t\t\taddClassesWithNative_(elements[i], classes);\n\t\t} else {\n\t\t\taddClassesWithoutNative_(elements[i], classes);\n\t\t}\n\t}\n}\n\n/**\n * Adds the requested CSS classes to an element using classList.\n * @param {!Element} element The element to add CSS classes to.\n * @param {string} classes CSS classes to add.\n * @private\n */\nfunction addClassesWithNative_(element, classes) {\n\tclasses.split(' ').forEach(function (className) {\n\t\tif (className) {\n\t\t\telement.classList.add(className);\n\t\t}\n\t});\n}\n\n/**\n * Adds the requested CSS classes to an element without using classList.\n * @param {!Element} element The element to add CSS classes to.\n * @param {string} classes CSS classes to add.\n * @private\n */\nfunction addClassesWithoutNative_(element, classes) {\n\tvar elementClassName = ' ' + element.className + ' ';\n\tvar classesToAppend = '';\n\n\tclasses = classes.split(' ');\n\n\tfor (var i = 0; i < classes.length; i++) {\n\t\tvar className = classes[i];\n\n\t\tif (elementClassName.indexOf(' ' + className + ' ') === -1) {\n\t\t\tclassesToAppend += ' ' + className;\n\t\t}\n\t}\n\n\tif (classesToAppend) {\n\t\telement.className = element.className + classesToAppend;\n\t}\n}\n\n/**\n * Adds an event listener to the given element, to be triggered via delegate.\n * @param {!Element} element\n * @param {string} eventName\n * @param {!function()} listener\n * @private\n */\nfunction addElementListener_(element, eventName, listener) {\n\taddToArr_(_domData2.default.get(element, 'listeners', {}), eventName, listener);\n}\n\n/**\n * Adds an event listener to the given element, to be triggered via delegate\n * selectors.\n * @param {!Element} element\n * @param {string} eventName\n * @param {string} selector\n * @param {!function()} listener\n * @private\n */\nfunction addSelectorListener_(element, eventName, selector, listener) {\n\tvar delegatingData = _domData2.default.get(element, 'delegating', {});\n\taddToArr_(delegatingData[eventName].selectors, selector, listener);\n}\n\n/**\n * Adds a value to an array inside an object, creating it first if it doesn't\n * yet exist.\n * @param {!Array} arr\n * @param {string} key\n * @param {*} value\n * @private\n */\nfunction addToArr_(arr, key, value) {\n\tif (!arr[key]) {\n\t\tarr[key] = [];\n\t}\n\tarr[key].push(value);\n}\n\n/**\n * Attaches a delegate listener, unless there's already one attached.\n * @param {!Element} element\n * @param {string} eventName\n * @private\n */\nfunction attachDelegateEvent_(element, eventName) {\n\tvar delegatingData = _domData2.default.get(element, 'delegating', {});\n\tif (!delegatingData[eventName]) {\n\t\tdelegatingData[eventName] = {\n\t\t\thandle: on(element, eventName, handleDelegateEvent_, !!USE_CAPTURE[eventName]),\n\t\t\tselectors: {}\n\t\t};\n\t}\n}\n\n/**\n * Gets the closest element up the tree from the given element (including\n * itself) that matches the specified selector, or null if none match.\n * @param {Element} element\n * @param {string} selector\n * @return {Element}\n */\nfunction closest(element, selector) {\n\twhile (element && !match(element, selector)) {\n\t\telement = element.parentNode;\n\t}\n\treturn element;\n}\n\n/**\n * Appends a child node with text or other nodes to a parent node. If\n * child is a HTML string it will be automatically converted to a document\n * fragment before appending it to the parent.\n * @param {!Element} parent The node to append nodes to.\n * @param {!(Element|NodeList|string)} child The thing to append to the parent.\n * @return {!Element} The appended child.\n */\nfunction append(parent, child) {\n\tif ((0, _metal.isString)(child)) {\n\t\tchild = buildFragment(child);\n\t}\n\tif (child instanceof NodeList) {\n\t\tvar childArr = Array.prototype.slice.call(child);\n\t\tfor (var i = 0; i < childArr.length; i++) {\n\t\t\tparent.appendChild(childArr[i]);\n\t\t}\n\t} else {\n\t\tparent.appendChild(child);\n\t}\n\treturn child;\n}\n\n/**\n * Helper for converting a HTML string into a document fragment.\n * @param {string} htmlString The HTML string to convert.\n * @return {!Element} The resulting document fragment.\n */\nfunction buildFragment(htmlString) {\n\tvar tempDiv = document.createElement('div');\n\ttempDiv.innerHTML = '<br>' + htmlString;\n\ttempDiv.removeChild(tempDiv.firstChild);\n\n\tvar fragment = document.createDocumentFragment();\n\twhile (tempDiv.firstChild) {\n\t\tfragment.appendChild(tempDiv.firstChild);\n\t}\n\treturn fragment;\n}\n\n/**\n * Checks if the first element contains the second one.\n * @param {!Element} element1\n * @param {!Element} element2\n * @return {boolean}\n */\nfunction contains(element1, element2) {\n\tif ((0, _metal.isDocument)(element1)) {\n\t\t// document.contains is not defined on IE9, so call it on documentElement instead.\n\t\treturn element1.documentElement.contains(element2);\n\t} else {\n\t\treturn element1.contains(element2);\n\t}\n}\n\n/**\n * Listens to the specified event on the given DOM element, but only calls the\n * given callback listener when it's triggered by elements that match the\n * given selector or target element.\n * @param {!Element} element The DOM element the event should be listened on.\n * @param {string} eventName The name of the event to listen to.\n * @param {!Element|string} selectorOrTarget Either an element or css selector\n *     that should match the event for the listener to be triggered.\n * @param {!function(!Object)} callback Function to be called when the event\n *     is triggered. It will receive the normalized event object.\n * @param {boolean=} opt_default Optional flag indicating if this is a default\n *     listener. That means that it would only be executed after all non\n *     default listeners, and only if the event isn't prevented via\n *     `preventDefault`.\n * @return {!EventHandle} Can be used to remove the listener.\n */\nfunction delegate(element, eventName, selectorOrTarget, callback, opt_default) {\n\tvar customConfig = customEvents[eventName];\n\tif (customConfig && customConfig.delegate) {\n\t\teventName = customConfig.originalEvent;\n\t\tcallback = customConfig.handler.bind(customConfig, callback);\n\t}\n\n\tif (opt_default) {\n\t\t// Wrap callback so we don't set property directly on it.\n\t\tcallback = callback.bind();\n\t\tcallback.defaultListener_ = true;\n\t}\n\n\tattachDelegateEvent_(element, eventName);\n\tif ((0, _metal.isString)(selectorOrTarget)) {\n\t\taddSelectorListener_(element, eventName, selectorOrTarget, callback);\n\t} else {\n\t\taddElementListener_(selectorOrTarget, eventName, callback);\n\t}\n\n\treturn new _DomDelegatedEventHandle2.default((0, _metal.isString)(selectorOrTarget) ? element : selectorOrTarget, eventName, callback, (0, _metal.isString)(selectorOrTarget) ? selectorOrTarget : null);\n}\n\n/**\n * Verifies if the element is able to trigger the Click event,\n * simulating browsers behaviour, avoiding event listeners to be called by triggerEvent method.\n * @param {Element} node Element to be checked.\n * @param {string} eventName The event name.\n * @private\n */\nfunction isAbleToInteractWith_(node, eventName, opt_eventObj) {\n\tif (opt_eventObj && eventName === 'click' && opt_eventObj.button === 2) {\n\t\t// Firefox triggers \"click\" events on the document for right clicks. This\n\t\t// causes our delegate logic to trigger it for regular elements too, which\n\t\t// shouldn't happen. Ignoring them here.\n\t\treturn false;\n\t}\n\n\tvar matchesSelector = ['BUTTON', 'INPUT', 'SELECT', 'TEXTAREA', 'FIELDSET'];\n\tif (eventName === 'click' && matchesSelector.indexOf(node.tagName) > -1) {\n\t\treturn !(node.disabled || parent(node, 'fieldset[disabled]'));\n\t}\n\treturn true;\n}\n\n/**\n * Inserts node in document as last element.\n * @param {Element} node Element to remove children from.\n */\nfunction enterDocument(node) {\n\tnode && append(document.body, node);\n}\n\n/**\n * Removes node from document.\n * @param {Element} node Element to remove children from.\n */\nfunction exitDocument(node) {\n\tif (node && node.parentNode) {\n\t\tnode.parentNode.removeChild(node);\n\t}\n}\n\n/**\n * This is called when an event is triggered by a delegate listener. All\n * matching listeners of this event type from `target` to `currentTarget` will\n * be triggered.\n * @param {!Event} event The event payload.\n * @return {boolean} False if at least one of the triggered callbacks returns\n *     false, or true otherwise.\n * @private\n */\nfunction handleDelegateEvent_(event) {\n\tnormalizeDelegateEvent_(event);\n\tvar ret = true;\n\tvar container = event.currentTarget;\n\tvar defFns = [];\n\n\tret &= triggerDelegatedListeners_(container, event, defFns);\n\tret &= triggerDefaultDelegatedListeners_(defFns, event);\n\n\tevent.delegateTarget = null;\n\tevent[LAST_CONTAINER] = container;\n\treturn ret;\n}\n\n/**\n * Checks if the given element has the requested css class.\n * @param {!Element} element\n * @param {string} className\n * @return {boolean}\n */\nfunction hasClass(element, className) {\n\tif ('classList' in element) {\n\t\treturn hasClassWithNative_(element, className);\n\t} else {\n\t\treturn hasClassWithoutNative_(element, className);\n\t}\n}\n\n/**\n * Checks if the given element has the requested css class using classList.\n * @param {!Element} element\n * @param {string} className\n * @return {boolean}\n * @private\n */\nfunction hasClassWithNative_(element, className) {\n\treturn element.classList.contains(className);\n}\n\n/**\n * Checks if the given element has the requested css class without using classList.\n * @param {!Element} element\n * @param {string} className\n * @return {boolean}\n * @private\n */\nfunction hasClassWithoutNative_(element, className) {\n\treturn (' ' + element.className + ' ').indexOf(' ' + className + ' ') >= 0;\n}\n\n/**\n * Checks if the given element is empty or not.\n * @param {!Element} element\n * @return {boolean}\n */\nfunction isEmpty(element) {\n\treturn element.childNodes.length === 0;\n}\n\n/**\n * Check if an element matches a given selector.\n * @param {Element} element\n * @param {string} selector\n * @return {boolean}\n */\nfunction match(element, selector) {\n\tif (!element || element.nodeType !== 1) {\n\t\treturn false;\n\t}\n\n\tvar p = Element.prototype;\n\tvar m = p.matches || p.webkitMatchesSelector || p.mozMatchesSelector || p.msMatchesSelector || p.oMatchesSelector;\n\tif (m) {\n\t\treturn m.call(element, selector);\n\t}\n\n\treturn matchFallback_(element, selector);\n}\n\n/**\n * Check if an element matches a given selector, using an internal implementation\n * instead of calling existing javascript functions.\n * @param {Element} element\n * @param {string} selector\n * @return {boolean}\n * @private\n */\nfunction matchFallback_(element, selector) {\n\tvar nodes = document.querySelectorAll(selector, element.parentNode);\n\tfor (var i = 0; i < nodes.length; ++i) {\n\t\tif (nodes[i] === element) {\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n}\n\n/**\n * Returns the next sibling of the given element that matches the specified\n * selector, or null if there is none.\n * @param {!Element} element\n * @param {?string} selector\n */\nfunction next(element, selector) {\n\tdo {\n\t\telement = element.nextSibling;\n\t\tif (element && match(element, selector)) {\n\t\t\treturn element;\n\t\t}\n\t} while (element);\n\treturn null;\n}\n\n/**\n * Normalizes the event payload for delegate listeners.\n * @param {!Event} event\n * @private\n */\nfunction normalizeDelegateEvent_(event) {\n\tevent.stopPropagation = stopPropagation_;\n\tevent.stopImmediatePropagation = stopImmediatePropagation_;\n}\n\n/**\n * Listens to the specified event on the given DOM element. This function normalizes\n * DOM event payloads and functions so they'll work the same way on all supported\n * browsers.\n * @param {!Element|string} element The DOM element to listen to the event on, or\n *   a selector that should be delegated on the entire document.\n * @param {string} eventName The name of the event to listen to.\n * @param {!function(!Object)} callback Function to be called when the event is\n *   triggered. It will receive the normalized event object.\n * @param {boolean} opt_capture Flag indicating if listener should be triggered\n *   during capture phase, instead of during the bubbling phase. Defaults to false.\n * @return {!DomEventHandle} Can be used to remove the listener.\n */\nfunction on(element, eventName, callback, opt_capture) {\n\tif ((0, _metal.isString)(element)) {\n\t\treturn delegate(document, eventName, element, callback);\n\t}\n\tvar customConfig = customEvents[eventName];\n\tif (customConfig && customConfig.event) {\n\t\teventName = customConfig.originalEvent;\n\t\tcallback = customConfig.handler.bind(customConfig, callback);\n\t}\n\telement.addEventListener(eventName, callback, opt_capture);\n\treturn new _DomEventHandle2.default(element, eventName, callback, opt_capture);\n}\n\n/**\n * Listens to the specified event on the given DOM element once. This\n * function normalizes DOM event payloads and functions so they'll work the\n * same way on all supported browsers.\n * @param {!Element} element The DOM element to listen to the event on.\n * @param {string} eventName The name of the event to listen to.\n * @param {!function(!Object)} callback Function to be called when the event\n *   is triggered. It will receive the normalized event object.\n * @return {!DomEventHandle} Can be used to remove the listener.\n */\nfunction once(element, eventName, callback) {\n\tvar domEventHandle = on(element, eventName, function () {\n\t\tdomEventHandle.removeListener();\n\t\treturn callback.apply(this, arguments);\n\t});\n\treturn domEventHandle;\n}\n\n/**\n * Gets the first parent from the given element that matches the specified\n * selector, or null if none match.\n * @param {!Element} element\n * @param {string} selector\n * @return {Element}\n */\nfunction parent(element, selector) {\n\treturn closest(element.parentNode, selector);\n}\n\n/**\n * Registers a custom event.\n * @param {string} eventName The name of the custom event.\n * @param {!Object} customConfig An object with information about how the event\n *   should be handled.\n */\nfunction registerCustomEvent(eventName, customConfig) {\n\tcustomEvents[eventName] = customConfig;\n}\n\n/**\n * Removes all the child nodes on a DOM node.\n * @param {Element} node Element to remove children from.\n */\nfunction removeChildren(node) {\n\tvar child = void 0;\n\twhile (child = node.firstChild) {\n\t\tnode.removeChild(child);\n\t}\n}\n\n/**\n * Removes the requested CSS classes from an element.\n * @param {!Element|!NodeList} elements The element or elements to remove CSS classes from.\n * @param {string} classes CSS classes to remove.\n */\nfunction removeClasses(elements, classes) {\n\tif (!(0, _metal.isObject)(elements) || !(0, _metal.isString)(classes)) {\n\t\treturn;\n\t}\n\n\tif (!elements.length) {\n\t\telements = [elements];\n\t}\n\n\tfor (var i = 0; i < elements.length; i++) {\n\t\tif ('classList' in elements[i]) {\n\t\t\tremoveClassesWithNative_(elements[i], classes);\n\t\t} else {\n\t\t\tremoveClassesWithoutNative_(elements[i], classes);\n\t\t}\n\t}\n}\n\n/**\n * Removes the requested CSS classes from an element using classList.\n * @param {!Element} element The element to remove CSS classes from.\n * @param {string} classes CSS classes to remove.\n * @private\n */\nfunction removeClassesWithNative_(element, classes) {\n\tclasses.split(' ').forEach(function (className) {\n\t\tif (className) {\n\t\t\telement.classList.remove(className);\n\t\t}\n\t});\n}\n\n/**\n * Removes the requested CSS classes from an element without using classList.\n * @param {!Element} element The element to remove CSS classes from.\n * @param {string} classes CSS classes to remove.\n * @private\n */\nfunction removeClassesWithoutNative_(element, classes) {\n\tvar elementClassName = ' ' + element.className + ' ';\n\n\tclasses = classes.split(' ');\n\n\tfor (var i = 0; i < classes.length; i++) {\n\t\telementClassName = elementClassName.replace(' ' + classes[i] + ' ', ' ');\n\t}\n\n\telement.className = elementClassName.trim();\n}\n\n/**\n * Replaces the first element with the second.\n * @param {Element} element1\n * @param {Element} element2\n */\nfunction replace(element1, element2) {\n\tif (element1 && element2 && element1 !== element2 && element1.parentNode) {\n\t\telement1.parentNode.insertBefore(element2, element1);\n\t\telement1.parentNode.removeChild(element1);\n\t}\n}\n\n/**\n * The function that replaces `stopImmediatePropagation_` for events.\n * @private\n */\nfunction stopImmediatePropagation_() {\n\tvar event = this; // eslint-disable-line\n\tevent.stopped = true;\n\tevent.stoppedImmediate = true;\n\tEvent.prototype.stopImmediatePropagation.call(event);\n}\n\n/**\n * The function that replaces `stopPropagation` for events.\n * @private\n */\nfunction stopPropagation_() {\n\tvar event = this; // eslint-disable-line\n\tevent.stopped = true;\n\tEvent.prototype.stopPropagation.call(event);\n}\n\n/**\n * Checks if the given element supports the given event type.\n * @param {!Element|string} element The DOM element or element tag name to check.\n * @param {string} eventName The name of the event to check.\n * @return {boolean}\n */\nfunction supportsEvent(element, eventName) {\n\tif (customEvents[eventName]) {\n\t\treturn true;\n\t}\n\n\tif ((0, _metal.isString)(element)) {\n\t\tif (!elementsByTag_[element]) {\n\t\t\telementsByTag_[element] = document.createElement(element);\n\t\t}\n\t\telement = elementsByTag_[element];\n\t}\n\n\tvar tag = element.tagName;\n\tif (!supportCache_[tag] || !supportCache_[tag].hasOwnProperty(eventName)) {\n\t\tsupportCache_[tag] = supportCache_[tag] || {};\n\t\tsupportCache_[tag][eventName] = 'on' + eventName in element;\n\t}\n\treturn supportCache_[tag][eventName];\n}\n\n/**\n * This triggers all default matched delegated listeners of a given event type.\n * @param {!Array} defaultFns Array to collect default listeners in, instead\n * @param {!Event} event\n * @return {boolean} False if at least one of the triggered callbacks returns\n *     false, or true otherwise.\n * @private\n */\nfunction triggerDefaultDelegatedListeners_(defFns, event) {\n\tvar ret = true;\n\n\tfor (var i = 0; i < defFns.length && !event.defaultPrevented; i++) {\n\t\tevent.delegateTarget = defFns[i].element;\n\t\tret &= defFns[i].fn(event);\n\t}\n\n\treturn ret;\n}\n\n/**\n * This triggers all matched delegated listeners of a given event type when its\n * delegated target is able to interact.\n * @param {!Element} container\n * @param {!Event} event\n * @param {!Array} defaultFns Array to collect default listeners in, instead\n *     of running them.\n * @return {boolean} False if at least one of the triggered callbacks returns\n *     false, or true otherwise.\n * @private\n */\nfunction triggerDelegatedListeners_(container, event, defaultFns) {\n\tvar ret = true;\n\tvar currElement = event.target;\n\tvar limit = container.parentNode;\n\n\twhile (currElement && currElement !== limit && !event.stopped) {\n\t\tif (isAbleToInteractWith_(currElement, event.type, event)) {\n\t\t\tevent.delegateTarget = currElement;\n\t\t\tret &= triggerElementListeners_(currElement, event, defaultFns);\n\t\t\tret &= triggerSelectorListeners_(container, currElement, event, defaultFns);\n\t\t}\n\t\tcurrElement = currElement.parentNode;\n\t}\n\n\treturn ret;\n}\n\n/**\n * Converts the given argument to a DOM element. Strings are assumed to\n * be selectors, and so a matched element will be returned. If the arg\n * is already a DOM element it will be the return value.\n * @param {string|Element|Document} selectorOrElement\n * @return {Element} The converted element, or null if none was found.\n */\nfunction toElement(selectorOrElement) {\n\tif ((0, _metal.isElement)(selectorOrElement) || (0, _metal.isDocument)(selectorOrElement) || (0, _metal.isDocumentFragment)(selectorOrElement)) {\n\t\treturn selectorOrElement;\n\t} else if ((0, _metal.isString)(selectorOrElement)) {\n\t\tif (selectorOrElement[0] === '#' && selectorOrElement.indexOf(' ') === -1) {\n\t\t\treturn document.getElementById(selectorOrElement.substr(1));\n\t\t} else {\n\t\t\treturn document.querySelector(selectorOrElement);\n\t\t}\n\t} else {\n\t\treturn null;\n\t}\n}\n\n/**\n * Adds or removes one or more classes from an element. If any of the classes\n * is present, it will be removed from the element, or added otherwise.\n * @param {!Element} element The element which classes will be toggled.\n * @param {string} classes The classes which have to added or removed from the element.\n */\nfunction toggleClasses(element, classes) {\n\tif (!(0, _metal.isObject)(element) || !(0, _metal.isString)(classes)) {\n\t\treturn;\n\t}\n\n\tif ('classList' in element) {\n\t\ttoggleClassesWithNative_(element, classes);\n\t} else {\n\t\ttoggleClassesWithoutNative_(element, classes);\n\t}\n}\n\n/**\n * Adds or removes one or more classes from an element using classList.\n * If any of the classes is present, it will be removed from the element,\n * or added otherwise.\n * @param {!Element} element The element which classes will be toggled.\n * @param {string} classes The classes which have to added or removed from the element.\n * @private\n */\nfunction toggleClassesWithNative_(element, classes) {\n\tclasses.split(' ').forEach(function (className) {\n\t\telement.classList.toggle(className);\n\t});\n}\n\n/**\n * Adds or removes one or more classes from an element without using classList.\n * If any of the classes is present, it will be removed from the element,\n * or added otherwise.\n * @param {!Element} element The element which classes will be toggled.\n * @param {string} classes The classes which have to added or removed from the element.\n * @private\n */\nfunction toggleClassesWithoutNative_(element, classes) {\n\tvar elementClassName = ' ' + element.className + ' ';\n\n\tclasses = classes.split(' ');\n\n\tfor (var i = 0; i < classes.length; i++) {\n\t\tvar className = ' ' + classes[i] + ' ';\n\t\tvar classIndex = elementClassName.indexOf(className);\n\n\t\tif (classIndex === -1) {\n\t\t\telementClassName = '' + elementClassName + classes[i] + ' ';\n\t\t} else {\n\t\t\tvar before = elementClassName.substring(0, classIndex);\n\t\t\tvar after = elementClassName.substring(classIndex + className.length);\n\t\t\telementClassName = before + ' ' + after;\n\t\t}\n\t}\n\n\telement.className = elementClassName.trim();\n}\n\n/**\n * Triggers all listeners for the given event type that are stored in the\n * specified element.\n * @param {!Element} element\n * @param {!Event} event\n * @param {!Array} defaultFns Array to collect default listeners in, instead\n *     of running them.\n * @return {boolean} False if at least one of the triggered callbacks returns\n *     false, or true otherwise.\n * @private\n */\nfunction triggerElementListeners_(element, event, defaultFns) {\n\tvar lastContainer = event[LAST_CONTAINER];\n\tif (!(0, _metal.isDef)(lastContainer) || !contains(lastContainer, element)) {\n\t\tvar listeners = _domData2.default.get(element, 'listeners', {})[event.type];\n\t\treturn triggerListeners_(listeners, event, element, defaultFns);\n\t}\n\treturn true;\n}\n\n/**\n * Triggers the specified event on the given element.\n * NOTE: This should mostly be used for testing, not on real code.\n * @param {!Element} element The node that should trigger the event.\n * @param {string} eventName The name of the event to be triggred.\n * @param {Object=} opt_eventObj An object with data that should be on the\n *   triggered event's payload.\n */\nfunction triggerEvent(element, eventName, opt_eventObj) {\n\tif (isAbleToInteractWith_(element, eventName, opt_eventObj)) {\n\t\tvar eventObj = document.createEvent('HTMLEvents');\n\t\teventObj.initEvent(eventName, true, true);\n\t\t_metal.object.mixin(eventObj, opt_eventObj);\n\t\telement.dispatchEvent(eventObj);\n\t}\n}\n\n/**\n * Triggers the given listeners array.\n * @param {Array<!function()>} listeners\n * @param {!Event} event\n * @param {!Element} element\n * @param {!Array} defaultFns Array to collect default listeners in, instead\n *     of running them.\n * @return {boolean} False if at least one of the triggered callbacks returns\n *     false, or true otherwise.\n * @private\n */\nfunction triggerListeners_(listeners, event, element, defaultFns) {\n\tvar ret = true;\n\tlisteners = listeners || [];\n\tfor (var i = 0; i < listeners.length && !event.stoppedImmediate; i++) {\n\t\tif (listeners[i].defaultListener_) {\n\t\t\tdefaultFns.push({\n\t\t\t\telement: element,\n\t\t\t\tfn: listeners[i]\n\t\t\t});\n\t\t} else {\n\t\t\tret &= listeners[i](event);\n\t\t}\n\t}\n\treturn ret;\n}\n\n/**\n * Triggers all selector listeners for the given event.\n * @param {!Element} container\n * @param {!Element} element\n * @param {!Event} event\n * @param {!Array} defaultFns Array to collect default listeners in, instead\n *     of running them.\n * @return {boolean} False if at least one of the triggered callbacks returns\n *     false, or true otherwise.\n * @private\n */\nfunction triggerSelectorListeners_(container, element, event, defaultFns) {\n\tvar ret = true;\n\tvar data = _domData2.default.get(container, 'delegating', {});\n\tvar map = data[event.type].selectors;\n\tvar selectors = Object.keys(map);\n\tfor (var i = 0; i < selectors.length && !event.stoppedImmediate; i++) {\n\t\tif (match(element, selectors[i])) {\n\t\t\tvar listeners = map[selectors[i]];\n\t\t\tret &= triggerListeners_(listeners, event, element, defaultFns);\n\t\t}\n\t}\n\treturn ret;\n}"
            },
            {
              "id": 43,
              "identifier": "/Users/Liferay/trampo/senna.js/node_modules/metal-dom/lib/DomDelegatedEventHandle.js",
              "name": "./node_modules/metal-dom/lib/DomDelegatedEventHandle.js",
              "index": 35,
              "index2": 28,
              "size": 3552,
              "cacheable": true,
              "built": true,
              "optional": false,
              "prefetched": false,
              "chunks": [
                0
              ],
              "assets": [],
              "issuer": "/Users/Liferay/trampo/senna.js/node_modules/metal-dom/lib/domNamed.js",
              "issuerId": 42,
              "issuerName": "./node_modules/metal-dom/lib/domNamed.js",
              "profile": {
                "factory": 1,
                "building": 3,
                "dependencies": 0
              },
              "failed": false,
              "errors": 0,
              "warnings": 0,
              "reasons": [
                {
                  "moduleId": 42,
                  "moduleIdentifier": "/Users/Liferay/trampo/senna.js/node_modules/metal-dom/lib/domNamed.js",
                  "module": "./node_modules/metal-dom/lib/domNamed.js",
                  "moduleName": "./node_modules/metal-dom/lib/domNamed.js",
                  "type": "cjs require",
                  "userRequest": "./DomDelegatedEventHandle",
                  "loc": "37:31-67"
                }
              ],
              "usedExports": true,
              "providedExports": null,
              "optimizationBailout": [
                "ModuleConcatenation bailout: Module is not an ECMAScript module"
              ],
              "depth": 5,
              "source": "'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _metal = require('metal');\n\nvar _domData = require('./domData');\n\nvar _domData2 = _interopRequireDefault(_domData);\n\nvar _metalEvents = require('metal-events');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n/**\n * This is a special EventHandle, that is responsible for dom delegated events\n * (only the ones that receive a target element, not a selector string).\n * @extends {EventHandle}\n */\nvar DomDelegatedEventHandle = function (_EventHandle) {\n\t_inherits(DomDelegatedEventHandle, _EventHandle);\n\n\t/**\n  * The constructor for `DomDelegatedEventHandle`.\n  * @param {!Event} emitter Element the event was subscribed to.\n  * @param {string} event The name of the event that was subscribed to.\n  * @param {!Function} listener The listener subscribed to the event.\n  * @param {string=} opt_selector An optional selector used when delegating\n  *     the event.\n  * @constructor\n  */\n\tfunction DomDelegatedEventHandle(emitter, event, listener, opt_selector) {\n\t\t_classCallCheck(this, DomDelegatedEventHandle);\n\n\t\tvar _this = _possibleConstructorReturn(this, (DomDelegatedEventHandle.__proto__ || Object.getPrototypeOf(DomDelegatedEventHandle)).call(this, emitter, event, listener));\n\n\t\t_this.selector_ = opt_selector;\n\t\treturn _this;\n\t}\n\n\t/**\n  * @inheritDoc\n  */\n\n\n\t_createClass(DomDelegatedEventHandle, [{\n\t\tkey: 'removeListener',\n\t\tvalue: function removeListener() {\n\t\t\tvar delegating = _domData2.default.get(this.emitter_, 'delegating', {});\n\t\t\tvar listeners = _domData2.default.get(this.emitter_, 'listeners', {});\n\t\t\tvar selector = this.selector_;\n\t\t\tvar arr = (0, _metal.isString)(selector) ? delegating[this.event_].selectors : listeners;\n\t\t\tvar key = (0, _metal.isString)(selector) ? selector : this.event_;\n\n\t\t\t_metal.array.remove(arr[key] || [], this.listener_);\n\t\t\tif (arr[key] && arr[key].length === 0) {\n\t\t\t\tdelete arr[key];\n\t\t\t}\n\t\t}\n\t}]);\n\n\treturn DomDelegatedEventHandle;\n}(_metalEvents.EventHandle);\n\nexports.default = DomDelegatedEventHandle;"
            },
            {
              "id": 44,
              "identifier": "/Users/Liferay/trampo/senna.js/node_modules/metal-dom/lib/DomEventEmitterProxy.js",
              "name": "./node_modules/metal-dom/lib/DomEventEmitterProxy.js",
              "index": 37,
              "index2": 32,
              "size": 4745,
              "cacheable": true,
              "built": true,
              "optional": false,
              "prefetched": false,
              "chunks": [
                0
              ],
              "assets": [],
              "issuer": "/Users/Liferay/trampo/senna.js/node_modules/metal-dom/lib/all/dom.js",
              "issuerId": 7,
              "issuerName": "./node_modules/metal-dom/lib/all/dom.js",
              "profile": {
                "factory": 8,
                "building": 35,
                "dependencies": 25
              },
              "failed": false,
              "errors": 0,
              "warnings": 0,
              "reasons": [
                {
                  "moduleId": 7,
                  "moduleIdentifier": "/Users/Liferay/trampo/senna.js/node_modules/metal-dom/lib/all/dom.js",
                  "module": "./node_modules/metal-dom/lib/all/dom.js",
                  "moduleName": "./node_modules/metal-dom/lib/all/dom.js",
                  "type": "cjs require",
                  "userRequest": "../DomEventEmitterProxy",
                  "loc": "26:28-62"
                }
              ],
              "usedExports": true,
              "providedExports": null,
              "optimizationBailout": [
                "ModuleConcatenation bailout: Module is not an ECMAScript module"
              ],
              "depth": 3,
              "source": "'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\nvar _dom = require('./dom');\n\nvar _metalEvents = require('metal-events');\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n/**\n * DomEventEmitterProxy utility. It extends `EventEmitterProxy` to also accept\n * dom elements as origin emitters.\n * @extends {EventEmitterProxy}\n */\nvar DomEventEmitterProxy = function (_EventEmitterProxy) {\n\t_inherits(DomEventEmitterProxy, _EventEmitterProxy);\n\n\tfunction DomEventEmitterProxy() {\n\t\t_classCallCheck(this, DomEventEmitterProxy);\n\n\t\treturn _possibleConstructorReturn(this, (DomEventEmitterProxy.__proto__ || Object.getPrototypeOf(DomEventEmitterProxy)).apply(this, arguments));\n\t}\n\n\t_createClass(DomEventEmitterProxy, [{\n\t\tkey: 'addListener_',\n\n\t\t/**\n   * Adds the given listener for the given event.\n   * @param {string} event\n   * @param {!function()} listener\n   * @return {!EventHandle} The listened event's handle.\n   * @protected\n   * @override\n   */\n\t\tvalue: function addListener_(event, listener) {\n\t\t\tif (this.originEmitter_.addEventListener) {\n\t\t\t\tif (this.isDelegateEvent_(event)) {\n\t\t\t\t\tvar index = event.indexOf(':', 9);\n\t\t\t\t\tvar eventName = event.substring(9, index);\n\t\t\t\t\tvar selector = event.substring(index + 1);\n\t\t\t\t\treturn (0, _dom.delegate)(this.originEmitter_, eventName, selector, listener);\n\t\t\t\t} else {\n\t\t\t\t\treturn (0, _dom.on)(this.originEmitter_, event, listener);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\treturn _get(DomEventEmitterProxy.prototype.__proto__ || Object.getPrototypeOf(DomEventEmitterProxy.prototype), 'addListener_', this).call(this, event, listener);\n\t\t\t}\n\t\t}\n\n\t\t/**\n   * Checks if the given event is of the delegate type.\n   * @param {string} event\n   * @return {boolean}\n   * @protected\n   */\n\n\t}, {\n\t\tkey: 'isDelegateEvent_',\n\t\tvalue: function isDelegateEvent_(event) {\n\t\t\treturn event.substr(0, 9) === 'delegate:';\n\t\t}\n\n\t\t/**\n   * Checks if the given event is supported by the origin element.\n   * @param {string} event\n   * @protected\n   */\n\n\t}, {\n\t\tkey: 'isSupportedDomEvent_',\n\t\tvalue: function isSupportedDomEvent_(event) {\n\t\t\tif (!this.originEmitter_ || !this.originEmitter_.addEventListener) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\treturn this.isDelegateEvent_(event) && event.indexOf(':', 9) !== -1 || (0, _dom.supportsEvent)(this.originEmitter_, event);\n\t\t}\n\n\t\t/**\n   * Checks if the given event should be proxied.\n   * @param {string} event\n   * @return {boolean}\n   * @protected\n   * @override\n   */\n\n\t}, {\n\t\tkey: 'shouldProxyEvent_',\n\t\tvalue: function shouldProxyEvent_(event) {\n\t\t\treturn _get(DomEventEmitterProxy.prototype.__proto__ || Object.getPrototypeOf(DomEventEmitterProxy.prototype), 'shouldProxyEvent_', this).call(this, event) && this.isSupportedDomEvent_(event);\n\t\t}\n\t}]);\n\n\treturn DomEventEmitterProxy;\n}(_metalEvents.EventEmitterProxy);\n\nexports.default = DomEventEmitterProxy;"
            },
            {
              "id": 45,
              "identifier": "/Users/Liferay/trampo/senna.js/node_modules/metal-dom/lib/globalEval.js",
              "name": "./node_modules/metal-dom/lib/globalEval.js",
              "index": 39,
              "index2": 34,
              "size": 4767,
              "cacheable": true,
              "built": true,
              "optional": false,
              "prefetched": false,
              "chunks": [
                0
              ],
              "assets": [],
              "issuer": "/Users/Liferay/trampo/senna.js/node_modules/metal-dom/lib/all/dom.js",
              "issuerId": 7,
              "issuerName": "./node_modules/metal-dom/lib/all/dom.js",
              "profile": {
                "factory": 8,
                "building": 48,
                "dependencies": 12
              },
              "failed": false,
              "errors": 0,
              "warnings": 0,
              "reasons": [
                {
                  "moduleId": 7,
                  "moduleIdentifier": "/Users/Liferay/trampo/senna.js/node_modules/metal-dom/lib/all/dom.js",
                  "module": "./node_modules/metal-dom/lib/all/dom.js",
                  "moduleName": "./node_modules/metal-dom/lib/all/dom.js",
                  "type": "cjs require",
                  "userRequest": "../globalEval",
                  "loc": "38:18-42"
                }
              ],
              "usedExports": true,
              "providedExports": null,
              "optimizationBailout": [
                "ModuleConcatenation bailout: Module is not an ECMAScript module"
              ],
              "depth": 3,
              "source": "'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _metal = require('metal');\n\nvar _dom = require('./dom');\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\n * Utility functions for running javascript code in the global scope.\n */\nvar globalEval = function () {\n\tfunction globalEval() {\n\t\t_classCallCheck(this, globalEval);\n\t}\n\n\t_createClass(globalEval, null, [{\n\t\tkey: 'run',\n\n\t\t/**\n   * Evaluates the given string in the global scope.\n   * @param {string} text\n   * @param {function()=} opt_appendFn Optional function to append the node\n   *   into document.\n   * @return {Element} script\n   */\n\t\tvalue: function run(text, opt_appendFn) {\n\t\t\tvar script = document.createElement('script');\n\t\t\tscript.text = text;\n\t\t\tif (opt_appendFn) {\n\t\t\t\topt_appendFn(script);\n\t\t\t} else {\n\t\t\t\tdocument.head.appendChild(script);\n\t\t\t}\n\t\t\t(0, _dom.exitDocument)(script);\n\t\t\treturn script;\n\t\t}\n\n\t\t/**\n   * Evaluates the given javascript file in the global scope.\n   * @param {string} src The file's path.\n   * @param {function()=} opt_callback Optional function to be called\n   *   when the script has been run.\n   * @param {function()=} opt_appendFn Optional function to append the node\n   *   into document.\n   * @return {Element} script\n   */\n\n\t}, {\n\t\tkey: 'runFile',\n\t\tvalue: function runFile(src, opt_callback, opt_appendFn) {\n\t\t\tvar script = document.createElement('script');\n\t\t\tscript.src = src;\n\n\t\t\tvar callback = function callback() {\n\t\t\t\t(0, _dom.exitDocument)(script);\n\t\t\t\topt_callback && opt_callback();\n\t\t\t};\n\t\t\t(0, _dom.once)(script, 'load', callback);\n\t\t\t(0, _dom.once)(script, 'error', callback);\n\n\t\t\tif (opt_appendFn) {\n\t\t\t\topt_appendFn(script);\n\t\t\t} else {\n\t\t\t\tdocument.head.appendChild(script);\n\t\t\t}\n\n\t\t\treturn script;\n\t\t}\n\n\t\t/**\n   * Evaluates the code referenced by the given script element.\n   * @param {!Element} script\n   * @param {function()=} opt_callback Optional function to be called\n   *   when the script has been run.\n   * @param {function()=} opt_appendFn Optional function to append the node\n   *   into document.\n   * @return {Element} script\n   */\n\n\t}, {\n\t\tkey: 'runScript',\n\t\tvalue: function runScript(script, opt_callback, opt_appendFn) {\n\t\t\tvar callback = function callback() {\n\t\t\t\topt_callback && opt_callback();\n\t\t\t};\n\t\t\tif (script.type && script.type !== 'text/javascript') {\n\t\t\t\t_metal.async.nextTick(callback);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t(0, _dom.exitDocument)(script);\n\t\t\tif (script.src) {\n\t\t\t\treturn globalEval.runFile(script.src, opt_callback, opt_appendFn);\n\t\t\t} else {\n\t\t\t\t_metal.async.nextTick(callback);\n\t\t\t\treturn globalEval.run(script.text, opt_appendFn);\n\t\t\t}\n\t\t}\n\n\t\t/**\n   * Evaluates any script tags present in the given element.\n   * @param {!Element} element\n   * @param {function()=} opt_callback Optional function to be called\n   *   when the script has been run.\n   * @param {function()=} opt_appendFn Optional function to append the node\n   *   into document.\n   */\n\n\t}, {\n\t\tkey: 'runScriptsInElement',\n\t\tvalue: function runScriptsInElement(element, opt_callback, opt_appendFn) {\n\t\t\tvar scripts = element.querySelectorAll('script');\n\t\t\tif (scripts.length) {\n\t\t\t\tglobalEval.runScriptsInOrder(scripts, 0, opt_callback, opt_appendFn);\n\t\t\t} else if (opt_callback) {\n\t\t\t\t_metal.async.nextTick(opt_callback);\n\t\t\t}\n\t\t}\n\n\t\t/**\n   * Runs the given scripts elements in the order that they appear.\n   * @param {!NodeList} scripts\n   * @param {number} index\n   * @param {function()=} opt_callback Optional function to be called\n   *   when the script has been run.\n   * @param {function()=} opt_appendFn Optional function to append the node\n   *   into document.\n   */\n\n\t}, {\n\t\tkey: 'runScriptsInOrder',\n\t\tvalue: function runScriptsInOrder(scripts, index, opt_callback, opt_appendFn) {\n\t\t\tglobalEval.runScript(scripts.item(index), function () {\n\t\t\t\tif (index < scripts.length - 1) {\n\t\t\t\t\tglobalEval.runScriptsInOrder(scripts, index + 1, opt_callback, opt_appendFn);\n\t\t\t\t} else if (opt_callback) {\n\t\t\t\t\t_metal.async.nextTick(opt_callback);\n\t\t\t\t}\n\t\t\t}, opt_appendFn);\n\t\t}\n\t}]);\n\n\treturn globalEval;\n}();\n\nexports.default = globalEval;"
            },
            {
              "id": 46,
              "identifier": "/Users/Liferay/trampo/senna.js/node_modules/metal-dom/lib/globalEvalStyles.js",
              "name": "./node_modules/metal-dom/lib/globalEvalStyles.js",
              "index": 40,
              "index2": 35,
              "size": 3988,
              "cacheable": true,
              "built": true,
              "optional": false,
              "prefetched": false,
              "chunks": [
                0
              ],
              "assets": [],
              "issuer": "/Users/Liferay/trampo/senna.js/node_modules/metal-dom/lib/all/dom.js",
              "issuerId": 7,
              "issuerName": "./node_modules/metal-dom/lib/all/dom.js",
              "profile": {
                "factory": 8,
                "building": 53,
                "dependencies": 7
              },
              "failed": false,
              "errors": 0,
              "warnings": 0,
              "reasons": [
                {
                  "moduleId": 7,
                  "moduleIdentifier": "/Users/Liferay/trampo/senna.js/node_modules/metal-dom/lib/all/dom.js",
                  "module": "./node_modules/metal-dom/lib/all/dom.js",
                  "moduleName": "./node_modules/metal-dom/lib/all/dom.js",
                  "type": "cjs require",
                  "userRequest": "../globalEvalStyles",
                  "loc": "42:24-54"
                }
              ],
              "usedExports": true,
              "providedExports": null,
              "optimizationBailout": [
                "ModuleConcatenation bailout: Module is not an ECMAScript module"
              ],
              "depth": 3,
              "source": "'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _metal = require('metal');\n\nvar _dom = require('./dom');\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\n * Utility functions for running styles.\n */\nvar globalEvalStyles = function () {\n\tfunction globalEvalStyles() {\n\t\t_classCallCheck(this, globalEvalStyles);\n\t}\n\n\t_createClass(globalEvalStyles, null, [{\n\t\tkey: 'run',\n\n\t\t/**\n   * Evaluates the given style.\n   * @param {string} text\n   * @param {function()=} opt_appendFn Optional function to append the node\n   *   into document.\n   * @return {Element} style\n   */\n\t\tvalue: function run(text, opt_appendFn) {\n\t\t\tvar style = document.createElement('style');\n\t\t\tstyle.innerHTML = text;\n\t\t\tif (opt_appendFn) {\n\t\t\t\topt_appendFn(style);\n\t\t\t} else {\n\t\t\t\tdocument.head.appendChild(style);\n\t\t\t}\n\t\t\treturn style;\n\t\t}\n\n\t\t/**\n   * Evaluates the given style file.\n   * @param {string} href The file's path.\n   * @param {function()=} opt_callback Optional function to be called\n   *   when the styles has been run.\n   * @param {function()=} opt_appendFn Optional function to append the node\n   *   into document.\n   * @return {Element} style\n   */\n\n\t}, {\n\t\tkey: 'runFile',\n\t\tvalue: function runFile(href, opt_callback, opt_appendFn) {\n\t\t\tvar link = document.createElement('link');\n\t\t\tlink.rel = 'stylesheet';\n\t\t\tlink.href = href;\n\t\t\tglobalEvalStyles.runStyle(link, opt_callback, opt_appendFn);\n\t\t\treturn link;\n\t\t}\n\n\t\t/**\n   * Evaluates the code referenced by the given style/link element.\n   * @param {!Element} style\n   * @param {function()=} opt_callback Optional function to be called\n   *   when the script has been run.\n   * @param {function()=} opt_appendFn Optional function to append the node\n   *   into document.\n   *  @return {Element} style\n   */\n\n\t}, {\n\t\tkey: 'runStyle',\n\t\tvalue: function runStyle(style, opt_callback, opt_appendFn) {\n\t\t\tvar callback = function callback() {\n\t\t\t\topt_callback && opt_callback();\n\t\t\t};\n\t\t\tif (style.rel && style.rel !== 'stylesheet') {\n\t\t\t\t_metal.async.nextTick(callback);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (style.tagName === 'STYLE') {\n\t\t\t\t_metal.async.nextTick(callback);\n\t\t\t} else {\n\t\t\t\t(0, _dom.once)(style, 'load', callback);\n\t\t\t\t(0, _dom.once)(style, 'error', callback);\n\t\t\t}\n\n\t\t\tif (opt_appendFn) {\n\t\t\t\topt_appendFn(style);\n\t\t\t} else {\n\t\t\t\tdocument.head.appendChild(style);\n\t\t\t}\n\n\t\t\treturn style;\n\t\t}\n\n\t\t/**\n   * Evaluates any style present in the given element.\n   * @param {!Element} element\n   * @param {function()=} opt_callback Optional function to be called when the\n   *   style has been run.\n   * @param {function()=} opt_appendFn Optional function to append the node\n   *   into document.\n   */\n\n\t}, {\n\t\tkey: 'runStylesInElement',\n\t\tvalue: function runStylesInElement(element, opt_callback, opt_appendFn) {\n\t\t\tvar styles = element.querySelectorAll('style,link');\n\t\t\tif (styles.length === 0 && opt_callback) {\n\t\t\t\t_metal.async.nextTick(opt_callback);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar loadCount = 0;\n\t\t\tvar callback = function callback() {\n\t\t\t\tif (opt_callback && ++loadCount === styles.length) {\n\t\t\t\t\t_metal.async.nextTick(opt_callback);\n\t\t\t\t}\n\t\t\t};\n\t\t\tfor (var i = 0; i < styles.length; i++) {\n\t\t\t\tglobalEvalStyles.runStyle(styles[i], callback, opt_appendFn);\n\t\t\t}\n\t\t}\n\t}]);\n\n\treturn globalEvalStyles;\n}();\n\nexports.default = globalEvalStyles;"
            },
            {
              "id": 47,
              "identifier": "/Users/Liferay/trampo/senna.js/node_modules/metal-dom/lib/events.js",
              "name": "./node_modules/metal-dom/lib/events.js",
              "index": 41,
              "index2": 36,
              "size": 1282,
              "cacheable": true,
              "built": true,
              "optional": false,
              "prefetched": false,
              "chunks": [
                0
              ],
              "assets": [],
              "issuer": "/Users/Liferay/trampo/senna.js/node_modules/metal-dom/lib/all/dom.js",
              "issuerId": 7,
              "issuerName": "./node_modules/metal-dom/lib/all/dom.js",
              "profile": {
                "factory": 8,
                "building": 54,
                "dependencies": 1
              },
              "failed": false,
              "errors": 0,
              "warnings": 0,
              "reasons": [
                {
                  "moduleId": 7,
                  "moduleIdentifier": "/Users/Liferay/trampo/senna.js/node_modules/metal-dom/lib/all/dom.js",
                  "module": "./node_modules/metal-dom/lib/all/dom.js",
                  "moduleName": "./node_modules/metal-dom/lib/all/dom.js",
                  "type": "cjs require",
                  "userRequest": "../events",
                  "loc": "46:0-20"
                }
              ],
              "usedExports": true,
              "providedExports": null,
              "optimizationBailout": [
                "ModuleConcatenation bailout: Module is not an ECMAScript module"
              ],
              "depth": 3,
              "source": "'use strict';\n\nvar _dom = require('./dom');\n\nvar _features = require('./features');\n\nvar _features2 = _interopRequireDefault(_features);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar mouseEventMap = {\n\tmouseenter: 'mouseover',\n\tmouseleave: 'mouseout',\n\tpointerenter: 'pointerover',\n\tpointerleave: 'pointerout'\n};\nObject.keys(mouseEventMap).forEach(function (eventName) {\n\t(0, _dom.registerCustomEvent)(eventName, {\n\t\tdelegate: true,\n\t\thandler: function handler(callback, event) {\n\t\t\tvar related = event.relatedTarget;\n\t\t\tvar target = event.delegateTarget;\n\t\t\tif (!related || related !== target && !(0, _dom.contains)(target, related)) {\n\t\t\t\tevent.customType = eventName;\n\t\t\t\treturn callback(event);\n\t\t\t}\n\t\t},\n\t\toriginalEvent: mouseEventMap[eventName]\n\t});\n});\n\nvar animationEventMap = {\n\tanimation: 'animationend',\n\ttransition: 'transitionend'\n};\nObject.keys(animationEventMap).forEach(function (eventType) {\n\tvar eventName = animationEventMap[eventType];\n\t(0, _dom.registerCustomEvent)(eventName, {\n\t\tevent: true,\n\t\tdelegate: true,\n\t\thandler: function handler(callback, event) {\n\t\t\tevent.customType = eventName;\n\t\t\treturn callback(event);\n\t\t},\n\t\toriginalEvent: _features2.default.checkAnimationEventName()[eventType]\n\t});\n});"
            },
            {
              "id": 48,
              "identifier": "/Users/Liferay/trampo/senna.js/node_modules/metal-path-parser/lib/pathParser.js",
              "name": "./node_modules/metal-path-parser/lib/pathParser.js",
              "index": 43,
              "index2": 38,
              "size": 4716,
              "cacheable": true,
              "built": true,
              "optional": false,
              "prefetched": false,
              "chunks": [
                0
              ],
              "assets": [],
              "issuer": "/Users/Liferay/trampo/senna.js/node_modules/babel-loader/lib/index.js??ref--0!/Users/Liferay/trampo/senna.js/src/route/Route.js",
              "issuerId": 9,
              "issuerName": "./src/route/Route.js",
              "profile": {
                "factory": 209,
                "building": 17,
                "dependencies": 14
              },
              "failed": false,
              "errors": 0,
              "warnings": 0,
              "reasons": [
                {
                  "moduleId": 9,
                  "moduleIdentifier": "/Users/Liferay/trampo/senna.js/node_modules/babel-loader/lib/index.js??ref--0!/Users/Liferay/trampo/senna.js/src/route/Route.js",
                  "module": "./src/route/Route.js",
                  "moduleName": "./src/route/Route.js",
                  "type": "amd require",
                  "userRequest": "metal-path-parser",
                  "loc": "1:0-129:2"
                }
              ],
              "usedExports": true,
              "providedExports": null,
              "optimizationBailout": [
                "ModuleConcatenation bailout: Module is not an ECMAScript module"
              ],
              "depth": 2,
              "source": "'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\nexports.parse = parse;\nexports.toRegex = toRegex;\nexports.extractData = extractData;\n\nvar _metal = require('metal');\n\nvar _metal2 = _interopRequireDefault(_metal);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar REGEX = /([\\/])?(?:(?:\\:(\\w+)(?:\\(((?:\\\\.|[^\\\\()])*)\\))?|\\(((?:\\\\.|[^\\\\()])+)\\))([+*?])?)/g;\n\n/**\n * Converts the given array of regex matches to a more readable object format.\n * @param {!Array<string>} matches\n * @return {!Object}\n */\nfunction convertMatchesToObj(matches) {\n\treturn {\n\t\tmatch: matches[0],\n\t\tprefix: matches[1],\n\t\tname: matches[2],\n\t\tparamPattern: matches[3],\n\t\tunnamedPattern: matches[4],\n\t\tmodifier: matches[5]\n\t};\n}\n\n/**\n * Converts the given tokens parsed from a route format string to a regex.\n * @param {!Array<string|!Object>} tokens\n * @return {!RegExp}\n */\nfunction convertTokensToRegex(tokens) {\n\tvar regex = '';\n\tfor (var i = 0; i < tokens.length; i++) {\n\t\tif (_metal2.default.isString(tokens[i])) {\n\t\t\tregex += escape(tokens[i]);\n\t\t} else {\n\t\t\tvar capture = encloseNonCapturingGroup(tokens[i].pattern);\n\t\t\tif (tokens[i].repeat) {\n\t\t\t\tcapture += encloseNonCapturingGroup('\\\\/' + capture) + '*';\n\t\t\t}\n\t\t\tcapture = escape(tokens[i].prefix) + ('(' + capture + ')');\n\t\t\tif (tokens[i].optional) {\n\t\t\t\tif (!tokens[i].partial) {\n\t\t\t\t\tcapture = encloseNonCapturingGroup(capture);\n\t\t\t\t}\n\t\t\t\tcapture += '?';\n\t\t\t}\n\t\t\tregex += capture;\n\t\t}\n\t}\n\treturn new RegExp('^' + makeTrailingSlashOptional(regex) + '$');\n}\n\n/**\n * Encloses the given regex pattern into a non capturing group.\n * @param {string} pattern\n * @return {string}\n */\nfunction encloseNonCapturingGroup(pattern) {\n\treturn '(?:' + pattern + ')';\n}\n\n/**\n * Escapes the given string to show up in the path regex.\n * @param {string} str\n * @return {string}\n */\nfunction escape(str) {\n\treturn str.replace(/([.+*?=^!:${}()[\\]|\\/\\\\])/g, '\\\\$1');\n}\n\n/**\n * Makes trailing slash optional on paths.\n * @param {string} regex\n * @param {string}\n */\nfunction makeTrailingSlashOptional(regex) {\n\tif (/\\/$/.test(regex)) {\n\t\tregex += '?';\n\t} else {\n\t\tregex += '\\\\/?';\n\t}\n\treturn regex;\n}\n\n/**\n * Parses the given route format string into tokens representing its contents.\n * @param {!Array|string} routeOrTokens Either a route format string or tokens\n *     previously parsed via the `parse` function.\n * @return {!Array<string|!Object>} An array of tokens that can be either plain\n *     strings (part of the route) or objects containing informations on params.\n */\nfunction parse(routeOrTokens) {\n\tif (!_metal2.default.isString(routeOrTokens)) {\n\t\treturn routeOrTokens;\n\t}\n\n\tvar route = routeOrTokens;\n\tvar unnamedCount = 0;\n\tvar tokens = [];\n\tvar currPath = '';\n\tvar index = 0;\n\n\tvar matches = REGEX.exec(route);\n\twhile (matches) {\n\t\tvar data = convertMatchesToObj(matches);\n\n\t\tcurrPath = route.slice(index, matches.index);\n\t\tindex = matches.index + data.match.length;\n\t\ttokens.push(currPath);\n\n\t\ttokens.push({\n\t\t\tname: data.name ? data.name : '' + unnamedCount++,\n\t\t\tpartial: route[index] && route[index] !== data.prefix,\n\t\t\tprefix: data.prefix || '',\n\t\t\tpattern: data.paramPattern || data.unnamedPattern || '[^\\\\/]+',\n\t\t\trepeat: data.modifier === '*' || data.modifier === '+',\n\t\t\toptional: data.modifier === '*' || data.modifier === '?'\n\t\t});\n\n\t\tmatches = REGEX.exec(route);\n\t}\n\n\tif (index < route.length) {\n\t\ttokens.push(route.substr(index));\n\t}\n\treturn tokens;\n}\n\n/**\n * Converts the given route format string to a regex that can extract param\n * data from paths matching it.\n * @param {!Array|string} routeOrTokens Either a route format string or tokens\n *     previously parsed via the `parse` function.\n * @return {!RegExp}\n */\nfunction toRegex(routeOrTokens) {\n\treturn convertTokensToRegex(parse(routeOrTokens));\n}\n\n/**\n * Extracts data from the given path according to the specified route format.\n * @param {!Array|string} routeOrTokens Either a route format string or tokens\n *     previously parsed via the `parse` function.\n * @param {string} The path to extract param data from.\n * @return {Object<string, string>} The data object, or null if the path doesn't\n *     match the given format.\n */\nfunction extractData(routeOrTokens, path) {\n\tvar data = {};\n\tvar tokens = parse(routeOrTokens);\n\tvar match = path.match(convertTokensToRegex(tokens));\n\n\tif (!match) {\n\t\treturn null;\n\t}\n\n\tvar paramIndex = 1;\n\tfor (var i = 0; i < tokens.length; i++) {\n\t\tif (!_metal2.default.isString(tokens[i])) {\n\t\t\tvar value = match[paramIndex++];\n\t\t\tif (_metal2.default.isDef(value)) {\n\t\t\t\tif (tokens[i].repeat) {\n\t\t\t\t\tvalue = value.split('/');\n\t\t\t\t}\n\t\t\t\tdata[tokens[i].name] = value;\n\t\t\t}\n\t\t}\n\t}\n\treturn data;\n}"
            },
            {
              "id": 49,
              "identifier": "/Users/Liferay/trampo/senna.js/node_modules/babel-loader/lib/index.js??ref--0!/Users/Liferay/trampo/senna.js/src/cacheable/Cacheable.js",
              "name": "./src/cacheable/Cacheable.js",
              "index": 45,
              "index2": 40,
              "size": 3946,
              "cacheable": true,
              "built": true,
              "optional": false,
              "prefetched": false,
              "chunks": [
                0
              ],
              "assets": [],
              "issuer": "/Users/Liferay/trampo/senna.js/node_modules/babel-loader/lib/index.js??ref--0!/Users/Liferay/trampo/senna.js/src/screen/Screen.js",
              "issuerId": 10,
              "issuerName": "./src/screen/Screen.js",
              "profile": {
                "factory": 55,
                "building": 163,
                "dependencies": 12
              },
              "failed": false,
              "errors": 0,
              "warnings": 0,
              "reasons": [
                {
                  "moduleId": 10,
                  "moduleIdentifier": "/Users/Liferay/trampo/senna.js/node_modules/babel-loader/lib/index.js??ref--0!/Users/Liferay/trampo/senna.js/src/screen/Screen.js",
                  "module": "./src/screen/Screen.js",
                  "moduleName": "./src/screen/Screen.js",
                  "type": "amd require",
                  "userRequest": "../cacheable/Cacheable",
                  "loc": "1:0-264:2"
                }
              ],
              "usedExports": true,
              "providedExports": null,
              "optimizationBailout": [
                "ModuleConcatenation bailout: Module is not an ECMAScript module"
              ],
              "depth": 2,
              "source": "define([\"exports\", \"metal\"], function (exports, _metal) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n\n  function _typeof(obj) {\n    if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n      _typeof = function _typeof(obj) {\n        return typeof obj;\n      };\n    } else {\n      _typeof = function _typeof(obj) {\n        return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n      };\n    }\n\n    return _typeof(obj);\n  }\n\n  function _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n      throw new TypeError(\"Cannot call a class as a function\");\n    }\n  }\n\n  function _defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  function _createClass(Constructor, protoProps, staticProps) {\n    if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) _defineProperties(Constructor, staticProps);\n    return Constructor;\n  }\n\n  function _possibleConstructorReturn(self, call) {\n    if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n      return call;\n    }\n\n    if (!self) {\n      throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }\n\n    return self;\n  }\n\n  function _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n      throw new TypeError(\"Super expression must either be null or a function\");\n    }\n\n    subClass.prototype = Object.create(superClass && superClass.prototype, {\n      constructor: {\n        value: subClass,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n    if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n  }\n\n  var Cacheable = function (_Disposable) {\n    _inherits(Cacheable, _Disposable);\n\n    /**\n     * Abstract class for defining cacheable behavior.\n     * @constructor\n     */\n    function Cacheable() {\n      var _this;\n\n      _classCallCheck(this, Cacheable);\n\n      _this = _possibleConstructorReturn(this, (Cacheable.__proto__ || Object.getPrototypeOf(Cacheable)).call(this));\n      /**\n       * Holds the cached data.\n       * @type {!Object}\n       * @default null\n       * @protected\n       */\n\n      _this.cache = null;\n      /**\n       * Holds whether class is cacheable.\n       * @type {boolean}\n       * @default false\n       * @protected\n       */\n\n      _this.cacheable = false;\n      return _this;\n    }\n    /**\n     * Adds content to the cache.\n     * @param {string} content Content to be cached.\n     * @chainable\n     */\n\n\n    _createClass(Cacheable, [{\n      key: \"addCache\",\n      value: function addCache(content) {\n        if (this.cacheable) {\n          this.cache = content;\n        }\n\n        return this;\n      }\n    }, {\n      key: \"clearCache\",\n      value: function clearCache() {\n        this.cache = null;\n        return this;\n      }\n    }, {\n      key: \"disposeInternal\",\n      value: function disposeInternal() {\n        this.clearCache();\n      }\n    }, {\n      key: \"getCache\",\n      value: function getCache() {\n        return this.cache;\n      }\n    }, {\n      key: \"isCacheable\",\n      value: function isCacheable() {\n        return this.cacheable;\n      }\n    }, {\n      key: \"setCacheable\",\n      value: function setCacheable(cacheable) {\n        if (!cacheable) {\n          this.clearCache();\n        }\n\n        this.cacheable = cacheable;\n      }\n    }]);\n\n    return Cacheable;\n  }(_metal.Disposable);\n\n  exports.default = Cacheable;\n});"
            },
            {
              "id": 50,
              "identifier": "/Users/Liferay/trampo/senna.js/node_modules/metal-ajax/lib/Ajax.js",
              "name": "./node_modules/metal-ajax/lib/Ajax.js",
              "index": 49,
              "index2": 44,
              "size": 4319,
              "cacheable": true,
              "built": true,
              "optional": false,
              "prefetched": false,
              "chunks": [
                0
              ],
              "assets": [],
              "issuer": "/Users/Liferay/trampo/senna.js/node_modules/babel-loader/lib/index.js??ref--0!/Users/Liferay/trampo/senna.js/src/screen/RequestScreen.js",
              "issuerId": 19,
              "issuerName": "./src/screen/RequestScreen.js",
              "profile": {
                "factory": 285,
                "building": 14,
                "dependencies": 16
              },
              "failed": false,
              "errors": 0,
              "warnings": 0,
              "reasons": [
                {
                  "moduleId": 19,
                  "moduleIdentifier": "/Users/Liferay/trampo/senna.js/node_modules/babel-loader/lib/index.js??ref--0!/Users/Liferay/trampo/senna.js/src/screen/RequestScreen.js",
                  "module": "./src/screen/RequestScreen.js",
                  "moduleName": "./src/screen/RequestScreen.js",
                  "type": "amd require",
                  "userRequest": "metal-ajax",
                  "loc": "1:0-387:2"
                }
              ],
              "usedExports": true,
              "providedExports": null,
              "optimizationBailout": [
                "ModuleConcatenation bailout: Module is not an ECMAScript module"
              ],
              "depth": 2,
              "source": "'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _metal = require('metal');\n\nvar _metalUri = require('metal-uri');\n\nvar _metalUri2 = _interopRequireDefault(_metalUri);\n\nvar _metalPromise = require('metal-promise');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar Ajax = function () {\n\tfunction Ajax() {\n\t\t_classCallCheck(this, Ajax);\n\t}\n\n\t_createClass(Ajax, null, [{\n\t\tkey: 'parseResponseHeaders',\n\n\n\t\t/**\n   * XmlHttpRequest's getAllResponseHeaders() method returns a string of\n   * response headers according to the format described on the spec:\n   * {@link http://www.w3.org/TR/XMLHttpRequest/#the-getallresponseheaders-method}.\n   * This method parses that string into a user-friendly name/value pair\n   * object.\n   * @param {string} allHeaders All headers as string.\n   * @return {!Array.<Object<string, string>>}\n   */\n\t\tvalue: function parseResponseHeaders(allHeaders) {\n\t\t\tvar headers = [];\n\t\t\tif (!allHeaders) {\n\t\t\t\treturn headers;\n\t\t\t}\n\t\t\tvar pairs = allHeaders.split('\\r\\n');\n\t\t\tfor (var i = 0; i < pairs.length; i++) {\n\t\t\t\tvar index = pairs[i].indexOf(': ');\n\t\t\t\tif (index > 0) {\n\t\t\t\t\tvar name = pairs[i].substring(0, index);\n\t\t\t\t\tvar value = pairs[i].substring(index + 2);\n\t\t\t\t\theaders.push({\n\t\t\t\t\t\tname: name,\n\t\t\t\t\t\tvalue: value\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn headers;\n\t\t}\n\n\t\t/**\n   * Requests the url using XMLHttpRequest.\n   * @param {!string} url\n   * @param {!string} method\n   * @param {?string} body\n   * @param {MultiMap=} opt_headers\n   * @param {MultiMap=} opt_params\n   * @param {number=} opt_timeout\n   * @param {boolean=} opt_sync\n   * @param {boolean=} opt_withCredentials\n   * @return {Promise} Deferred ajax request.\n   * @protected\n   */\n\n\t}, {\n\t\tkey: 'request',\n\t\tvalue: function request(url, method, body, opt_headers, opt_params, opt_timeout, opt_sync, opt_withCredentials) {\n\t\t\turl = url || '';\n\t\t\tmethod = method || 'GET';\n\n\t\t\tvar request = new XMLHttpRequest();\n\t\t\tvar previousReadyState = 0;\n\n\t\t\tvar promise = new _metalPromise.CancellablePromise(function (resolve, reject) {\n\t\t\t\trequest.onload = function () {\n\t\t\t\t\tif (request.aborted) {\n\t\t\t\t\t\trequest.onerror();\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tresolve(request);\n\t\t\t\t};\n\t\t\t\trequest.onreadystatechange = function () {\n\t\t\t\t\tif (previousReadyState && previousReadyState < 3 && 4 === request.readyState) {\n\t\t\t\t\t\trequest.terminatedPrematurely = true;\n\t\t\t\t\t}\n\t\t\t\t\tpreviousReadyState = request.readyState;\n\t\t\t\t};\n\t\t\t\trequest.onerror = function () {\n\t\t\t\t\tvar message = 'Request error';\n\t\t\t\t\tif (request.terminatedPrematurely) {\n\t\t\t\t\t\tmessage = 'Request terminated prematurely';\n\t\t\t\t\t}\n\t\t\t\t\tvar error = new Error(message);\n\t\t\t\t\terror.request = request;\n\t\t\t\t\treject(error);\n\t\t\t\t};\n\t\t\t}).thenCatch(function (reason) {\n\t\t\t\trequest.abort();\n\t\t\t\tthrow reason;\n\t\t\t}).thenAlways(function () {\n\t\t\t\tclearTimeout(timeout);\n\t\t\t});\n\n\t\t\turl = new _metalUri2.default(url);\n\n\t\t\tif (opt_params) {\n\t\t\t\turl.addParametersFromMultiMap(opt_params).toString();\n\t\t\t}\n\n\t\t\turl = url.toString();\n\n\t\t\trequest.open(method, url, !opt_sync);\n\n\t\t\tif (opt_withCredentials) {\n\t\t\t\trequest.withCredentials = true;\n\t\t\t}\n\n\t\t\tif (opt_headers) {\n\t\t\t\topt_headers.names().forEach(function (name) {\n\t\t\t\t\trequest.setRequestHeader(name, opt_headers.getAll(name).join(', '));\n\t\t\t\t});\n\t\t\t}\n\n\t\t\trequest.send((0, _metal.isDef)(body) ? body : null);\n\n\t\t\tif ((0, _metal.isDefAndNotNull)(opt_timeout)) {\n\t\t\t\tvar timeout = setTimeout(function () {\n\t\t\t\t\tpromise.cancel('Request timeout');\n\t\t\t\t}, opt_timeout);\n\t\t\t}\n\n\t\t\treturn promise;\n\t\t}\n\t}]);\n\n\treturn Ajax;\n}();\n\nexports.default = Ajax;"
            },
            {
              "id": 51,
              "identifier": "/Users/Liferay/trampo/senna.js/node_modules/babel-loader/lib/index.js??ref--0!/Users/Liferay/trampo/senna.js/src/errors/errors.js",
              "name": "./src/errors/errors.js",
              "index": 50,
              "index2": 45,
              "size": 1008,
              "cacheable": true,
              "built": true,
              "optional": false,
              "prefetched": false,
              "chunks": [
                0
              ],
              "assets": [],
              "issuer": "/Users/Liferay/trampo/senna.js/node_modules/babel-loader/lib/index.js??ref--0!/Users/Liferay/trampo/senna.js/src/screen/RequestScreen.js",
              "issuerId": 19,
              "issuerName": "./src/screen/RequestScreen.js",
              "profile": {
                "factory": 109,
                "building": 143
              },
              "failed": false,
              "errors": 0,
              "warnings": 0,
              "reasons": [
                {
                  "moduleId": 19,
                  "moduleIdentifier": "/Users/Liferay/trampo/senna.js/node_modules/babel-loader/lib/index.js??ref--0!/Users/Liferay/trampo/senna.js/src/screen/RequestScreen.js",
                  "module": "./src/screen/RequestScreen.js",
                  "moduleName": "./src/screen/RequestScreen.js",
                  "type": "amd require",
                  "userRequest": "../errors/errors",
                  "loc": "1:0-387:2"
                }
              ],
              "usedExports": true,
              "providedExports": null,
              "optimizationBailout": [
                "ModuleConcatenation bailout: Module is not an ECMAScript module"
              ],
              "depth": 2,
              "source": "define([\"exports\"], function (exports) {\n  'use strict';\n  /**\n   * Holds value error messages.\n   * @const\n   */\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n\n  function _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n      throw new TypeError(\"Cannot call a class as a function\");\n    }\n  }\n\n  var errors = function errors() {\n    _classCallCheck(this, errors);\n  };\n\n  /**\n   * Invalid status error message.\n   * @type {string}\n   * @static\n   */\n  errors.INVALID_STATUS = 'Invalid status code';\n  /**\n   * Request error message.\n   * @type {string}\n   * @static\n   */\n\n  errors.REQUEST_ERROR = 'Request error';\n  /**\n   * Request timeout error message.\n   * @type {string}\n   * @static\n   */\n\n  errors.REQUEST_TIMEOUT = 'Request timeout';\n  /**\n   * Request is blocked by CORS issue message.\n   * @type {string}\n   * @static\n   */\n\n  errors.REQUEST_PREMATURE_TERMINATION = 'Request terminated prematurely';\n  exports.default = errors;\n});"
            }
          ],
          "filteredModules": 0,
          "origins": [
            {
              "moduleId": 21,
              "module": "/Users/Liferay/trampo/senna.js/node_modules/babel-loader/lib/index.js??ref--0!/Users/Liferay/trampo/senna.js/src/senna.js",
              "moduleIdentifier": "/Users/Liferay/trampo/senna.js/node_modules/babel-loader/lib/index.js??ref--0!/Users/Liferay/trampo/senna.js/src/senna.js",
              "moduleName": "./src/senna.js",
              "loc": "",
              "name": "main",
              "reasons": []
            }
          ]
        }
      ],
      "modules": [
        {
          "id": 0,
          "identifier": "/Users/Liferay/trampo/senna.js/node_modules/metal/lib/metal.js",
          "name": "./node_modules/metal/lib/metal.js",
          "index": 5,
          "index2": 8,
          "size": 1266,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0
          ],
          "assets": [],
          "issuer": "/Users/Liferay/trampo/senna.js/node_modules/babel-loader/lib/index.js??ref--0!/Users/Liferay/trampo/senna.js/src/app/App.js",
          "issuerId": 13,
          "issuerName": "./src/app/App.js",
          "profile": {
            "factory": 459,
            "building": 8
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "reasons": [
            {
              "moduleId": 2,
              "moduleIdentifier": "/Users/Liferay/trampo/senna.js/node_modules/metal-promise/lib/promise/Promise.js",
              "module": "./node_modules/metal-promise/lib/promise/Promise.js",
              "moduleName": "./node_modules/metal-promise/lib/promise/Promise.js",
              "type": "cjs require",
              "userRequest": "metal",
              "loc": "18:13-29"
            },
            {
              "moduleId": 9,
              "moduleIdentifier": "/Users/Liferay/trampo/senna.js/node_modules/babel-loader/lib/index.js??ref--0!/Users/Liferay/trampo/senna.js/src/route/Route.js",
              "module": "./src/route/Route.js",
              "moduleName": "./src/route/Route.js",
              "type": "amd require",
              "userRequest": "metal",
              "loc": "1:0-129:2"
            },
            {
              "moduleId": 10,
              "moduleIdentifier": "/Users/Liferay/trampo/senna.js/node_modules/babel-loader/lib/index.js??ref--0!/Users/Liferay/trampo/senna.js/src/screen/Screen.js",
              "module": "./src/screen/Screen.js",
              "moduleName": "./src/screen/Screen.js",
              "type": "amd require",
              "userRequest": "metal",
              "loc": "1:0-264:2"
            },
            {
              "moduleId": 13,
              "moduleIdentifier": "/Users/Liferay/trampo/senna.js/node_modules/babel-loader/lib/index.js??ref--0!/Users/Liferay/trampo/senna.js/src/app/App.js",
              "module": "./src/app/App.js",
              "moduleName": "./src/app/App.js",
              "type": "amd require",
              "userRequest": "metal",
              "loc": "1:0-1185:2"
            },
            {
              "moduleId": 14,
              "moduleIdentifier": "/Users/Liferay/trampo/senna.js/node_modules/metal-events/lib/EventHandle.js",
              "module": "./node_modules/metal-events/lib/EventHandle.js",
              "moduleName": "./node_modules/metal-events/lib/EventHandle.js",
              "type": "cjs require",
              "userRequest": "metal",
              "loc": "9:13-29"
            },
            {
              "moduleId": 16,
              "moduleIdentifier": "/Users/Liferay/trampo/senna.js/node_modules/metal-dom/lib/features.js",
              "module": "./node_modules/metal-dom/lib/features.js",
              "moduleName": "./node_modules/metal-dom/lib/features.js",
              "type": "cjs require",
              "userRequest": "metal",
              "loc": "11:13-29"
            },
            {
              "moduleId": 17,
              "moduleIdentifier": "/Users/Liferay/trampo/senna.js/node_modules/babel-loader/lib/index.js??ref--0!/Users/Liferay/trampo/senna.js/src/surface/Surface.js",
              "module": "./src/surface/Surface.js",
              "moduleName": "./src/surface/Surface.js",
              "type": "amd require",
              "userRequest": "metal",
              "loc": "1:0-352:2"
            },
            {
              "moduleId": 18,
              "moduleIdentifier": "/Users/Liferay/trampo/senna.js/node_modules/babel-loader/lib/index.js??ref--0!/Users/Liferay/trampo/senna.js/src/screen/HtmlScreen.js",
              "module": "./src/screen/HtmlScreen.js",
              "moduleName": "./src/screen/HtmlScreen.js",
              "type": "amd require",
              "userRequest": "metal",
              "loc": "1:0-425:2"
            },
            {
              "moduleId": 19,
              "moduleIdentifier": "/Users/Liferay/trampo/senna.js/node_modules/babel-loader/lib/index.js??ref--0!/Users/Liferay/trampo/senna.js/src/screen/RequestScreen.js",
              "module": "./src/screen/RequestScreen.js",
              "moduleName": "./src/screen/RequestScreen.js",
              "type": "amd require",
              "userRequest": "metal",
              "loc": "1:0-387:2"
            },
            {
              "moduleId": 22,
              "moduleIdentifier": "/Users/Liferay/trampo/senna.js/node_modules/metal-uri/lib/Uri.js",
              "module": "./node_modules/metal-uri/lib/Uri.js",
              "moduleName": "./node_modules/metal-uri/lib/Uri.js",
              "type": "cjs require",
              "userRequest": "metal",
              "loc": "11:13-29"
            },
            {
              "moduleId": 29,
              "moduleIdentifier": "/Users/Liferay/trampo/senna.js/node_modules/metal-uri/lib/parse.js",
              "module": "./node_modules/metal-uri/lib/parse.js",
              "moduleName": "./node_modules/metal-uri/lib/parse.js",
              "type": "cjs require",
              "userRequest": "metal",
              "loc": "7:13-29"
            },
            {
              "moduleId": 31,
              "moduleIdentifier": "/Users/Liferay/trampo/senna.js/node_modules/metal-structs/lib/MultiMap.js",
              "module": "./node_modules/metal-structs/lib/MultiMap.js",
              "moduleName": "./node_modules/metal-structs/lib/MultiMap.js",
              "type": "cjs require",
              "userRequest": "metal",
              "loc": "7:13-29"
            },
            {
              "moduleId": 32,
              "moduleIdentifier": "/Users/Liferay/trampo/senna.js/node_modules/metal-structs/lib/TreeNode.js",
              "module": "./node_modules/metal-structs/lib/TreeNode.js",
              "moduleName": "./node_modules/metal-structs/lib/TreeNode.js",
              "type": "cjs require",
              "userRequest": "metal",
              "loc": "7:13-29"
            },
            {
              "moduleId": 36,
              "moduleIdentifier": "/Users/Liferay/trampo/senna.js/node_modules/babel-loader/lib/index.js??ref--0!/Users/Liferay/trampo/senna.js/src/app/AppDataAttributeHandler.js",
              "module": "./src/app/AppDataAttributeHandler.js",
              "moduleName": "./src/app/AppDataAttributeHandler.js",
              "type": "amd require",
              "userRequest": "metal",
              "loc": "1:0-300:2"
            },
            {
              "moduleId": 38,
              "moduleIdentifier": "/Users/Liferay/trampo/senna.js/node_modules/metal-events/lib/EventEmitter.js",
              "module": "./node_modules/metal-events/lib/EventEmitter.js",
              "moduleName": "./node_modules/metal-events/lib/EventEmitter.js",
              "type": "cjs require",
              "userRequest": "metal",
              "loc": "9:13-29"
            },
            {
              "moduleId": 39,
              "moduleIdentifier": "/Users/Liferay/trampo/senna.js/node_modules/metal-events/lib/EventEmitterProxy.js",
              "module": "./node_modules/metal-events/lib/EventEmitterProxy.js",
              "moduleName": "./node_modules/metal-events/lib/EventEmitterProxy.js",
              "type": "cjs require",
              "userRequest": "metal",
              "loc": "9:13-29"
            },
            {
              "moduleId": 40,
              "moduleIdentifier": "/Users/Liferay/trampo/senna.js/node_modules/metal-events/lib/EventHandler.js",
              "module": "./node_modules/metal-events/lib/EventHandler.js",
              "moduleName": "./node_modules/metal-events/lib/EventHandler.js",
              "type": "cjs require",
              "userRequest": "metal",
              "loc": "9:13-29"
            },
            {
              "moduleId": 42,
              "moduleIdentifier": "/Users/Liferay/trampo/senna.js/node_modules/metal-dom/lib/domNamed.js",
              "module": "./node_modules/metal-dom/lib/domNamed.js",
              "moduleName": "./node_modules/metal-dom/lib/domNamed.js",
              "type": "cjs require",
              "userRequest": "metal",
              "loc": "31:13-29"
            },
            {
              "moduleId": 43,
              "moduleIdentifier": "/Users/Liferay/trampo/senna.js/node_modules/metal-dom/lib/DomDelegatedEventHandle.js",
              "module": "./node_modules/metal-dom/lib/DomDelegatedEventHandle.js",
              "moduleName": "./node_modules/metal-dom/lib/DomDelegatedEventHandle.js",
              "type": "cjs require",
              "userRequest": "metal",
              "loc": "9:13-29"
            },
            {
              "moduleId": 45,
              "moduleIdentifier": "/Users/Liferay/trampo/senna.js/node_modules/metal-dom/lib/globalEval.js",
              "module": "./node_modules/metal-dom/lib/globalEval.js",
              "moduleName": "./node_modules/metal-dom/lib/globalEval.js",
              "type": "cjs require",
              "userRequest": "metal",
              "loc": "9:13-29"
            },
            {
              "moduleId": 46,
              "moduleIdentifier": "/Users/Liferay/trampo/senna.js/node_modules/metal-dom/lib/globalEvalStyles.js",
              "module": "./node_modules/metal-dom/lib/globalEvalStyles.js",
              "moduleName": "./node_modules/metal-dom/lib/globalEvalStyles.js",
              "type": "cjs require",
              "userRequest": "metal",
              "loc": "9:13-29"
            },
            {
              "moduleId": 48,
              "moduleIdentifier": "/Users/Liferay/trampo/senna.js/node_modules/metal-path-parser/lib/pathParser.js",
              "module": "./node_modules/metal-path-parser/lib/pathParser.js",
              "moduleName": "./node_modules/metal-path-parser/lib/pathParser.js",
              "type": "cjs require",
              "userRequest": "metal",
              "loc": "10:13-29"
            },
            {
              "moduleId": 49,
              "moduleIdentifier": "/Users/Liferay/trampo/senna.js/node_modules/babel-loader/lib/index.js??ref--0!/Users/Liferay/trampo/senna.js/src/cacheable/Cacheable.js",
              "module": "./src/cacheable/Cacheable.js",
              "moduleName": "./src/cacheable/Cacheable.js",
              "type": "amd require",
              "userRequest": "metal",
              "loc": "1:0-155:2"
            },
            {
              "moduleId": 50,
              "moduleIdentifier": "/Users/Liferay/trampo/senna.js/node_modules/metal-ajax/lib/Ajax.js",
              "module": "./node_modules/metal-ajax/lib/Ajax.js",
              "moduleName": "./node_modules/metal-ajax/lib/Ajax.js",
              "type": "cjs require",
              "userRequest": "metal",
              "loc": "9:13-29"
            }
          ],
          "usedExports": true,
          "providedExports": null,
          "optimizationBailout": [
            "ModuleConcatenation bailout: Module is not an ECMAScript module"
          ],
          "depth": 2,
          "source": "'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.string = exports.object = exports.Disposable = exports.async = exports.array = undefined;\n\nvar _core = require('./core');\n\nObject.keys(_core).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _core[key];\n    }\n  });\n});\n\nvar _core2 = _interopRequireDefault(_core);\n\nvar _array = require('./array/array');\n\nvar _array2 = _interopRequireDefault(_array);\n\nvar _async = require('./async/async');\n\nvar _async2 = _interopRequireDefault(_async);\n\nvar _Disposable = require('./disposable/Disposable');\n\nvar _Disposable2 = _interopRequireDefault(_Disposable);\n\nvar _object = require('./object/object');\n\nvar _object2 = _interopRequireDefault(_object);\n\nvar _string = require('./string/string');\n\nvar _string2 = _interopRequireDefault(_string);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.array = _array2.default;\nexports.async = _async2.default;\nexports.Disposable = _Disposable2.default;\nexports.object = _object2.default;\nexports.string = _string2.default;\nexports.default = _core2.default;"
        },
        {
          "id": 1,
          "identifier": "/Users/Liferay/trampo/senna.js/node_modules/babel-loader/lib/index.js??ref--0!/Users/Liferay/trampo/senna.js/src/globals/globals.js",
          "name": "./src/globals/globals.js",
          "index": 2,
          "index2": 0,
          "size": 345,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0
          ],
          "assets": [],
          "issuer": "/Users/Liferay/trampo/senna.js/node_modules/babel-loader/lib/index.js??ref--0!/Users/Liferay/trampo/senna.js/src/utils/utils.js",
          "issuerId": 5,
          "issuerName": "./src/utils/utils.js",
          "profile": {
            "factory": 617,
            "building": 76
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "reasons": [
            {
              "moduleId": 5,
              "moduleIdentifier": "/Users/Liferay/trampo/senna.js/node_modules/babel-loader/lib/index.js??ref--0!/Users/Liferay/trampo/senna.js/src/utils/utils.js",
              "module": "./src/utils/utils.js",
              "moduleName": "./src/utils/utils.js",
              "type": "amd require",
              "userRequest": "../globals/globals",
              "loc": "1:0-148:2"
            },
            {
              "moduleId": 13,
              "moduleIdentifier": "/Users/Liferay/trampo/senna.js/node_modules/babel-loader/lib/index.js??ref--0!/Users/Liferay/trampo/senna.js/src/app/App.js",
              "module": "./src/app/App.js",
              "moduleName": "./src/app/App.js",
              "type": "amd require",
              "userRequest": "../globals/globals",
              "loc": "1:0-1185:2"
            },
            {
              "moduleId": 17,
              "moduleIdentifier": "/Users/Liferay/trampo/senna.js/node_modules/babel-loader/lib/index.js??ref--0!/Users/Liferay/trampo/senna.js/src/surface/Surface.js",
              "module": "./src/surface/Surface.js",
              "moduleName": "./src/surface/Surface.js",
              "type": "amd require",
              "userRequest": "../globals/globals",
              "loc": "1:0-352:2"
            },
            {
              "moduleId": 18,
              "moduleIdentifier": "/Users/Liferay/trampo/senna.js/node_modules/babel-loader/lib/index.js??ref--0!/Users/Liferay/trampo/senna.js/src/screen/HtmlScreen.js",
              "module": "./src/screen/HtmlScreen.js",
              "moduleName": "./src/screen/HtmlScreen.js",
              "type": "amd require",
              "userRequest": "../globals/globals",
              "loc": "1:0-425:2"
            },
            {
              "moduleId": 19,
              "moduleIdentifier": "/Users/Liferay/trampo/senna.js/node_modules/babel-loader/lib/index.js??ref--0!/Users/Liferay/trampo/senna.js/src/screen/RequestScreen.js",
              "module": "./src/screen/RequestScreen.js",
              "moduleName": "./src/screen/RequestScreen.js",
              "type": "amd require",
              "userRequest": "../globals/globals",
              "loc": "1:0-387:2"
            },
            {
              "moduleId": 35,
              "moduleIdentifier": "/Users/Liferay/trampo/senna.js/node_modules/babel-loader/lib/index.js??ref--0!/Users/Liferay/trampo/senna.js/src/app/dataAttributeHandler.js",
              "module": "./src/app/dataAttributeHandler.js",
              "moduleName": "./src/app/dataAttributeHandler.js",
              "type": "amd require",
              "userRequest": "../globals/globals",
              "loc": "1:0-30:2"
            },
            {
              "moduleId": 36,
              "moduleIdentifier": "/Users/Liferay/trampo/senna.js/node_modules/babel-loader/lib/index.js??ref--0!/Users/Liferay/trampo/senna.js/src/app/AppDataAttributeHandler.js",
              "module": "./src/app/AppDataAttributeHandler.js",
              "moduleName": "./src/app/AppDataAttributeHandler.js",
              "type": "amd require",
              "userRequest": "../globals/globals",
              "loc": "1:0-300:2"
            }
          ],
          "usedExports": true,
          "providedExports": null,
          "optimizationBailout": [
            "ModuleConcatenation bailout: Module is not an ECMAScript module"
          ],
          "depth": 2,
          "source": "define([\"exports\"], function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  var globals = globals || {};\n\n  if (typeof window !== 'undefined') {\n    globals.window = window;\n  }\n\n  if (typeof document !== 'undefined') {\n    globals.document = document;\n  }\n\n  exports.default = globals;\n});"
        },
        {
          "id": 2,
          "identifier": "/Users/Liferay/trampo/senna.js/node_modules/metal-promise/lib/promise/Promise.js",
          "name": "./node_modules/metal-promise/lib/promise/Promise.js",
          "index": 29,
          "index2": 25,
          "size": 32626,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0
          ],
          "assets": [],
          "issuer": "/Users/Liferay/trampo/senna.js/node_modules/babel-loader/lib/index.js??ref--0!/Users/Liferay/trampo/senna.js/src/app/App.js",
          "issuerId": 13,
          "issuerName": "./src/app/App.js",
          "profile": {
            "factory": 461,
            "building": 26,
            "dependencies": 5
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "reasons": [
            {
              "moduleId": 10,
              "moduleIdentifier": "/Users/Liferay/trampo/senna.js/node_modules/babel-loader/lib/index.js??ref--0!/Users/Liferay/trampo/senna.js/src/screen/Screen.js",
              "module": "./src/screen/Screen.js",
              "moduleName": "./src/screen/Screen.js",
              "type": "amd require",
              "userRequest": "metal-promise",
              "loc": "1:0-264:2"
            },
            {
              "moduleId": 13,
              "moduleIdentifier": "/Users/Liferay/trampo/senna.js/node_modules/babel-loader/lib/index.js??ref--0!/Users/Liferay/trampo/senna.js/src/app/App.js",
              "module": "./src/app/App.js",
              "moduleName": "./src/app/App.js",
              "type": "amd require",
              "userRequest": "metal-promise",
              "loc": "1:0-1185:2"
            },
            {
              "moduleId": 17,
              "moduleIdentifier": "/Users/Liferay/trampo/senna.js/node_modules/babel-loader/lib/index.js??ref--0!/Users/Liferay/trampo/senna.js/src/surface/Surface.js",
              "module": "./src/surface/Surface.js",
              "moduleName": "./src/surface/Surface.js",
              "type": "amd require",
              "userRequest": "metal-promise",
              "loc": "1:0-352:2"
            },
            {
              "moduleId": 18,
              "moduleIdentifier": "/Users/Liferay/trampo/senna.js/node_modules/babel-loader/lib/index.js??ref--0!/Users/Liferay/trampo/senna.js/src/screen/HtmlScreen.js",
              "module": "./src/screen/HtmlScreen.js",
              "moduleName": "./src/screen/HtmlScreen.js",
              "type": "amd require",
              "userRequest": "metal-promise",
              "loc": "1:0-425:2"
            },
            {
              "moduleId": 19,
              "moduleIdentifier": "/Users/Liferay/trampo/senna.js/node_modules/babel-loader/lib/index.js??ref--0!/Users/Liferay/trampo/senna.js/src/screen/RequestScreen.js",
              "module": "./src/screen/RequestScreen.js",
              "moduleName": "./src/screen/RequestScreen.js",
              "type": "amd require",
              "userRequest": "metal-promise",
              "loc": "1:0-387:2"
            },
            {
              "moduleId": 50,
              "moduleIdentifier": "/Users/Liferay/trampo/senna.js/node_modules/metal-ajax/lib/Ajax.js",
              "module": "./node_modules/metal-ajax/lib/Ajax.js",
              "moduleName": "./node_modules/metal-ajax/lib/Ajax.js",
              "type": "cjs require",
              "userRequest": "metal-promise",
              "loc": "15:20-44"
            }
          ],
          "usedExports": true,
          "providedExports": null,
          "optimizationBailout": [
            "ModuleConcatenation bailout: Module is not an ECMAScript module"
          ],
          "depth": 2,
          "source": "/*!\n * Promises polyfill from Google's Closure Library.\n *\n *      Copyright 2013 The Closure Library Authors. All Rights Reserved.\n *\n * NOTE(eduardo): Promise support is not ready on all supported browsers,\n * therefore metal-promise is temporarily using Google's promises as polyfill.\n * It supports cancellable promises and has clean and fast implementation.\n */\n\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.CancellablePromise = undefined;\n\nvar _metal = require('metal');\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n/**\n * Provides a more strict interface for Thenables in terms of\n * http://promisesaplus.com for interop with {@see CancellablePromise}.\n *\n * @interface\n * @extends {IThenable.<TYPE>}\n * @template TYPE\n */\nvar Thenable = function Thenable() {};\n\n/**\n * Adds callbacks that will operate on the result of the Thenable, returning a\n * new child Promise.\n *\n * If the Thenable is fulfilled, the {@code onFulfilled} callback will be\n * invoked with the fulfillment value as argument, and the child Promise will\n * be fulfilled with the return value of the callback. If the callback throws\n * an exception, the child Promise will be rejected with the thrown value\n * instead.\n *\n * If the Thenable is rejected, the {@code onRejected} callback will be invoked\n * with the rejection reason as argument, and the child Promise will be rejected\n * with the return value of the callback or thrown value.\n *\n * @param {?(function(this:THIS, TYPE):\n *             (RESULT|IThenable.<RESULT>|Thenable))=} opt_onFulfilled A\n *     function that will be invoked with the fulfillment value if the Promise\n *     is fullfilled.\n * @param {?(function(*): *)=} opt_onRejected A function that will be invoked\n *     with the rejection reason if the Promise is rejected.\n * @param {THIS=} opt_context An optional context object that will be the\n *     execution context for the callbacks. By default, functions are executed\n *     with the default this.\n * @return {!CancellablePromise.<RESULT>} A new Promise that will receive the\n *     result of the fulfillment or rejection callback.\n * @template RESULT,THIS\n */\nThenable.prototype.then = function () {};\n\n/**\n * An expando property to indicate that an object implements\n * {@code Thenable}.\n *\n * {@see addImplementation}.\n *\n * @const\n */\nThenable.IMPLEMENTED_BY_PROP = '$goog_Thenable';\n\n/**\n * Marks a given class (constructor) as an implementation of Thenable, so\n * that we can query that fact at runtime. The class must have already\n * implemented the interface.\n * Exports a 'then' method on the constructor prototype, so that the objects\n * also implement the extern {@see Thenable} interface for interop with\n * other Promise implementations.\n * @param {function(new:Thenable,...[?])} ctor The class constructor. The\n *     corresponding class must have already implemented the interface.\n */\nThenable.addImplementation = function (ctor) {\n  ctor.prototype.then = ctor.prototype.then;\n  ctor.prototype.$goog_Thenable = true;\n};\n\n/**\n * @param {*} object\n * @return {boolean} Whether a given instance implements {@code Thenable}.\n *     The class/superclass of the instance must call {@code addImplementation}.\n */\nThenable.isImplementedBy = function (object) {\n  if (!object) {\n    return false;\n  }\n  try {\n    return !!object.$goog_Thenable;\n  } catch (e) {\n    // Property access seems to be forbidden.\n    return false;\n  }\n};\n\n/**\n * Like bind(), except that a 'this object' is not required. Useful when the\n * target function is already bound.\n *\n * Usage:\n * var g = partial(f, arg1, arg2);\n * g(arg3, arg4);\n *\n * @param {Function} fn A function to partially apply.\n * @param {...*} var_args Additional arguments that are partially applied to fn.\n * @return {!Function} A partially-applied form of the function bind() was\n *     invoked as a method of.\n */\nvar partial = function partial(fn) {\n  var args = Array.prototype.slice.call(arguments, 1);\n  return function () {\n    // Clone the array (with slice()) and append additional arguments\n    // to the existing arguments.\n    var newArgs = args.slice();\n    newArgs.push.apply(newArgs, arguments);\n    return fn.apply(this, newArgs);\n  };\n};\n\n/**\n * Promises provide a result that may be resolved asynchronously. A Promise may\n * be resolved by being fulfilled or rejected with a value, which will be known\n * as the fulfillment value or the rejection reason. Whether fulfilled or\n * rejected, the Promise result is immutable once it is set.\n *\n * Promises may represent results of any type, including undefined. Rejection\n * reasons are typically Errors, but may also be of any type. Closure Promises\n * allow for optional type annotations that enforce that fulfillment values are\n * of the appropriate types at compile time.\n *\n * The result of a Promise is accessible by calling {@code then} and registering\n * {@code onFulfilled} and {@code onRejected} callbacks. Once the Promise\n * resolves, the relevant callbacks are invoked with the fulfillment value or\n * rejection reason as argument. Callbacks are always invoked in the order they\n * were registered, even when additional {@code then} calls are made from inside\n * another callback. A callback is always run asynchronously sometime after the\n * scope containing the registering {@code then} invocation has returned.\n *\n * If a Promise is resolved with another Promise, the first Promise will block\n * until the second is resolved, and then assumes the same result as the second\n * Promise. This allows Promises to depend on the results of other Promises,\n * linking together multiple asynchronous operations.\n *\n * This implementation is compatible with the Promises/A+ specification and\n * passes that specification's conformance test suite. A Closure Promise may be\n * resolved with a Promise instance (or sufficiently compatible Promise-like\n * object) created by other Promise implementations. From the specification,\n * Promise-like objects are known as \"Thenables\".\n *\n * @see http://promisesaplus.com/\n *\n * @param {function(\n *             this:RESOLVER_CONTEXT,\n *             function((TYPE|IThenable.<TYPE>|Thenable)),\n *             function(*)): void} resolver\n *     Initialization function that is invoked immediately with {@code resolve}\n *     and {@code reject} functions as arguments. The Promise is resolved or\n *     rejected with the first argument passed to either function.\n * @param {RESOLVER_CONTEXT=} opt_context An optional context for executing the\n *     resolver function. If unspecified, the resolver function will be executed\n *     in the default scope.\n * @constructor\n * @struct\n * @final\n * @implements {Thenable.<TYPE>}\n * @template TYPE,RESOLVER_CONTEXT\n */\nvar CancellablePromise = function CancellablePromise(resolver, opt_context) {\n  /**\n   * The internal state of this Promise. Either PENDING, FULFILLED, REJECTED, or\n   * BLOCKED.\n   * @private {CancellablePromise.State_}\n   */\n  this.state_ = CancellablePromise.State_.PENDING;\n\n  /**\n   * The resolved result of the Promise. Immutable once set with either a\n   * fulfillment value or rejection reason.\n   * @private {*}\n   */\n  this.result_ = undefined;\n\n  /**\n   * For Promises created by calling {@code then()}, the originating parent.\n   * @private {CancellablePromise}\n   */\n  this.parent_ = null;\n\n  /**\n   * The list of {@code onFulfilled} and {@code onRejected} callbacks added to\n   * this Promise by calls to {@code then()}.\n   * @private {Array.<CancellablePromise.CallbackEntry_>}\n   */\n  this.callbackEntries_ = null;\n\n  /**\n   * Whether the Promise is in the queue of Promises to execute.\n   * @private {boolean}\n   */\n  this.executing_ = false;\n\n  if (CancellablePromise.UNHANDLED_REJECTION_DELAY > 0) {\n    /**\n     * A timeout ID used when the {@code UNHANDLED_REJECTION_DELAY} is greater\n     * than 0 milliseconds. The ID is set when the Promise is rejected, and\n     * cleared only if an {@code onRejected} callback is invoked for the\n     * Promise (or one of its descendants) before the delay is exceeded.\n     *\n     * If the rejection is not handled before the timeout completes, the\n     * rejection reason is passed to the unhandled rejection handler.\n     * @private {number}\n     */\n    this.unhandledRejectionId_ = 0;\n  } else if (CancellablePromise.UNHANDLED_REJECTION_DELAY === 0) {\n    /**\n     * When the {@code UNHANDLED_REJECTION_DELAY} is set to 0 milliseconds, a\n     * boolean that is set if the Promise is rejected, and reset to false if an\n     * {@code onRejected} callback is invoked for the Promise (or one of its\n     * descendants). If the rejection is not handled before the next timestep,\n     * the rejection reason is passed to the unhandled rejection handler.\n     * @private {boolean}\n     */\n    this.hadUnhandledRejection_ = false;\n  }\n\n  try {\n    var self = this;\n    resolver.call(opt_context, function (value) {\n      self.resolve_(CancellablePromise.State_.FULFILLED, value);\n    }, function (reason) {\n      self.resolve_(CancellablePromise.State_.REJECTED, reason);\n    });\n  } catch (e) {\n    this.resolve_(CancellablePromise.State_.REJECTED, e);\n  }\n};\n\n/**\n * The delay in milliseconds before a rejected Promise's reason is passed to\n * the rejection handler. By default, the rejection handler rethrows the\n * rejection reason so that it appears in the developer console or\n * {@code window.onerror} handler.\n * Rejections are rethrown as quickly as possible by default. A negative value\n * disables rejection handling entirely.\n * @type {number}\n */\nCancellablePromise.UNHANDLED_REJECTION_DELAY = 0;\n\n/**\n * The possible internal states for a Promise. These states are not directly\n * observable to external callers.\n * @enum {number}\n * @private\n */\nCancellablePromise.State_ = {\n  /** The Promise is waiting for resolution. */\n  PENDING: 0,\n\n  /** The Promise is blocked waiting for the result of another Thenable. */\n  BLOCKED: 1,\n\n  /** The Promise has been resolved with a fulfillment value. */\n  FULFILLED: 2,\n\n  /** The Promise has been resolved with a rejection reason. */\n  REJECTED: 3\n};\n\n/**\n * Typedef for entries in the callback chain. Each call to {@code then},\n * {@code thenCatch}, or {@code thenAlways} creates an entry containing the\n * functions that may be invoked once the Promise is resolved.\n *\n * @typedef {{\n *   child: CancellablePromise,\n *   onFulfilled: function(*),\n *   onRejected: function(*)\n * }}\n * @private\n */\nCancellablePromise.CallbackEntry_ = null;\n\n/**\n * @param {(TYPE|Thenable.<TYPE>|Thenable)=} opt_value\n * @return {!CancellablePromise.<TYPE>} A new Promise that is immediately resolved\n *     with the given value.\n * @template TYPE\n */\nCancellablePromise.resolve = function (opt_value) {\n  return new CancellablePromise(function (resolve) {\n    resolve(opt_value);\n  });\n};\n\n/**\n * @param {*=} opt_reason\n * @return {!CancellablePromise} A new Promise that is immediately rejected with the\n *     given reason.\n */\nCancellablePromise.reject = function (opt_reason) {\n  return new CancellablePromise(function (resolve, reject) {\n    reject(opt_reason);\n  });\n};\n\n/**\n * @param {!Array.<!(Thenable.<TYPE>|Thenable)>} promises\n * @return {!CancellablePromise.<TYPE>} A Promise that receives the result of the\n *     first Promise (or Promise-like) input to complete.\n * @template TYPE\n */\nCancellablePromise.race = function (promises) {\n  return new CancellablePromise(function (resolve, reject) {\n    if (!promises.length) {\n      resolve(undefined);\n    }\n    for (var i = 0, promise; promise = promises[i]; i++) {\n      promise.then(resolve, reject);\n    }\n  });\n};\n\n/**\n * @param {!Array.<!(Thenable.<TYPE>|Thenable)>} promises\n * @return {!CancellablePromise.<!Array.<TYPE>>} A Promise that receives a list of\n *     every fulfilled value once every input Promise (or Promise-like) is\n *     successfully fulfilled, or is rejected by the first rejection result.\n * @template TYPE\n */\nCancellablePromise.all = function (promises) {\n  return new CancellablePromise(function (resolve, reject) {\n    var toFulfill = promises.length;\n    var values = [];\n\n    if (!toFulfill) {\n      resolve(values);\n      return;\n    }\n\n    var onFulfill = function onFulfill(index, value) {\n      toFulfill--;\n      values[index] = value;\n      if (toFulfill === 0) {\n        resolve(values);\n      }\n    };\n\n    var onReject = function onReject(reason) {\n      reject(reason);\n    };\n\n    for (var i = 0, promise; promise = promises[i]; i++) {\n      promise.then(partial(onFulfill, i), onReject);\n    }\n  });\n};\n\n/**\n * @param {!Array.<!(Thenable.<TYPE>|Thenable)>} promises\n * @return {!CancellablePromise.<TYPE>} A Promise that receives the value of\n *     the first input to be fulfilled, or is rejected with a list of every\n *     rejection reason if all inputs are rejected.\n * @template TYPE\n */\nCancellablePromise.firstFulfilled = function (promises) {\n  return new CancellablePromise(function (resolve, reject) {\n    var toReject = promises.length;\n    var reasons = [];\n\n    if (!toReject) {\n      resolve(undefined);\n      return;\n    }\n\n    var onFulfill = function onFulfill(value) {\n      resolve(value);\n    };\n\n    var onReject = function onReject(index, reason) {\n      toReject--;\n      reasons[index] = reason;\n      if (toReject === 0) {\n        reject(reasons);\n      }\n    };\n\n    for (var i = 0, promise; promise = promises[i]; i++) {\n      promise.then(onFulfill, partial(onReject, i));\n    }\n  });\n};\n\n/**\n * Adds callbacks that will operate on the result of the Promise, returning a\n * new child Promise.\n *\n * If the Promise is fulfilled, the {@code onFulfilled} callback will be invoked\n * with the fulfillment value as argument, and the child Promise will be\n * fulfilled with the return value of the callback. If the callback throws an\n * exception, the child Promise will be rejected with the thrown value instead.\n *\n * If the Promise is rejected, the {@code onRejected} callback will be invoked\n * with the rejection reason as argument, and the child Promise will be rejected\n * with the return value (or thrown value) of the callback.\n *\n * @override\n */\nCancellablePromise.prototype.then = function (opt_onFulfilled, opt_onRejected, opt_context) {\n  return this.addChildPromise_((0, _metal.isFunction)(opt_onFulfilled) ? opt_onFulfilled : null, (0, _metal.isFunction)(opt_onRejected) ? opt_onRejected : null, opt_context);\n};\nThenable.addImplementation(CancellablePromise);\n\n/**\n * Adds a callback that will be invoked whether the Promise is fulfilled or\n * rejected. The callback receives no argument, and no new child Promise is\n * created. This is useful for ensuring that cleanup takes place after certain\n * asynchronous operations. Callbacks added with {@code thenAlways} will be\n * executed in the same order with other calls to {@code then},\n * {@code thenAlways}, or {@code thenCatch}.\n *\n * Since it does not produce a new child Promise, cancellation propagation is\n * not prevented by adding callbacks with {@code thenAlways}. A Promise that has\n * a cleanup handler added with {@code thenAlways} will be canceled if all of\n * its children created by {@code then} (or {@code thenCatch}) are canceled.\n *\n * @param {function(this:THIS): void} onResolved A function that will be invoked\n *     when the Promise is resolved.\n * @param {THIS=} opt_context An optional context object that will be the\n *     execution context for the callbacks. By default, functions are executed\n *     in the global scope.\n * @return {!CancellablePromise.<TYPE>} This Promise, for chaining additional calls.\n * @template THIS\n */\nCancellablePromise.prototype.thenAlways = function (onResolved, opt_context) {\n  var callback = function callback() {\n    try {\n      // Ensure that no arguments are passed to onResolved.\n      onResolved.call(opt_context);\n    } catch (err) {\n      CancellablePromise.handleRejection_.call(null, err);\n    }\n  };\n\n  this.addCallbackEntry_({\n    child: null,\n    onRejected: callback,\n    onFulfilled: callback\n  });\n  return this;\n};\n\n/**\n * Adds a callback that will be invoked only if the Promise is rejected. This\n * is equivalent to {@code then(null, onRejected)}.\n *\n * @param {!function(this:THIS, *): *} onRejected A function that will be\n *     invoked with the rejection reason if the Promise is rejected.\n * @param {THIS=} opt_context An optional context object that will be the\n *     execution context for the callbacks. By default, functions are executed\n *     in the global scope.\n * @return {!CancellablePromise} A new Promise that will receive the result of the\n *     callback.\n * @template THIS\n */\nCancellablePromise.prototype.thenCatch = function (onRejected, opt_context) {\n  return this.addChildPromise_(null, onRejected, opt_context);\n};\n\n/**\n * Alias of {@link CancellablePromise.prototype.thenCatch}\n */\nCancellablePromise.prototype.catch = CancellablePromise.prototype.thenCatch;\n\n/**\n * Cancels the Promise if it is still pending by rejecting it with a cancel\n * Error. No action is performed if the Promise is already resolved.\n *\n * All child Promises of the canceled Promise will be rejected with the same\n * cancel error, as with normal Promise rejection. If the Promise to be canceled\n * is the only child of a pending Promise, the parent Promise will also be\n * canceled. Cancellation may propagate upward through multiple generations.\n *\n * @param {string=} opt_message An optional debugging message for describing the\n *     cancellation reason.\n */\nCancellablePromise.prototype.cancel = function (opt_message) {\n  if (this.state_ === CancellablePromise.State_.PENDING) {\n    _metal.async.run(function () {\n      var err = new CancellablePromise.CancellationError(opt_message);\n      err.IS_CANCELLATION_ERROR = true;\n      this.cancelInternal_(err);\n    }, this);\n  }\n};\n\n/**\n * Cancels this Promise with the given error.\n *\n * @param {!Error} err The cancellation error.\n * @private\n */\nCancellablePromise.prototype.cancelInternal_ = function (err) {\n  if (this.state_ === CancellablePromise.State_.PENDING) {\n    if (this.parent_) {\n      // Cancel the Promise and remove it from the parent's child list.\n      this.parent_.cancelChild_(this, err);\n    } else {\n      this.resolve_(CancellablePromise.State_.REJECTED, err);\n    }\n  }\n};\n\n/**\n * Cancels a child Promise from the list of callback entries. If the Promise has\n * not already been resolved, reject it with a cancel error. If there are no\n * other children in the list of callback entries, propagate the cancellation\n * by canceling this Promise as well.\n *\n * @param {!CancellablePromise} childPromise The Promise to cancel.\n * @param {!Error} err The cancel error to use for rejecting the Promise.\n * @private\n */\nCancellablePromise.prototype.cancelChild_ = function (childPromise, err) {\n  if (!this.callbackEntries_) {\n    return;\n  }\n  var childCount = 0;\n  var childIndex = -1;\n\n  // Find the callback entry for the childPromise, and count whether there are\n  // additional child Promises.\n  for (var i = 0, entry; entry = this.callbackEntries_[i]; i++) {\n    var child = entry.child;\n    if (child) {\n      childCount++;\n      if (child === childPromise) {\n        childIndex = i;\n      }\n      if (childIndex >= 0 && childCount > 1) {\n        break;\n      }\n    }\n  }\n\n  // If the child Promise was the only child, cancel this Promise as well.\n  // Otherwise, reject only the child Promise with the cancel error.\n  if (childIndex >= 0) {\n    if (this.state_ === CancellablePromise.State_.PENDING && childCount === 1) {\n      this.cancelInternal_(err);\n    } else {\n      var callbackEntry = this.callbackEntries_.splice(childIndex, 1)[0];\n      this.executeCallback_(callbackEntry, CancellablePromise.State_.REJECTED, err);\n    }\n  }\n};\n\n/**\n * Adds a callback entry to the current Promise, and schedules callback\n * execution if the Promise has already been resolved.\n *\n * @param {CancellablePromise.CallbackEntry_} callbackEntry Record containing\n *     {@code onFulfilled} and {@code onRejected} callbacks to execute after\n *     the Promise is resolved.\n * @private\n */\nCancellablePromise.prototype.addCallbackEntry_ = function (callbackEntry) {\n  if ((!this.callbackEntries_ || !this.callbackEntries_.length) && (this.state_ === CancellablePromise.State_.FULFILLED || this.state_ === CancellablePromise.State_.REJECTED)) {\n    this.scheduleCallbacks_();\n  }\n  if (!this.callbackEntries_) {\n    this.callbackEntries_ = [];\n  }\n  this.callbackEntries_.push(callbackEntry);\n};\n\n/**\n * Creates a child Promise and adds it to the callback entry list. The result of\n * the child Promise is determined by the state of the parent Promise and the\n * result of the {@code onFulfilled} or {@code onRejected} callbacks as\n * specified in the Promise resolution procedure.\n *\n * @see http://promisesaplus.com/#the__method\n *\n * @param {?function(this:THIS, TYPE):\n *          (RESULT|CancellablePromise.<RESULT>|Thenable)} onFulfilled A callback that\n *     will be invoked if the Promise is fullfilled, or null.\n * @param {?function(this:THIS, *): *} onRejected A callback that will be\n *     invoked if the Promise is rejected, or null.\n * @param {THIS=} opt_context An optional execution context for the callbacks.\n *     in the default calling context.\n * @return {!CancellablePromise} The child Promise.\n * @template RESULT,THIS\n * @private\n */\nCancellablePromise.prototype.addChildPromise_ = function (onFulfilled, onRejected, opt_context) {\n\n  var callbackEntry = {\n    child: null,\n    onFulfilled: null,\n    onRejected: null\n  };\n\n  callbackEntry.child = new CancellablePromise(function (resolve, reject) {\n    // Invoke onFulfilled, or resolve with the parent's value if absent.\n    callbackEntry.onFulfilled = onFulfilled ? function (value) {\n      try {\n        var result = onFulfilled.call(opt_context, value);\n        resolve(result);\n      } catch (err) {\n        reject(err);\n      }\n    } : resolve;\n\n    // Invoke onRejected, or reject with the parent's reason if absent.\n    callbackEntry.onRejected = onRejected ? function (reason) {\n      try {\n        var result = onRejected.call(opt_context, reason);\n        if (!(0, _metal.isDef)(result) && reason.IS_CANCELLATION_ERROR) {\n          // Propagate cancellation to children if no other result is returned.\n          reject(reason);\n        } else {\n          resolve(result);\n        }\n      } catch (err) {\n        reject(err);\n      }\n    } : reject;\n  });\n\n  callbackEntry.child.parent_ = this;\n  this.addCallbackEntry_(\n  /** @type {CancellablePromise.CallbackEntry_} */callbackEntry);\n  return callbackEntry.child;\n};\n\n/**\n * Unblocks the Promise and fulfills it with the given value.\n *\n * @param {TYPE} value\n * @private\n */\nCancellablePromise.prototype.unblockAndFulfill_ = function (value) {\n  if (this.state_ !== CancellablePromise.State_.BLOCKED) {\n    throw new Error('CancellablePromise is not blocked.');\n  }\n  this.state_ = CancellablePromise.State_.PENDING;\n  this.resolve_(CancellablePromise.State_.FULFILLED, value);\n};\n\n/**\n * Unblocks the Promise and rejects it with the given rejection reason.\n *\n * @param {*} reason\n * @private\n */\nCancellablePromise.prototype.unblockAndReject_ = function (reason) {\n  if (this.state_ !== CancellablePromise.State_.BLOCKED) {\n    throw new Error('CancellablePromise is not blocked.');\n  }\n  this.state_ = CancellablePromise.State_.PENDING;\n  this.resolve_(CancellablePromise.State_.REJECTED, reason);\n};\n\n/**\n * Attempts to resolve a Promise with a given resolution state and value. This\n * is a no-op if the given Promise has already been resolved.\n *\n * If the given result is a Thenable (such as another Promise), the Promise will\n * be resolved with the same state and result as the Thenable once it is itself\n * resolved.\n *\n * If the given result is not a Thenable, the Promise will be fulfilled or\n * rejected with that result based on the given state.\n *\n * @see http://promisesaplus.com/#the_promise_resolution_procedure\n *\n * @param {CancellablePromise.State_} state\n * @param {*} x The result to apply to the Promise.\n * @private\n */\nCancellablePromise.prototype.resolve_ = function (state, x) {\n  if (this.state_ !== CancellablePromise.State_.PENDING) {\n    return;\n  }\n\n  if (this === x) {\n    state = CancellablePromise.State_.REJECTED;\n    x = new TypeError('CancellablePromise cannot resolve to itself');\n  } else if (Thenable.isImplementedBy(x)) {\n    x = /** @type {!Thenable} */x;\n    this.state_ = CancellablePromise.State_.BLOCKED;\n    x.then(this.unblockAndFulfill_, this.unblockAndReject_, this);\n    return;\n  } else if ((0, _metal.isObject)(x)) {\n    try {\n      var then = x.then;\n      if ((0, _metal.isFunction)(then)) {\n        this.tryThen_(x, then);\n        return;\n      }\n    } catch (e) {\n      state = CancellablePromise.State_.REJECTED;\n      x = e;\n    }\n  }\n\n  this.result_ = x;\n  this.state_ = state;\n  this.scheduleCallbacks_();\n\n  if (state === CancellablePromise.State_.REJECTED && !x.IS_CANCELLATION_ERROR) {\n    CancellablePromise.addUnhandledRejection_(this, x);\n  }\n};\n\n/**\n * Attempts to call the {@code then} method on an object in the hopes that it is\n * a Promise-compatible instance. This allows interoperation between different\n * Promise implementations, however a non-compliant object may cause a Promise\n * to hang indefinitely. If the {@code then} method throws an exception, the\n * dependent Promise will be rejected with the thrown value.\n *\n * @see http://promisesaplus.com/#point-70\n *\n * @param {Thenable} thenable An object with a {@code then} method that may be\n *     compatible with the Promise/A+ specification.\n * @param {!Function} then The {@code then} method of the Thenable object.\n * @private\n */\nCancellablePromise.prototype.tryThen_ = function (thenable, then) {\n  this.state_ = CancellablePromise.State_.BLOCKED;\n  var promise = this;\n  var called = false;\n\n  var resolve = function resolve(value) {\n    if (!called) {\n      called = true;\n      promise.unblockAndFulfill_(value);\n    }\n  };\n\n  var reject = function reject(reason) {\n    if (!called) {\n      called = true;\n      promise.unblockAndReject_(reason);\n    }\n  };\n\n  try {\n    then.call(thenable, resolve, reject);\n  } catch (e) {\n    reject(e);\n  }\n};\n\n/**\n * Executes the pending callbacks of a resolved Promise after a timeout.\n *\n * Section 2.2.4 of the Promises/A+ specification requires that Promise\n * callbacks must only be invoked from a call stack that only contains Promise\n * implementation code, which we accomplish by invoking callback execution after\n * a timeout. If {@code startExecution_} is called multiple times for the same\n * Promise, the callback chain will be evaluated only once. Additional callbacks\n * may be added during the evaluation phase, and will be executed in the same\n * event loop.\n *\n * All Promises added to the waiting list during the same browser event loop\n * will be executed in one batch to avoid using a separate timeout per Promise.\n *\n * @private\n */\nCancellablePromise.prototype.scheduleCallbacks_ = function () {\n  if (!this.executing_) {\n    this.executing_ = true;\n    _metal.async.run(this.executeCallbacks_, this);\n  }\n};\n\n/**\n * Executes all pending callbacks for this Promise.\n *\n * @private\n */\nCancellablePromise.prototype.executeCallbacks_ = function () {\n  while (this.callbackEntries_ && this.callbackEntries_.length) {\n    var entries = this.callbackEntries_;\n    this.callbackEntries_ = [];\n\n    for (var i = 0; i < entries.length; i++) {\n      this.executeCallback_(entries[i], this.state_, this.result_);\n    }\n  }\n  this.executing_ = false;\n};\n\n/**\n * Executes a pending callback for this Promise. Invokes an {@code onFulfilled}\n * or {@code onRejected} callback based on the resolved state of the Promise.\n *\n * @param {!CancellablePromise.CallbackEntry_} callbackEntry An entry containing the\n *     onFulfilled and/or onRejected callbacks for this step.\n * @param {CancellablePromise.State_} state The resolution status of the Promise,\n *     either FULFILLED or REJECTED.\n * @param {*} result The resolved result of the Promise.\n * @private\n */\nCancellablePromise.prototype.executeCallback_ = function (callbackEntry, state, result) {\n  if (state === CancellablePromise.State_.FULFILLED) {\n    callbackEntry.onFulfilled(result);\n  } else {\n    this.removeUnhandledRejection_();\n    callbackEntry.onRejected(result);\n  }\n};\n\n/**\n * Marks this rejected Promise as having being handled. Also marks any parent\n * Promises in the rejected state as handled. The rejection handler will no\n * longer be invoked for this Promise (if it has not been called already).\n *\n * @private\n */\nCancellablePromise.prototype.removeUnhandledRejection_ = function () {\n  var p;\n  if (CancellablePromise.UNHANDLED_REJECTION_DELAY > 0) {\n    for (p = this; p && p.unhandledRejectionId_; p = p.parent_) {\n      clearTimeout(p.unhandledRejectionId_);\n      p.unhandledRejectionId_ = 0;\n    }\n  } else if (CancellablePromise.UNHANDLED_REJECTION_DELAY === 0) {\n    for (p = this; p && p.hadUnhandledRejection_; p = p.parent_) {\n      p.hadUnhandledRejection_ = false;\n    }\n  }\n};\n\n/**\n * Marks this rejected Promise as unhandled. If no {@code onRejected} callback\n * is called for this Promise before the {@code UNHANDLED_REJECTION_DELAY}\n * expires, the reason will be passed to the unhandled rejection handler. The\n * handler typically rethrows the rejection reason so that it becomes visible in\n * the developer console.\n *\n * @param {!CancellablePromise} promise The rejected Promise.\n * @param {*} reason The Promise rejection reason.\n * @private\n */\nCancellablePromise.addUnhandledRejection_ = function (promise, reason) {\n  if (CancellablePromise.UNHANDLED_REJECTION_DELAY > 0) {\n    promise.unhandledRejectionId_ = setTimeout(function () {\n      CancellablePromise.handleRejection_.call(null, reason);\n    }, CancellablePromise.UNHANDLED_REJECTION_DELAY);\n  } else if (CancellablePromise.UNHANDLED_REJECTION_DELAY === 0) {\n    promise.hadUnhandledRejection_ = true;\n    _metal.async.run(function () {\n      if (promise.hadUnhandledRejection_) {\n        CancellablePromise.handleRejection_.call(null, reason);\n      }\n    });\n  }\n};\n\n/**\n * A method that is invoked with the rejection reasons for Promises that are\n * rejected but have no {@code onRejected} callbacks registered yet.\n * @type {function(*)}\n * @private\n */\nCancellablePromise.handleRejection_ = _metal.async.throwException;\n\n/**\n * Sets a handler that will be called with reasons from unhandled rejected\n * Promises. If the rejected Promise (or one of its descendants) has an\n * {@code onRejected} callback registered, the rejection will be considered\n * handled, and the rejection handler will not be called.\n *\n * By default, unhandled rejections are rethrown so that the error may be\n * captured by the developer console or a {@code window.onerror} handler.\n *\n * @param {function(*)} handler A function that will be called with reasons from\n *     rejected Promises. Defaults to {@code async.throwException}.\n */\nCancellablePromise.setUnhandledRejectionHandler = function (handler) {\n  CancellablePromise.handleRejection_ = handler;\n};\n\n/**\n * Error used as a rejection reason for canceled Promises.\n *\n * @param {string=} opt_message\n * @constructor\n * @extends {Error}\n * @final\n */\nCancellablePromise.CancellationError = function (_Error) {\n  _inherits(_class, _Error);\n\n  function _class(opt_message) {\n    _classCallCheck(this, _class);\n\n    var _this = _possibleConstructorReturn(this, _Error.call(this, opt_message));\n\n    if (opt_message) {\n      _this.message = opt_message;\n    }\n    return _this;\n  }\n\n  return _class;\n}(Error);\n\n/** @override */\nCancellablePromise.CancellationError.prototype.name = 'cancel';\n\nexports.CancellablePromise = CancellablePromise;\nexports.default = CancellablePromise;"
        },
        {
          "id": 3,
          "identifier": "/Users/Liferay/trampo/senna.js/node_modules/metal-dom/lib/dom.js",
          "name": "./node_modules/metal-dom/lib/dom.js",
          "index": 32,
          "index2": 31,
          "size": 1030,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0
          ],
          "assets": [],
          "issuer": "/Users/Liferay/trampo/senna.js/node_modules/metal-dom/lib/all/dom.js",
          "issuerId": 7,
          "issuerName": "./node_modules/metal-dom/lib/all/dom.js",
          "profile": {
            "factory": 8,
            "building": 33
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "reasons": [
            {
              "moduleId": 7,
              "moduleIdentifier": "/Users/Liferay/trampo/senna.js/node_modules/metal-dom/lib/all/dom.js",
              "module": "./node_modules/metal-dom/lib/all/dom.js",
              "moduleName": "./node_modules/metal-dom/lib/all/dom.js",
              "type": "cjs require",
              "userRequest": "../dom",
              "loc": "8:11-28"
            },
            {
              "moduleId": 16,
              "moduleIdentifier": "/Users/Liferay/trampo/senna.js/node_modules/metal-dom/lib/features.js",
              "module": "./node_modules/metal-dom/lib/features.js",
              "moduleName": "./node_modules/metal-dom/lib/features.js",
              "type": "cjs require",
              "userRequest": "./dom",
              "loc": "9:11-27"
            },
            {
              "moduleId": 44,
              "moduleIdentifier": "/Users/Liferay/trampo/senna.js/node_modules/metal-dom/lib/DomEventEmitterProxy.js",
              "module": "./node_modules/metal-dom/lib/DomEventEmitterProxy.js",
              "moduleName": "./node_modules/metal-dom/lib/DomEventEmitterProxy.js",
              "type": "cjs require",
              "userRequest": "./dom",
              "loc": "11:11-27"
            },
            {
              "moduleId": 45,
              "moduleIdentifier": "/Users/Liferay/trampo/senna.js/node_modules/metal-dom/lib/globalEval.js",
              "module": "./node_modules/metal-dom/lib/globalEval.js",
              "moduleName": "./node_modules/metal-dom/lib/globalEval.js",
              "type": "cjs require",
              "userRequest": "./dom",
              "loc": "11:11-27"
            },
            {
              "moduleId": 46,
              "moduleIdentifier": "/Users/Liferay/trampo/senna.js/node_modules/metal-dom/lib/globalEvalStyles.js",
              "module": "./node_modules/metal-dom/lib/globalEvalStyles.js",
              "moduleName": "./node_modules/metal-dom/lib/globalEvalStyles.js",
              "type": "cjs require",
              "userRequest": "./dom",
              "loc": "11:11-27"
            },
            {
              "moduleId": 47,
              "moduleIdentifier": "/Users/Liferay/trampo/senna.js/node_modules/metal-dom/lib/events.js",
              "module": "./node_modules/metal-dom/lib/events.js",
              "moduleName": "./node_modules/metal-dom/lib/events.js",
              "type": "cjs require",
              "userRequest": "./dom",
              "loc": "3:11-27"
            }
          ],
          "usedExports": true,
          "providedExports": null,
          "optimizationBailout": [
            "ModuleConcatenation bailout: Module is not an ECMAScript module"
          ],
          "depth": 3,
          "source": "'use strict';\n\n// This file exists just for backwards compatibility, making sure that old\n// default imports for this file still work. It's best to use the named exports\n// for each function instead though, since that allows bundlers like Rollup to\n// reduce the bundle size by removing unused code.\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.dom = undefined;\n\nvar _domNamed = require('./domNamed');\n\nObject.keys(_domNamed).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _domNamed[key];\n    }\n  });\n});\n\nvar dom = _interopRequireWildcard(_domNamed);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nexports.default = dom;\nexports.dom = dom;"
        },
        {
          "id": 4,
          "identifier": "/Users/Liferay/trampo/senna.js/node_modules/metal-uri/node.js",
          "name": "./node_modules/metal-uri/node.js",
          "index": 3,
          "index2": 17,
          "size": 592,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0
          ],
          "assets": [],
          "issuer": "/Users/Liferay/trampo/senna.js/node_modules/babel-loader/lib/index.js??ref--0!/Users/Liferay/trampo/senna.js/src/utils/utils.js",
          "issuerId": 5,
          "issuerName": "./src/utils/utils.js",
          "profile": {
            "factory": 792,
            "building": 6
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "reasons": [
            {
              "moduleId": 5,
              "moduleIdentifier": "/Users/Liferay/trampo/senna.js/node_modules/babel-loader/lib/index.js??ref--0!/Users/Liferay/trampo/senna.js/src/utils/utils.js",
              "module": "./src/utils/utils.js",
              "moduleName": "./src/utils/utils.js",
              "type": "amd require",
              "userRequest": "metal-uri",
              "loc": "1:0-148:2"
            },
            {
              "moduleId": 13,
              "moduleIdentifier": "/Users/Liferay/trampo/senna.js/node_modules/babel-loader/lib/index.js??ref--0!/Users/Liferay/trampo/senna.js/src/app/App.js",
              "module": "./src/app/App.js",
              "moduleName": "./src/app/App.js",
              "type": "amd require",
              "userRequest": "metal-uri",
              "loc": "1:0-1185:2"
            },
            {
              "moduleId": 18,
              "moduleIdentifier": "/Users/Liferay/trampo/senna.js/node_modules/babel-loader/lib/index.js??ref--0!/Users/Liferay/trampo/senna.js/src/screen/HtmlScreen.js",
              "module": "./src/screen/HtmlScreen.js",
              "moduleName": "./src/screen/HtmlScreen.js",
              "type": "amd require",
              "userRequest": "metal-uri",
              "loc": "1:0-425:2"
            },
            {
              "moduleId": 19,
              "moduleIdentifier": "/Users/Liferay/trampo/senna.js/node_modules/babel-loader/lib/index.js??ref--0!/Users/Liferay/trampo/senna.js/src/screen/RequestScreen.js",
              "module": "./src/screen/RequestScreen.js",
              "moduleName": "./src/screen/RequestScreen.js",
              "type": "amd require",
              "userRequest": "metal-uri",
              "loc": "1:0-387:2"
            },
            {
              "moduleId": 50,
              "moduleIdentifier": "/Users/Liferay/trampo/senna.js/node_modules/metal-ajax/lib/Ajax.js",
              "module": "./node_modules/metal-ajax/lib/Ajax.js",
              "moduleName": "./node_modules/metal-ajax/lib/Ajax.js",
              "type": "cjs require",
              "userRequest": "metal-uri",
              "loc": "11:16-36"
            }
          ],
          "usedExports": true,
          "providedExports": null,
          "optimizationBailout": [
            "ModuleConcatenation bailout: Module is not an ECMAScript module"
          ],
          "depth": 2,
          "source": "'use strict';\n\nvar Uri = require('./lib/Uri').default;\n\nif (typeof URL === 'undefined' && typeof require !== 'undefined') {\n\t// If there is no \"document\", then this should be running in NodeJS or in ReactNative env and\n\t// in this case we should use the \"url\" NPM module as the parse function.\n\t// In ReactNative env \"path\" will be replaced with \"path-browserify\".\n\n\tvar path = require('path');\n\tvar url = require('url');\n\n\tUri.setParseFn(function(urlStr) {\n\t\tvar parsed = url.parse(urlStr);\n\t\tparsed.pathname = path.normalize(parsed.pathname);\n\t\treturn parsed;\n\t});\n}\n\nmodule.exports = Uri;\n"
        },
        {
          "id": 5,
          "identifier": "/Users/Liferay/trampo/senna.js/node_modules/babel-loader/lib/index.js??ref--0!/Users/Liferay/trampo/senna.js/src/utils/utils.js",
          "name": "./src/utils/utils.js",
          "index": 1,
          "index2": 18,
          "size": 4516,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0
          ],
          "assets": [],
          "issuer": "/Users/Liferay/trampo/senna.js/node_modules/babel-loader/lib/index.js??ref--0!/Users/Liferay/trampo/senna.js/src/senna.js",
          "issuerId": 21,
          "issuerName": "./src/senna.js",
          "profile": {
            "factory": 17,
            "building": 123
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "reasons": [
            {
              "moduleId": 13,
              "moduleIdentifier": "/Users/Liferay/trampo/senna.js/node_modules/babel-loader/lib/index.js??ref--0!/Users/Liferay/trampo/senna.js/src/app/App.js",
              "module": "./src/app/App.js",
              "moduleName": "./src/app/App.js",
              "type": "amd require",
              "userRequest": "../utils/utils",
              "loc": "1:0-1185:2"
            },
            {
              "moduleId": 18,
              "moduleIdentifier": "/Users/Liferay/trampo/senna.js/node_modules/babel-loader/lib/index.js??ref--0!/Users/Liferay/trampo/senna.js/src/screen/HtmlScreen.js",
              "module": "./src/screen/HtmlScreen.js",
              "moduleName": "./src/screen/HtmlScreen.js",
              "type": "amd require",
              "userRequest": "../utils/utils",
              "loc": "1:0-425:2"
            },
            {
              "moduleId": 19,
              "moduleIdentifier": "/Users/Liferay/trampo/senna.js/node_modules/babel-loader/lib/index.js??ref--0!/Users/Liferay/trampo/senna.js/src/screen/RequestScreen.js",
              "module": "./src/screen/RequestScreen.js",
              "moduleName": "./src/screen/RequestScreen.js",
              "type": "amd require",
              "userRequest": "../utils/utils",
              "loc": "1:0-387:2"
            },
            {
              "moduleId": 21,
              "moduleIdentifier": "/Users/Liferay/trampo/senna.js/node_modules/babel-loader/lib/index.js??ref--0!/Users/Liferay/trampo/senna.js/src/senna.js",
              "module": "./src/senna.js",
              "moduleName": "./src/senna.js",
              "type": "amd require",
              "userRequest": "./utils/utils",
              "loc": "1:0-37:2"
            }
          ],
          "usedExports": true,
          "providedExports": null,
          "optimizationBailout": [
            "ModuleConcatenation bailout: Module is not an ECMAScript module"
          ],
          "depth": 1,
          "source": "define([\"exports\", \"../globals/globals\", \"metal-uri\"], function (exports, _globals, _metalUri) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n\n  var _globals2 = _interopRequireDefault(_globals);\n\n  var _metalUri2 = _interopRequireDefault(_metalUri);\n\n  function _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n      default: obj\n    };\n  }\n\n  function _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n      throw new TypeError(\"Cannot call a class as a function\");\n    }\n  }\n\n  function _defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  function _createClass(Constructor, protoProps, staticProps) {\n    if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) _defineProperties(Constructor, staticProps);\n    return Constructor;\n  }\n\n  var utils = function () {\n    function utils() {\n      _classCallCheck(this, utils);\n    }\n\n    _createClass(utils, null, [{\n      key: \"copyNodeAttributes\",\n      value: function copyNodeAttributes(source, target) {\n        Array.prototype.slice.call(source.attributes).forEach(function (attribute) {\n          return target.setAttribute(attribute.name, attribute.value);\n        });\n      }\n    }, {\n      key: \"getCurrentBrowserPath\",\n      value: function getCurrentBrowserPath() {\n        return this.getCurrentBrowserPathWithoutHash() + _globals2.default.window.location.hash;\n      }\n    }, {\n      key: \"getCurrentBrowserPathWithoutHash\",\n      value: function getCurrentBrowserPathWithoutHash() {\n        return _globals2.default.window.location.pathname + _globals2.default.window.location.search;\n      }\n    }, {\n      key: \"getNodeOffset\",\n      value: function getNodeOffset(node) {\n        var offsetLeft = 0,\n            offsetTop = 0;\n\n        do {\n          offsetLeft += node.offsetLeft;\n          offsetTop += node.offsetTop;\n          node = node.offsetParent;\n        } while (node);\n\n        return {\n          offsetLeft: offsetLeft,\n          offsetTop: offsetTop\n        };\n      }\n    }, {\n      key: \"getUrlPath\",\n      value: function getUrlPath(url) {\n        var uri = new _metalUri2.default(url);\n        return uri.getPathname() + uri.getSearch() + uri.getHash();\n      }\n    }, {\n      key: \"getUrlPathWithoutHash\",\n      value: function getUrlPathWithoutHash(url) {\n        var uri = new _metalUri2.default(url);\n        return uri.getPathname() + uri.getSearch();\n      }\n    }, {\n      key: \"getUrlPathWithoutHashAndSearch\",\n      value: function getUrlPathWithoutHashAndSearch(url) {\n        var uri = new _metalUri2.default(url);\n        return uri.getPathname();\n      }\n    }, {\n      key: \"isCurrentBrowserPath\",\n      value: function isCurrentBrowserPath(url) {\n        if (url) {\n          var currentBrowserPath = this.getCurrentBrowserPathWithoutHash(); // the getUrlPath will create a Uri and will normalize the path and\n          // remove the trailling '/' for properly comparing paths.\n\n          return utils.getUrlPathWithoutHash(url) === this.getUrlPath(currentBrowserPath);\n        }\n\n        return false;\n      }\n    }, {\n      key: \"isHtml5HistorySupported\",\n      value: function isHtml5HistorySupported() {\n        return !!(_globals2.default.window.history && _globals2.default.window.history.pushState);\n      }\n    }, {\n      key: \"isWebUri\",\n      value: function isWebUri(url) {\n        try {\n          return new _metalUri2.default(url);\n        } catch (err) {\n          console.error(\"\".concat(err.message, \" \").concat(url));\n          return false;\n        }\n      }\n    }, {\n      key: \"clearNodeAttributes\",\n      value: function clearNodeAttributes(node) {\n        Array.prototype.slice.call(node.attributes).forEach(function (attribute) {\n          return node.removeAttribute(attribute.name);\n        });\n      }\n    }, {\n      key: \"removePathTrailingSlash\",\n      value: function removePathTrailingSlash(path) {\n        var length = path ? path.length : 0;\n\n        if (length > 1 && path[length - 1] === '/') {\n          path = path.substr(0, length - 1);\n        }\n\n        return path;\n      }\n    }]);\n\n    return utils;\n  }();\n\n  exports.default = utils;\n});"
        },
        {
          "id": 6,
          "identifier": "/Users/Liferay/trampo/senna.js/node_modules/metal-events/lib/events.js",
          "name": "./node_modules/metal-events/lib/events.js",
          "index": 24,
          "index2": 24,
          "size": 974,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0
          ],
          "assets": [],
          "issuer": "/Users/Liferay/trampo/senna.js/node_modules/babel-loader/lib/index.js??ref--0!/Users/Liferay/trampo/senna.js/src/app/App.js",
          "issuerId": 13,
          "issuerName": "./src/app/App.js",
          "profile": {
            "factory": 459,
            "building": 10
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "reasons": [
            {
              "moduleId": 13,
              "moduleIdentifier": "/Users/Liferay/trampo/senna.js/node_modules/babel-loader/lib/index.js??ref--0!/Users/Liferay/trampo/senna.js/src/app/App.js",
              "module": "./src/app/App.js",
              "moduleName": "./src/app/App.js",
              "type": "amd require",
              "userRequest": "metal-events",
              "loc": "1:0-1185:2"
            },
            {
              "moduleId": 15,
              "moduleIdentifier": "/Users/Liferay/trampo/senna.js/node_modules/metal-dom/lib/DomEventHandle.js",
              "module": "./node_modules/metal-dom/lib/DomEventHandle.js",
              "moduleName": "./node_modules/metal-dom/lib/DomEventHandle.js",
              "type": "cjs require",
              "userRequest": "metal-events",
              "loc": "9:19-42"
            },
            {
              "moduleId": 43,
              "moduleIdentifier": "/Users/Liferay/trampo/senna.js/node_modules/metal-dom/lib/DomDelegatedEventHandle.js",
              "module": "./node_modules/metal-dom/lib/DomDelegatedEventHandle.js",
              "moduleName": "./node_modules/metal-dom/lib/DomDelegatedEventHandle.js",
              "type": "cjs require",
              "userRequest": "metal-events",
              "loc": "15:19-42"
            },
            {
              "moduleId": 44,
              "moduleIdentifier": "/Users/Liferay/trampo/senna.js/node_modules/metal-dom/lib/DomEventEmitterProxy.js",
              "module": "./node_modules/metal-dom/lib/DomEventEmitterProxy.js",
              "moduleName": "./node_modules/metal-dom/lib/DomEventEmitterProxy.js",
              "type": "cjs require",
              "userRequest": "metal-events",
              "loc": "13:19-42"
            }
          ],
          "usedExports": true,
          "providedExports": null,
          "optimizationBailout": [
            "ModuleConcatenation bailout: Module is not an ECMAScript module"
          ],
          "depth": 2,
          "source": "'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.EventHandler = exports.EventHandle = exports.EventEmitterProxy = exports.EventEmitter = undefined;\n\nvar _EventEmitter = require('./EventEmitter');\n\nvar _EventEmitter2 = _interopRequireDefault(_EventEmitter);\n\nvar _EventEmitterProxy = require('./EventEmitterProxy');\n\nvar _EventEmitterProxy2 = _interopRequireDefault(_EventEmitterProxy);\n\nvar _EventHandle = require('./EventHandle');\n\nvar _EventHandle2 = _interopRequireDefault(_EventHandle);\n\nvar _EventHandler = require('./EventHandler');\n\nvar _EventHandler2 = _interopRequireDefault(_EventHandler);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = _EventEmitter2.default;\nexports.EventEmitter = _EventEmitter2.default;\nexports.EventEmitterProxy = _EventEmitterProxy2.default;\nexports.EventHandle = _EventHandle2.default;\nexports.EventHandler = _EventHandler2.default;"
        },
        {
          "id": 7,
          "identifier": "/Users/Liferay/trampo/senna.js/node_modules/metal-dom/lib/all/dom.js",
          "name": "./node_modules/metal-dom/lib/all/dom.js",
          "index": 31,
          "index2": 37,
          "size": 1648,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0
          ],
          "assets": [],
          "issuer": "/Users/Liferay/trampo/senna.js/node_modules/babel-loader/lib/index.js??ref--0!/Users/Liferay/trampo/senna.js/src/app/App.js",
          "issuerId": 13,
          "issuerName": "./src/app/App.js",
          "profile": {
            "factory": 461,
            "building": 28
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "reasons": [
            {
              "moduleId": 10,
              "moduleIdentifier": "/Users/Liferay/trampo/senna.js/node_modules/babel-loader/lib/index.js??ref--0!/Users/Liferay/trampo/senna.js/src/screen/Screen.js",
              "module": "./src/screen/Screen.js",
              "moduleName": "./src/screen/Screen.js",
              "type": "amd require",
              "userRequest": "metal-dom",
              "loc": "1:0-264:2"
            },
            {
              "moduleId": 13,
              "moduleIdentifier": "/Users/Liferay/trampo/senna.js/node_modules/babel-loader/lib/index.js??ref--0!/Users/Liferay/trampo/senna.js/src/app/App.js",
              "module": "./src/app/App.js",
              "moduleName": "./src/app/App.js",
              "type": "amd require",
              "userRequest": "metal-dom",
              "loc": "1:0-1185:2"
            },
            {
              "moduleId": 17,
              "moduleIdentifier": "/Users/Liferay/trampo/senna.js/node_modules/babel-loader/lib/index.js??ref--0!/Users/Liferay/trampo/senna.js/src/surface/Surface.js",
              "module": "./src/surface/Surface.js",
              "moduleName": "./src/surface/Surface.js",
              "type": "amd require",
              "userRequest": "metal-dom",
              "loc": "1:0-352:2"
            },
            {
              "moduleId": 18,
              "moduleIdentifier": "/Users/Liferay/trampo/senna.js/node_modules/babel-loader/lib/index.js??ref--0!/Users/Liferay/trampo/senna.js/src/screen/HtmlScreen.js",
              "module": "./src/screen/HtmlScreen.js",
              "moduleName": "./src/screen/HtmlScreen.js",
              "type": "amd require",
              "userRequest": "metal-dom",
              "loc": "1:0-425:2"
            }
          ],
          "usedExports": true,
          "providedExports": null,
          "optimizationBailout": [
            "ModuleConcatenation bailout: Module is not an ECMAScript module"
          ],
          "depth": 2,
          "source": "'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.globalEvalStyles = exports.globalEval = exports.features = exports.DomEventHandle = exports.DomEventEmitterProxy = exports.domData = undefined;\n\nvar _dom = require('../dom');\n\nObject.keys(_dom).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _dom[key];\n    }\n  });\n});\n\nvar _dom2 = _interopRequireDefault(_dom);\n\nvar _domData = require('../domData');\n\nvar _domData2 = _interopRequireDefault(_domData);\n\nvar _DomEventEmitterProxy = require('../DomEventEmitterProxy');\n\nvar _DomEventEmitterProxy2 = _interopRequireDefault(_DomEventEmitterProxy);\n\nvar _DomEventHandle = require('../DomEventHandle');\n\nvar _DomEventHandle2 = _interopRequireDefault(_DomEventHandle);\n\nvar _features = require('../features');\n\nvar _features2 = _interopRequireDefault(_features);\n\nvar _globalEval = require('../globalEval');\n\nvar _globalEval2 = _interopRequireDefault(_globalEval);\n\nvar _globalEvalStyles = require('../globalEvalStyles');\n\nvar _globalEvalStyles2 = _interopRequireDefault(_globalEvalStyles);\n\nrequire('../events');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.domData = _domData2.default;\nexports.DomEventEmitterProxy = _DomEventEmitterProxy2.default;\nexports.DomEventHandle = _DomEventHandle2.default;\nexports.features = _features2.default;\nexports.globalEval = _globalEval2.default;\nexports.globalEvalStyles = _globalEvalStyles2.default;\nexports.default = _dom2.default;"
        },
        {
          "id": 8,
          "identifier": "/Users/Liferay/trampo/senna.js/node_modules/metal-dom/lib/domData.js",
          "name": "./node_modules/metal-dom/lib/domData.js",
          "index": 34,
          "index2": 27,
          "size": 1907,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0
          ],
          "assets": [],
          "issuer": "/Users/Liferay/trampo/senna.js/node_modules/metal-dom/lib/all/dom.js",
          "issuerId": 7,
          "issuerName": "./node_modules/metal-dom/lib/all/dom.js",
          "profile": {
            "factory": 8,
            "building": 44
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "reasons": [
            {
              "moduleId": 7,
              "moduleIdentifier": "/Users/Liferay/trampo/senna.js/node_modules/metal-dom/lib/all/dom.js",
              "module": "./node_modules/metal-dom/lib/all/dom.js",
              "moduleName": "./node_modules/metal-dom/lib/all/dom.js",
              "type": "cjs require",
              "userRequest": "../domData",
              "loc": "22:15-36"
            },
            {
              "moduleId": 42,
              "moduleIdentifier": "/Users/Liferay/trampo/senna.js/node_modules/metal-dom/lib/domNamed.js",
              "module": "./node_modules/metal-dom/lib/domNamed.js",
              "moduleName": "./node_modules/metal-dom/lib/domNamed.js",
              "type": "cjs require",
              "userRequest": "./domData",
              "loc": "33:15-35"
            },
            {
              "moduleId": 43,
              "moduleIdentifier": "/Users/Liferay/trampo/senna.js/node_modules/metal-dom/lib/DomDelegatedEventHandle.js",
              "module": "./node_modules/metal-dom/lib/DomDelegatedEventHandle.js",
              "moduleName": "./node_modules/metal-dom/lib/DomDelegatedEventHandle.js",
              "type": "cjs require",
              "userRequest": "./domData",
              "loc": "11:15-35"
            }
          ],
          "usedExports": true,
          "providedExports": null,
          "optimizationBailout": [
            "ModuleConcatenation bailout: Module is not an ECMAScript module"
          ],
          "depth": 3,
          "source": "'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar METAL_DATA = '__metal_data__';\n\nvar domData = function () {\n\tfunction domData() {\n\t\t_classCallCheck(this, domData);\n\t}\n\n\t_createClass(domData, null, [{\n\t\tkey: 'get',\n\n\t\t/**\n   * Gets Metal.js's data for the given element.\n   * @param {!Element} element\n   * @param {string=} opt_name Optional property from the data to be returned.\n   * @param {*} opt_initialVal Optinal value to the set the requested property\n   *     to if it doesn't exist yet in the data.\n   * @return {!Object}\n   */\n\t\tvalue: function get(element, opt_name, opt_initialVal) {\n\t\t\tif (!element[METAL_DATA]) {\n\t\t\t\telement[METAL_DATA] = {};\n\t\t\t}\n\t\t\tif (!opt_name) {\n\t\t\t\treturn element[METAL_DATA];\n\t\t\t}\n\t\t\tif (!element[METAL_DATA][opt_name] && opt_initialVal) {\n\t\t\t\telement[METAL_DATA][opt_name] = opt_initialVal;\n\t\t\t}\n\t\t\treturn element[METAL_DATA][opt_name];\n\t\t}\n\n\t\t/**\n   * Checks if the given element has data stored in it.\n   * @param {!Element} element\n   * @return {boolean}\n   */\n\n\t}, {\n\t\tkey: 'has',\n\t\tvalue: function has(element) {\n\t\t\treturn !!element[METAL_DATA];\n\t\t}\n\t}]);\n\n\treturn domData;\n}();\n\nexports.default = domData;"
        },
        {
          "id": 9,
          "identifier": "/Users/Liferay/trampo/senna.js/node_modules/babel-loader/lib/index.js??ref--0!/Users/Liferay/trampo/senna.js/src/route/Route.js",
          "name": "./src/route/Route.js",
          "index": 42,
          "index2": 39,
          "size": 3265,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0
          ],
          "assets": [],
          "issuer": "/Users/Liferay/trampo/senna.js/node_modules/babel-loader/lib/index.js??ref--0!/Users/Liferay/trampo/senna.js/src/senna.js",
          "issuerId": 21,
          "issuerName": "./src/senna.js",
          "profile": {
            "factory": 18,
            "building": 708,
            "dependencies": 208
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "reasons": [
            {
              "moduleId": 13,
              "moduleIdentifier": "/Users/Liferay/trampo/senna.js/node_modules/babel-loader/lib/index.js??ref--0!/Users/Liferay/trampo/senna.js/src/app/App.js",
              "module": "./src/app/App.js",
              "moduleName": "./src/app/App.js",
              "type": "amd require",
              "userRequest": "../route/Route",
              "loc": "1:0-1185:2"
            },
            {
              "moduleId": 21,
              "moduleIdentifier": "/Users/Liferay/trampo/senna.js/node_modules/babel-loader/lib/index.js??ref--0!/Users/Liferay/trampo/senna.js/src/senna.js",
              "module": "./src/senna.js",
              "moduleName": "./src/senna.js",
              "type": "amd require",
              "userRequest": "./route/Route",
              "loc": "1:0-37:2"
            },
            {
              "moduleId": 36,
              "moduleIdentifier": "/Users/Liferay/trampo/senna.js/node_modules/babel-loader/lib/index.js??ref--0!/Users/Liferay/trampo/senna.js/src/app/AppDataAttributeHandler.js",
              "module": "./src/app/AppDataAttributeHandler.js",
              "moduleName": "./src/app/AppDataAttributeHandler.js",
              "type": "amd require",
              "userRequest": "../route/Route",
              "loc": "1:0-300:2"
            }
          ],
          "usedExports": true,
          "providedExports": null,
          "optimizationBailout": [
            "ModuleConcatenation bailout: Module is not an ECMAScript module"
          ],
          "depth": 1,
          "source": "define([\"exports\", \"metal\", \"metal-path-parser\"], function (exports, _metal, _metalPathParser) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n\n  function _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n      throw new TypeError(\"Cannot call a class as a function\");\n    }\n  }\n\n  function _defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  function _createClass(Constructor, protoProps, staticProps) {\n    if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) _defineProperties(Constructor, staticProps);\n    return Constructor;\n  }\n\n  var Route = function () {\n    /**\n     * Route class.\n     * @param {!string|RegExp|Function} path\n     * @param {!Function} handler\n     * @constructor\n     */\n    function Route(path, handler) {\n      _classCallCheck(this, Route);\n\n      if (!(0, _metal.isDefAndNotNull)(path)) {\n        throw new Error('Route path not specified.');\n      }\n\n      if (!(0, _metal.isFunction)(handler)) {\n        throw new Error('Route handler is not a function.');\n      }\n      /**\n       * Defines the handler which will execute once a URL in the application\n       * matches the path.\n       * @type {!Function}\n       * @protected\n       */\n\n\n      this.handler = handler;\n      /**\n       * Defines the path which will trigger the route handler.\n       * @type {!string|RegExp|Function}\n       * @protected\n       */\n\n      this.path = path;\n    }\n    /**\n    * Builds parsed data (regex and tokens) for this route.\n    * @return {!Object}\n    * @protected\n    */\n\n\n    _createClass(Route, [{\n      key: \"buildParsedData_\",\n      value: function buildParsedData_() {\n        if (!this.parsedData_) {\n          var tokens = (0, _metalPathParser.parse)(this.path);\n          var regex = (0, _metalPathParser.toRegex)(tokens);\n          this.parsedData_ = {\n            regex: regex,\n            tokens: tokens\n          };\n        }\n\n        return this.parsedData_;\n      }\n    }, {\n      key: \"extractParams\",\n      value: function extractParams(path) {\n        if ((0, _metal.isString)(this.path)) {\n          return (0, _metalPathParser.extractData)(this.buildParsedData_().tokens, path);\n        }\n\n        return {};\n      }\n    }, {\n      key: \"getHandler\",\n      value: function getHandler() {\n        return this.handler;\n      }\n    }, {\n      key: \"getPath\",\n      value: function getPath() {\n        return this.path;\n      }\n    }, {\n      key: \"matchesPath\",\n      value: function matchesPath(value) {\n        var path = this.path;\n\n        if ((0, _metal.isFunction)(path)) {\n          return path(value);\n        }\n\n        if ((0, _metal.isString)(path)) {\n          path = this.buildParsedData_().regex;\n        }\n\n        if (path instanceof RegExp) {\n          return value.search(path) > -1;\n        }\n\n        return false;\n      }\n    }]);\n\n    return Route;\n  }();\n\n  exports.default = Route;\n});"
        },
        {
          "id": 10,
          "identifier": "/Users/Liferay/trampo/senna.js/node_modules/babel-loader/lib/index.js??ref--0!/Users/Liferay/trampo/senna.js/src/screen/Screen.js",
          "name": "./src/screen/Screen.js",
          "index": 44,
          "index2": 41,
          "size": 7267,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0
          ],
          "assets": [],
          "issuer": "/Users/Liferay/trampo/senna.js/node_modules/babel-loader/lib/index.js??ref--0!/Users/Liferay/trampo/senna.js/src/senna.js",
          "issuerId": 21,
          "issuerName": "./src/senna.js",
          "profile": {
            "factory": 18,
            "building": 686,
            "dependencies": 232
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "reasons": [
            {
              "moduleId": 13,
              "moduleIdentifier": "/Users/Liferay/trampo/senna.js/node_modules/babel-loader/lib/index.js??ref--0!/Users/Liferay/trampo/senna.js/src/app/App.js",
              "module": "./src/app/App.js",
              "moduleName": "./src/app/App.js",
              "type": "amd require",
              "userRequest": "../screen/Screen",
              "loc": "1:0-1185:2"
            },
            {
              "moduleId": 19,
              "moduleIdentifier": "/Users/Liferay/trampo/senna.js/node_modules/babel-loader/lib/index.js??ref--0!/Users/Liferay/trampo/senna.js/src/screen/RequestScreen.js",
              "module": "./src/screen/RequestScreen.js",
              "moduleName": "./src/screen/RequestScreen.js",
              "type": "amd require",
              "userRequest": "./Screen",
              "loc": "1:0-387:2"
            },
            {
              "moduleId": 21,
              "moduleIdentifier": "/Users/Liferay/trampo/senna.js/node_modules/babel-loader/lib/index.js??ref--0!/Users/Liferay/trampo/senna.js/src/senna.js",
              "module": "./src/senna.js",
              "moduleName": "./src/senna.js",
              "type": "amd require",
              "userRequest": "./screen/Screen",
              "loc": "1:0-37:2"
            }
          ],
          "usedExports": true,
          "providedExports": null,
          "optimizationBailout": [
            "ModuleConcatenation bailout: Module is not an ECMAScript module"
          ],
          "depth": 1,
          "source": "define([\"exports\", \"metal\", \"metal-dom\", \"../cacheable/Cacheable\", \"metal-promise\"], function (exports, _metal, _metalDom, _Cacheable2, _metalPromise) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n\n  var _Cacheable3 = _interopRequireDefault(_Cacheable2);\n\n  var _metalPromise2 = _interopRequireDefault(_metalPromise);\n\n  function _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n      default: obj\n    };\n  }\n\n  function _typeof(obj) {\n    if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n      _typeof = function _typeof(obj) {\n        return typeof obj;\n      };\n    } else {\n      _typeof = function _typeof(obj) {\n        return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n      };\n    }\n\n    return _typeof(obj);\n  }\n\n  function _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n      throw new TypeError(\"Cannot call a class as a function\");\n    }\n  }\n\n  function _defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  function _createClass(Constructor, protoProps, staticProps) {\n    if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) _defineProperties(Constructor, staticProps);\n    return Constructor;\n  }\n\n  function _possibleConstructorReturn(self, call) {\n    if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n      return call;\n    }\n\n    if (!self) {\n      throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }\n\n    return self;\n  }\n\n  function _get(object, property, receiver) {\n    if (object === null) object = Function.prototype;\n    var desc = Object.getOwnPropertyDescriptor(object, property);\n\n    if (desc === undefined) {\n      var parent = Object.getPrototypeOf(object);\n\n      if (parent === null) {\n        return undefined;\n      } else {\n        return _get(parent, property, receiver);\n      }\n    } else if (\"value\" in desc) {\n      return desc.value;\n    } else {\n      var getter = desc.get;\n\n      if (getter === undefined) {\n        return undefined;\n      }\n\n      return getter.call(receiver);\n    }\n  }\n\n  function _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n      throw new TypeError(\"Super expression must either be null or a function\");\n    }\n\n    subClass.prototype = Object.create(superClass && superClass.prototype, {\n      constructor: {\n        value: subClass,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n    if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n  }\n\n  var Screen = function (_Cacheable) {\n    _inherits(Screen, _Cacheable);\n\n    /**\n     * Screen class is a special type of route handler that provides helper\n     * utilities that adds lifecycle and methods to provide content to each\n     * registered surface.\n     * @constructor\n     * @extends {Cacheable}\n     */\n    function Screen() {\n      var _this;\n\n      _classCallCheck(this, Screen);\n\n      _this = _possibleConstructorReturn(this, (Screen.__proto__ || Object.getPrototypeOf(Screen)).call(this));\n      /**\n       * Holds the screen id.\n       * @type {string}\n       * @protected\n       */\n\n      _this.id = _this.makeId_((0, _metal.getUid)());\n      /**\n       * Holds the screen title. Relevant when the page title should be\n       * upadated when screen is rendered.\n       * @type {?string=}\n       * @default null\n       * @protected\n       */\n\n      _this.title = null;\n      return _this;\n    }\n    /**\n     * Fires when the screen is active. Allows a screen to perform any setup\n     * that requires its DOM to be visible. Lifecycle.\n     */\n\n\n    _createClass(Screen, [{\n      key: \"activate\",\n      value: function activate() {\n        console.log('Screen [' + this + '] activate');\n      }\n    }, {\n      key: \"beforeDeactivate\",\n      value: function beforeDeactivate() {\n        console.log('Screen [' + this + '] beforeDeactivate');\n      }\n    }, {\n      key: \"beforeUpdateHistoryPath\",\n      value: function beforeUpdateHistoryPath(path) {\n        return path;\n      }\n    }, {\n      key: \"beforeUpdateHistoryState\",\n      value: function beforeUpdateHistoryState(state) {\n        return state;\n      }\n    }, {\n      key: \"deactivate\",\n      value: function deactivate() {\n        console.log('Screen [' + this + '] deactivate');\n      }\n    }, {\n      key: \"disposeInternal\",\n      value: function disposeInternal() {\n        _get(Screen.prototype.__proto__ || Object.getPrototypeOf(Screen.prototype), \"disposeInternal\", this).call(this);\n\n        console.log('Screen [' + this + '] dispose');\n      }\n    }, {\n      key: \"evaluateScripts\",\n      value: function evaluateScripts(surfaces) {\n        Object.keys(surfaces).forEach(function (sId) {\n          if (surfaces[sId].activeChild) {\n            _metalDom.globalEval.runScriptsInElement(surfaces[sId].activeChild);\n          }\n        });\n        return _metalPromise2.default.resolve();\n      }\n    }, {\n      key: \"evaluateStyles\",\n      value: function evaluateStyles() {\n        return _metalPromise2.default.resolve();\n      }\n    }, {\n      key: \"flip\",\n      value: function flip(surfaces) {\n        var _this2 = this;\n\n        console.log('Screen [' + this + '] flip');\n        var transitions = [];\n        Object.keys(surfaces).forEach(function (sId) {\n          var surface = surfaces[sId];\n          var deferred = surface.show(_this2.id);\n          transitions.push(deferred);\n        });\n        return _metalPromise2.default.all(transitions);\n      }\n    }, {\n      key: \"getId\",\n      value: function getId() {\n        return this.id;\n      }\n    }, {\n      key: \"getSurfaceContent\",\n      value: function getSurfaceContent() {\n        console.log('Screen [' + this + '] getSurfaceContent');\n      }\n    }, {\n      key: \"getTitle\",\n      value: function getTitle() {\n        return this.title;\n      }\n    }, {\n      key: \"load\",\n      value: function load() {\n        console.log('Screen [' + this + '] load');\n        return _metalPromise2.default.resolve();\n      }\n    }, {\n      key: \"makeId_\",\n      value: function makeId_(id) {\n        return 'screen_' + id;\n      }\n    }, {\n      key: \"setId\",\n      value: function setId(id) {\n        this.id = id;\n      }\n    }, {\n      key: \"setTitle\",\n      value: function setTitle(title) {\n        this.title = title;\n      }\n    }, {\n      key: \"toString\",\n      value: function toString() {\n        return this.id;\n      }\n    }]);\n\n    return Screen;\n  }(_Cacheable3.default);\n\n  /**\n   * @param {*} object\n   * @return {boolean} Whether a given instance implements\n   * <code>Screen</code>.\n   */\n  Screen.isImplementedBy = function (object) {\n    return object instanceof Screen;\n  };\n\n  exports.default = Screen;\n});"
        },
        {
          "id": 11,
          "identifier": "/Users/Liferay/trampo/senna.js/node_modules/metal/lib/core.js",
          "name": "./node_modules/metal/lib/core.js",
          "index": 6,
          "index2": 2,
          "size": 1040,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0
          ],
          "assets": [],
          "issuer": "/Users/Liferay/trampo/senna.js/node_modules/metal/lib/metal.js",
          "issuerId": 0,
          "issuerName": "./node_modules/metal/lib/metal.js",
          "profile": {
            "factory": 28,
            "building": 11
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "reasons": [
            {
              "moduleId": 0,
              "moduleIdentifier": "/Users/Liferay/trampo/senna.js/node_modules/metal/lib/metal.js",
              "module": "./node_modules/metal/lib/metal.js",
              "moduleName": "./node_modules/metal/lib/metal.js",
              "type": "cjs require",
              "userRequest": "./core",
              "loc": "8:12-29"
            },
            {
              "moduleId": 24,
              "moduleIdentifier": "/Users/Liferay/trampo/senna.js/node_modules/metal/lib/array/array.js",
              "module": "./node_modules/metal/lib/array/array.js",
              "moduleName": "./node_modules/metal/lib/array/array.js",
              "type": "cjs require",
              "userRequest": "../core",
              "loc": "9:12-30"
            }
          ],
          "usedExports": true,
          "providedExports": null,
          "optimizationBailout": [
            "ModuleConcatenation bailout: Module is not an ECMAScript module"
          ],
          "depth": 3,
          "source": "'use strict';\n\n// This file exists just for backwards compatibility, making sure that old\n// default imports for this file still work. It's best to use the named exports\n// for each function instead though, since that allows bundlers like Rollup to\n// reduce the bundle size by removing unused code.\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.core = undefined;\n\nvar _coreNamed = require('./coreNamed');\n\nObject.keys(_coreNamed).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _coreNamed[key];\n    }\n  });\n});\n\nvar core = _interopRequireWildcard(_coreNamed);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nexports.default = core;\nexports.core = core;"
        },
        {
          "id": 12,
          "identifier": "/Users/Liferay/trampo/senna.js/node_modules/metal-structs/lib/all/structs.js",
          "name": "./node_modules/metal-structs/lib/all/structs.js",
          "index": 15,
          "index2": 13,
          "size": 492,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0
          ],
          "assets": [],
          "issuer": "/Users/Liferay/trampo/senna.js/node_modules/babel-loader/lib/index.js??ref--0!/Users/Liferay/trampo/senna.js/src/screen/RequestScreen.js",
          "issuerId": 19,
          "issuerName": "./src/screen/RequestScreen.js",
          "profile": {
            "factory": 286,
            "building": 30
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "reasons": [
            {
              "moduleId": 19,
              "moduleIdentifier": "/Users/Liferay/trampo/senna.js/node_modules/babel-loader/lib/index.js??ref--0!/Users/Liferay/trampo/senna.js/src/screen/RequestScreen.js",
              "module": "./src/screen/RequestScreen.js",
              "moduleName": "./src/screen/RequestScreen.js",
              "type": "amd require",
              "userRequest": "metal-structs",
              "loc": "1:0-387:2"
            },
            {
              "moduleId": 22,
              "moduleIdentifier": "/Users/Liferay/trampo/senna.js/node_modules/metal-uri/lib/Uri.js",
              "module": "./node_modules/metal-uri/lib/Uri.js",
              "moduleName": "./node_modules/metal-uri/lib/Uri.js",
              "type": "cjs require",
              "userRequest": "metal-structs",
              "loc": "17:20-44"
            }
          ],
          "usedExports": true,
          "providedExports": null,
          "optimizationBailout": [
            "ModuleConcatenation bailout: Module is not an ECMAScript module"
          ],
          "depth": 2,
          "source": "'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.TreeNode = exports.MultiMap = undefined;\n\nvar _MultiMap = require('../MultiMap');\n\nvar _MultiMap2 = _interopRequireDefault(_MultiMap);\n\nvar _TreeNode = require('../TreeNode');\n\nvar _TreeNode2 = _interopRequireDefault(_TreeNode);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.MultiMap = _MultiMap2.default;\nexports.TreeNode = _TreeNode2.default;"
        },
        {
          "id": 13,
          "identifier": "/Users/Liferay/trampo/senna.js/node_modules/babel-loader/lib/index.js??ref--0!/Users/Liferay/trampo/senna.js/src/app/App.js",
          "name": "./src/app/App.js",
          "index": 23,
          "index2": 43,
          "size": 38271,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0
          ],
          "assets": [],
          "issuer": "/Users/Liferay/trampo/senna.js/node_modules/babel-loader/lib/index.js??ref--0!/Users/Liferay/trampo/senna.js/src/senna.js",
          "issuerId": 21,
          "issuerName": "./src/senna.js",
          "profile": {
            "factory": 17,
            "building": 458,
            "dependencies": 457
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "reasons": [
            {
              "moduleId": 21,
              "moduleIdentifier": "/Users/Liferay/trampo/senna.js/node_modules/babel-loader/lib/index.js??ref--0!/Users/Liferay/trampo/senna.js/src/senna.js",
              "module": "./src/senna.js",
              "moduleName": "./src/senna.js",
              "type": "amd require",
              "userRequest": "./app/App",
              "loc": "1:0-37:2"
            },
            {
              "moduleId": 36,
              "moduleIdentifier": "/Users/Liferay/trampo/senna.js/node_modules/babel-loader/lib/index.js??ref--0!/Users/Liferay/trampo/senna.js/src/app/AppDataAttributeHandler.js",
              "module": "./src/app/AppDataAttributeHandler.js",
              "moduleName": "./src/app/AppDataAttributeHandler.js",
              "type": "amd require",
              "userRequest": "./App",
              "loc": "1:0-300:2"
            }
          ],
          "usedExports": true,
          "providedExports": null,
          "optimizationBailout": [
            "ModuleConcatenation bailout: Module is not an ECMAScript module"
          ],
          "depth": 1,
          "source": "define([\"exports\", \"metal-dom\", \"metal\", \"metal-events\", \"metal-promise\", \"metal-debounce\", \"../globals/globals\", \"../route/Route\", \"../screen/Screen\", \"../surface/Surface\", \"metal-uri\", \"../utils/utils\"], function (exports, _metalDom, _metal, _metalEvents, _metalPromise, _metalDebounce, _globals, _Route, _Screen, _Surface, _metalUri, _utils) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n\n  var _metalPromise2 = _interopRequireDefault(_metalPromise);\n\n  var _metalDebounce2 = _interopRequireDefault(_metalDebounce);\n\n  var _globals2 = _interopRequireDefault(_globals);\n\n  var _Route2 = _interopRequireDefault(_Route);\n\n  var _Screen2 = _interopRequireDefault(_Screen);\n\n  var _Surface2 = _interopRequireDefault(_Surface);\n\n  var _metalUri2 = _interopRequireDefault(_metalUri);\n\n  var _utils2 = _interopRequireDefault(_utils);\n\n  function _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n      default: obj\n    };\n  }\n\n  function _typeof(obj) {\n    if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n      _typeof = function _typeof(obj) {\n        return typeof obj;\n      };\n    } else {\n      _typeof = function _typeof(obj) {\n        return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n      };\n    }\n\n    return _typeof(obj);\n  }\n\n  function _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n      throw new TypeError(\"Cannot call a class as a function\");\n    }\n  }\n\n  function _defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  function _createClass(Constructor, protoProps, staticProps) {\n    if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) _defineProperties(Constructor, staticProps);\n    return Constructor;\n  }\n\n  function _possibleConstructorReturn(self, call) {\n    if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n      return call;\n    }\n\n    if (!self) {\n      throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }\n\n    return self;\n  }\n\n  function _get(object, property, receiver) {\n    if (object === null) object = Function.prototype;\n    var desc = Object.getOwnPropertyDescriptor(object, property);\n\n    if (desc === undefined) {\n      var parent = Object.getPrototypeOf(object);\n\n      if (parent === null) {\n        return undefined;\n      } else {\n        return _get(parent, property, receiver);\n      }\n    } else if (\"value\" in desc) {\n      return desc.value;\n    } else {\n      var getter = desc.get;\n\n      if (getter === undefined) {\n        return undefined;\n      }\n\n      return getter.call(receiver);\n    }\n  }\n\n  function _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n      throw new TypeError(\"Super expression must either be null or a function\");\n    }\n\n    subClass.prototype = Object.create(superClass && superClass.prototype, {\n      constructor: {\n        value: subClass,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n    if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n  }\n\n  var App = function (_EventEmitter) {\n    _inherits(App, _EventEmitter);\n\n    /**\n     * App class that handle routes and screens lifecycle.\n     * @constructor\n     * @extends {EventEmitter}\n     */\n    function App() {\n      var _this;\n\n      _classCallCheck(this, App);\n\n      _this = _possibleConstructorReturn(this, (App.__proto__ || Object.getPrototypeOf(App)).call(this));\n      /**\n       * Holds the active screen.\n       * @type {?Screen}\n       * @protected\n       */\n\n      _this.activeScreen = null;\n      /**\n       * Holds the active path containing the query parameters.\n       * @type {?string}\n       * @protected\n       */\n\n      _this.activePath = null;\n      /**\n       * Allows prevent navigate from dom prevented event.\n       * @type {boolean}\n       * @default true\n       * @protected\n       */\n\n      _this.allowPreventNavigate = true;\n      /**\n       * Holds link base path.\n       * @type {!string}\n       * @default ''\n       * @protected\n       */\n\n      _this.basePath = '';\n      /**\n       * Holds the value of the browser path before a navigation is performed.\n       * @type {!string}\n       * @default the current browser path.\n       * @protected\n       */\n\n      _this.browserPathBeforeNavigate = _utils2.default.getCurrentBrowserPathWithoutHash();\n      /**\n       * Captures scroll position from scroll event.\n       * @type {!boolean}\n       * @default true\n       * @protected\n       */\n\n      _this.captureScrollPositionFromScrollEvent = true;\n      /**\n       * Holds the default page title.\n       * @type {string}\n       * @default null\n       * @protected\n       */\n\n      _this.defaultTitle = _globals2.default.document.title;\n      /**\n       * Holds the form selector to define forms that are routed.\n       * @type {!string}\n       * @default form[enctype=\"multipart/form-data\"]:not([data-senna-off])\n       * @protected\n       */\n\n      _this.formSelector = 'form[enctype=\"multipart/form-data\"]:not([data-senna-off])';\n      /**\n       * When enabled, the route matching ignores query string from the path.\n       * @type {boolean}\n       * @default false\n       * @protected\n       */\n\n      _this.ignoreQueryStringFromRoutePath = false;\n      /**\n       * Holds the link selector to define links that are routed.\n       * @type {!string}\n       * @default a:not([data-senna-off])\n       * @protected\n       */\n\n      _this.linkSelector = 'a:not([data-senna-off]):not([target=\"_blank\"])';\n      /**\n       * Holds the loading css class.\n       * @type {!string}\n       * @default senna-loading\n       * @protected\n       */\n\n      _this.loadingCssClass = 'senna-loading';\n      /**\n       * Using the History API to manage your URLs is awesome and, as it happens,\n       * a crucial feature of good web apps. One of its downsides, however, is\n       * that scroll positions are stored and then, more importantly, restored\n       * whenever you traverse the history. This often means unsightly jumps as\n       * the scroll position changes automatically, and especially so if your app\n       * does transitions, or changes the contents of the page in any way.\n       * Ultimately this leads to an horrible user experience. The good news is,\n       * however, that there’s a potential fix: history.scrollRestoration.\n       * https://developers.google.com/web/updates/2015/09/history-api-scroll-restoration\n       * @type {boolean}\n       * @protected\n       */\n\n      _this.nativeScrollRestorationSupported = 'scrollRestoration' in _globals2.default.window.history;\n      /**\n       * When set to true there is a pendingNavigate that has not yet been\n       * resolved or rejected.\n       * @type {boolean}\n       * @default false\n       * @protected\n       */\n\n      _this.isNavigationPending = false;\n      /**\n       * Holds a deferred with the current navigation.\n       * @type {?CancellablePromise}\n       * @default null\n       * @protected\n       */\n\n      _this.pendingNavigate = null;\n      /**\n       * Holds the window horizontal scroll position when the navigation using\n       * back or forward happens to be restored after the surfaces are updated.\n       * @type {!Number}\n       * @default 0\n       * @protected\n       */\n\n      _this.popstateScrollLeft = 0;\n      /**\n       * Holds the window vertical scroll position when the navigation using\n       * back or forward happens to be restored after the surfaces are updated.\n       * @type {!Number}\n       * @default 0\n       * @protected\n       */\n\n      _this.popstateScrollTop = 0;\n      /**\n       * Holds the redirect path containing the query parameters.\n       * @type {?string}\n       * @protected\n       */\n\n      _this.redirectPath = null;\n      /**\n       * Holds the screen routes configuration.\n       * @type {?Array}\n       * @default []\n       * @protected\n       */\n\n      _this.routes = [];\n      /**\n       * Maps the screen instances by the url containing the parameters.\n       * @type {?Object}\n       * @default {}\n       * @protected\n       */\n\n      _this.screens = {};\n      /**\n       * When set to true the first erroneous popstate fired on page load will be\n       * ignored, only if <code>globals.window.history.state</code> is also\n       * <code>null</code>.\n       * @type {boolean}\n       * @default false\n       * @protected\n       */\n\n      _this.skipLoadPopstate = false;\n      /**\n       * Maps that index the surfaces instances by the surface id.\n       * @type {?Object}\n       * @default {}\n       * @protected\n       */\n\n      _this.surfaces = {};\n      /**\n       * When set to true, moves the scroll position after popstate, or to the\n       * top of the viewport for new navigation. If false, the browser will\n       * take care of scroll restoration.\n       * @type {!boolean}\n       * @default true\n       * @protected\n       */\n\n      _this.updateScrollPosition = true;\n      _this.appEventHandlers_ = new _metalEvents.EventHandler();\n\n      _this.appEventHandlers_.add((0, _metalDom.on)(_globals2.default.window, 'scroll', (0, _metalDebounce2.default)(_this.onScroll_.bind(_this), 100)), (0, _metalDom.on)(_globals2.default.window, 'load', _this.onLoad_.bind(_this)), (0, _metalDom.on)(_globals2.default.window, 'popstate', _this.onPopstate_.bind(_this)));\n\n      _this.on('startNavigate', _this.onStartNavigate_);\n\n      _this.on('beforeNavigate', _this.onBeforeNavigate_);\n\n      _this.on('beforeNavigate', _this.onBeforeNavigateDefault_, true);\n\n      _this.on('beforeUnload', _this.onBeforeUnloadDefault_);\n\n      _this.setLinkSelector(_this.linkSelector);\n\n      _this.setFormSelector(_this.formSelector);\n\n      _this.maybeOverloadBeforeUnload_();\n\n      return _this;\n    }\n    /**\n     * Adds one or more screens to the application.\n     *\n     * Example:\n     *\n     * <code>\n     *   app.addRoutes({ path: '/foo', handler: FooScreen });\n     *   or\n     *   app.addRoutes([{ path: '/foo', handler: function(route) { return new FooScreen(); } }]);\n     * </code>\n     *\n     * @param {Object} or {Array} routes Single object or an array of object.\n     *     Each object should contain <code>path</code> and <code>screen</code>.\n     *     The <code>path</code> should be a string or a regex that maps the\n     *     navigation route to a screen class definition (not an instance), e.g:\n     *         <code>{ path: \"/home:param1\", handler: MyScreen }</code>\n     *         <code>{ path: /foo.+/, handler: MyScreen }</code>\n     * @chainable\n     */\n\n\n    _createClass(App, [{\n      key: \"addRoutes\",\n      value: function addRoutes(routes) {\n        var _this2 = this;\n\n        if (!Array.isArray(routes)) {\n          routes = [routes];\n        }\n\n        routes.forEach(function (route) {\n          if (!(route instanceof _Route2.default)) {\n            route = new _Route2.default(route.path, route.handler);\n          }\n\n          _this2.routes.push(route);\n        });\n        return this;\n      }\n    }, {\n      key: \"addSurfaces\",\n      value: function addSurfaces(surfaces) {\n        var _this3 = this;\n\n        if (!Array.isArray(surfaces)) {\n          surfaces = [surfaces];\n        }\n\n        surfaces.forEach(function (surface) {\n          if ((0, _metal.isString)(surface)) {\n            surface = new _Surface2.default(surface);\n          }\n\n          _this3.surfaces[surface.getId()] = surface;\n        });\n        return this;\n      }\n    }, {\n      key: \"canNavigate\",\n      value: function canNavigate(url) {\n        var uri = _utils2.default.isWebUri(url);\n\n        if (!uri) {\n          return false;\n        }\n\n        var path = _utils2.default.getUrlPath(url);\n\n        if (!this.isLinkSameOrigin_(uri.getHostname())) {\n          console.log('Offsite link clicked');\n          return false;\n        }\n\n        if (!this.isSameBasePath_(path)) {\n          console.log('Link clicked outside app\\'s base path');\n          return false;\n        } // Prevents navigation if it's a hash change on the same url.\n\n\n        if (uri.getHash() && _utils2.default.isCurrentBrowserPath(path)) {\n          return false;\n        }\n\n        if (!this.findRoute(path)) {\n          console.log('No route for ' + path);\n          return false;\n        }\n\n        return true;\n      }\n    }, {\n      key: \"clearScreensCache\",\n      value: function clearScreensCache() {\n        var _this4 = this;\n\n        Object.keys(this.screens).forEach(function (path) {\n          if (path === _this4.activePath) {\n            _this4.activeScreen.clearCache();\n          } else {\n            _this4.removeScreen(path);\n          }\n        });\n      }\n    }, {\n      key: \"createScreenInstance\",\n      value: function createScreenInstance(path, route) {\n        if (!this.pendingNavigate && path === this.activePath) {\n          console.log('Already at destination, refresh navigation');\n          return this.activeScreen;\n        }\n        /* jshint newcap: false */\n\n\n        var screen = this.screens[path];\n\n        if (!screen) {\n          var handler = route.getHandler();\n\n          if (handler === _Screen2.default || _Screen2.default.isImplementedBy(handler.prototype)) {\n            screen = new handler();\n          } else {\n            screen = handler(route) || new _Screen2.default();\n          }\n\n          console.log('Create screen for [' + path + '] [' + screen + ']');\n        }\n\n        return screen;\n      }\n    }, {\n      key: \"disposeInternal\",\n      value: function disposeInternal() {\n        if (this.activeScreen) {\n          this.removeScreen(this.activePath);\n        }\n\n        this.clearScreensCache();\n        this.formEventHandler_.removeListener();\n        this.linkEventHandler_.removeListener();\n        this.appEventHandlers_.removeAllListeners();\n\n        _get(App.prototype.__proto__ || Object.getPrototypeOf(App.prototype), \"disposeInternal\", this).call(this);\n      }\n    }, {\n      key: \"dispatch\",\n      value: function dispatch() {\n        return this.navigate(_utils2.default.getCurrentBrowserPath(), true);\n      }\n    }, {\n      key: \"doNavigate_\",\n      value: function doNavigate_(path, opt_replaceHistory) {\n        var _this5 = this;\n\n        if (this.activeScreen && this.activeScreen.beforeDeactivate()) {\n          this.pendingNavigate = _metalPromise2.default.reject(new _metalPromise2.default.CancellationError('Cancelled by active screen'));\n          return this.pendingNavigate;\n        }\n\n        var route = this.findRoute(path);\n\n        if (!route) {\n          this.pendingNavigate = _metalPromise2.default.reject(new _metalPromise2.default.CancellationError('No route for ' + path));\n          return this.pendingNavigate;\n        }\n\n        console.log('Navigate to [' + path + ']');\n        this.stopPendingNavigate_();\n        this.isNavigationPending = true;\n        var nextScreen = this.createScreenInstance(path, route);\n        return nextScreen.load(path).then(function () {\n          if (_this5.activeScreen) {\n            _this5.activeScreen.deactivate();\n          }\n\n          _this5.prepareNavigateHistory_(path, nextScreen, opt_replaceHistory);\n\n          _this5.prepareNavigateSurfaces_(nextScreen, _this5.surfaces, _this5.extractParams(route, path));\n        }).then(function () {\n          return nextScreen.evaluateStyles(_this5.surfaces);\n        }).then(function () {\n          return nextScreen.flip(_this5.surfaces);\n        }).then(function () {\n          return nextScreen.evaluateScripts(_this5.surfaces);\n        }).then(function () {\n          return _this5.maybeUpdateScrollPositionState_();\n        }).then(function () {\n          return _this5.syncScrollPositionSyncThenAsync_();\n        }).then(function () {\n          return _this5.finalizeNavigate_(path, nextScreen);\n        }).then(function () {\n          return _this5.maybeOverloadBeforeUnload_();\n        }).catch(function (reason) {\n          _this5.isNavigationPending = false;\n\n          _this5.handleNavigateError_(path, nextScreen, reason);\n\n          throw reason;\n        });\n      }\n    }, {\n      key: \"extractParams\",\n      value: function extractParams(route, path) {\n        return route.extractParams(this.getRoutePath(path));\n      }\n    }, {\n      key: \"finalizeNavigate_\",\n      value: function finalizeNavigate_(path, nextScreen) {\n        nextScreen.activate();\n\n        if (this.activeScreen && !this.activeScreen.isCacheable()) {\n          if (this.activeScreen !== nextScreen) {\n            this.removeScreen(this.activePath);\n          }\n        }\n\n        this.activePath = path;\n        this.activeScreen = nextScreen;\n        this.browserPathBeforeNavigate = _utils2.default.getCurrentBrowserPathWithoutHash();\n        this.screens[path] = nextScreen;\n        this.isNavigationPending = false;\n        this.pendingNavigate = null;\n        _globals2.default.capturedFormElement = null;\n        _globals2.default.capturedFormButtonElement = null;\n        console.log('Navigation done');\n      }\n    }, {\n      key: \"findRoute\",\n      value: function findRoute(path) {\n        path = this.getRoutePath(path);\n\n        for (var i = 0; i < this.routes.length; i++) {\n          var route = this.routes[i];\n\n          if (route.matchesPath(path)) {\n            return route;\n          }\n        }\n\n        return null;\n      }\n    }, {\n      key: \"getAllowPreventNavigate\",\n      value: function getAllowPreventNavigate() {\n        return this.allowPreventNavigate;\n      }\n    }, {\n      key: \"getBasePath\",\n      value: function getBasePath() {\n        return this.basePath;\n      }\n    }, {\n      key: \"getDefaultTitle\",\n      value: function getDefaultTitle() {\n        return this.defaultTitle;\n      }\n    }, {\n      key: \"getFormSelector\",\n      value: function getFormSelector() {\n        return this.formSelector;\n      }\n    }, {\n      key: \"getIgnoreQueryStringFromRoutePath\",\n      value: function getIgnoreQueryStringFromRoutePath() {\n        return this.ignoreQueryStringFromRoutePath;\n      }\n    }, {\n      key: \"getLinkSelector\",\n      value: function getLinkSelector() {\n        return this.linkSelector;\n      }\n    }, {\n      key: \"getLoadingCssClass\",\n      value: function getLoadingCssClass() {\n        return this.loadingCssClass;\n      }\n    }, {\n      key: \"getRoutePath\",\n      value: function getRoutePath(path) {\n        if (this.getIgnoreQueryStringFromRoutePath()) {\n          path = _utils2.default.getUrlPathWithoutHashAndSearch(path);\n          return _utils2.default.getUrlPathWithoutHashAndSearch(path.substr(this.basePath.length));\n        }\n\n        path = _utils2.default.getUrlPathWithoutHash(path);\n        return _utils2.default.getUrlPathWithoutHash(path.substr(this.basePath.length));\n      }\n    }, {\n      key: \"getUpdateScrollPosition\",\n      value: function getUpdateScrollPosition() {\n        return this.updateScrollPosition;\n      }\n    }, {\n      key: \"handleNavigateError_\",\n      value: function handleNavigateError_(path, nextScreen, error) {\n        var _this6 = this;\n\n        console.log('Navigation error for [' + nextScreen + '] (' + error + ')');\n        this.emit('navigationError', {\n          error: error,\n          nextScreen: nextScreen,\n          path: path\n        });\n\n        if (!_utils2.default.isCurrentBrowserPath(path)) {\n          if (this.isNavigationPending && this.pendingNavigate) {\n            this.pendingNavigate.thenAlways(function () {\n              return _this6.removeScreen(path);\n            }, this);\n          } else {\n            this.removeScreen(path);\n          }\n        }\n      }\n    }, {\n      key: \"hasRoutes\",\n      value: function hasRoutes() {\n        return this.routes.length > 0;\n      }\n    }, {\n      key: \"isLinkSameOrigin_\",\n      value: function isLinkSameOrigin_(hostname) {\n        return hostname === _globals2.default.window.location.hostname;\n      }\n    }, {\n      key: \"isSameBasePath_\",\n      value: function isSameBasePath_(path) {\n        return path.indexOf(this.basePath) === 0;\n      }\n    }, {\n      key: \"lockHistoryScrollPosition_\",\n      value: function lockHistoryScrollPosition_() {\n        var state = _globals2.default.window.history.state;\n\n        if (!state) {\n          return;\n        } // Browsers are inconsistent when re-positioning the scroll history on\n        // popstate. At some browsers, history scroll happens before popstate, then\n        // lock the scroll on the last known position as soon as possible after the\n        // current JS execution context and capture the current value. Some others,\n        // history scroll happens after popstate, in this case, we bind an once\n        // scroll event to lock the las known position. Lastly, the previous two\n        // behaviors can happen even on the same browser, hence the race will decide\n        // the winner.\n\n\n        var winner = false;\n\n        var switchScrollPositionRace = function switchScrollPositionRace() {\n          _globals2.default.document.removeEventListener('scroll', switchScrollPositionRace, false);\n\n          if (!winner) {\n            _globals2.default.window.scrollTo(state.scrollLeft, state.scrollTop);\n\n            winner = true;\n          }\n        };\n\n        _metal.async.nextTick(switchScrollPositionRace);\n\n        _globals2.default.document.addEventListener('scroll', switchScrollPositionRace, false);\n      }\n    }, {\n      key: \"maybeDisableNativeScrollRestoration\",\n      value: function maybeDisableNativeScrollRestoration() {\n        if (this.nativeScrollRestorationSupported) {\n          this.nativeScrollRestoration_ = _globals2.default.window.history.scrollRestoration;\n          _globals2.default.window.history.scrollRestoration = 'manual';\n        }\n      }\n    }, {\n      key: \"maybeNavigate_\",\n      value: function maybeNavigate_(href, event) {\n        if (!this.canNavigate(href)) {\n          return;\n        }\n\n        _globals2.default.capturedFormElement = event.capturedFormElement;\n        _globals2.default.capturedFormButtonElement = event.capturedFormButtonElement;\n        var navigateFailed = false;\n\n        try {\n          this.navigate(_utils2.default.getUrlPath(href), false, event);\n        } catch (err) {\n          // Do not prevent link navigation in case some synchronous error occurs\n          navigateFailed = true;\n        }\n\n        if (!navigateFailed) {\n          event.preventDefault();\n        }\n      }\n    }, {\n      key: \"maybeOverloadBeforeUnload_\",\n      value: function maybeOverloadBeforeUnload_() {\n        var _this7 = this;\n\n        if ('function' === typeof window.onbeforeunload) {\n          window._onbeforeunload = window.onbeforeunload;\n\n          window.onbeforeunload = function (event) {\n            _this7.emit('beforeUnload', event);\n\n            if (event && event.defaultPrevented) {\n              return true;\n            }\n          }; // mark the updated handler due unwanted recursion \n\n\n          window.onbeforeunload._overloaded = true;\n        }\n      }\n    }, {\n      key: \"maybeRepositionScrollToHashedAnchor\",\n      value: function maybeRepositionScrollToHashedAnchor() {\n        var hash = _globals2.default.window.location.hash;\n\n        if (hash) {\n          var anchorElement = _globals2.default.document.getElementById(hash.substring(1));\n\n          if (anchorElement) {\n            var _utils$getNodeOffset = _utils2.default.getNodeOffset(anchorElement),\n                offsetLeft = _utils$getNodeOffset.offsetLeft,\n                offsetTop = _utils$getNodeOffset.offsetTop;\n\n            _globals2.default.window.scrollTo(offsetLeft, offsetTop);\n          }\n        }\n      }\n    }, {\n      key: \"maybeRestoreNativeScrollRestoration\",\n      value: function maybeRestoreNativeScrollRestoration() {\n        if (this.nativeScrollRestorationSupported && this.nativeScrollRestoration_) {\n          _globals2.default.window.history.scrollRestoration = this.nativeScrollRestoration_;\n        }\n      }\n    }, {\n      key: \"maybeRestoreRedirectPathHash_\",\n      value: function maybeRestoreRedirectPathHash_(path, redirectPath, hash) {\n        if (redirectPath === _utils2.default.getUrlPathWithoutHash(path)) {\n          return redirectPath + hash;\n        }\n\n        return redirectPath;\n      }\n    }, {\n      key: \"maybeUpdateScrollPositionState_\",\n      value: function maybeUpdateScrollPositionState_() {\n        var hash = _globals2.default.window.location.hash;\n\n        var anchorElement = _globals2.default.document.getElementById(hash.substring(1));\n\n        if (anchorElement) {\n          var _utils$getNodeOffset2 = _utils2.default.getNodeOffset(anchorElement),\n              offsetLeft = _utils$getNodeOffset2.offsetLeft,\n              offsetTop = _utils$getNodeOffset2.offsetTop;\n\n          this.saveHistoryCurrentPageScrollPosition_(offsetTop, offsetLeft);\n        }\n      }\n    }, {\n      key: \"navigate\",\n      value: function navigate(path, opt_replaceHistory, opt_event) {\n        if (!_utils2.default.isHtml5HistorySupported()) {\n          throw new Error('HTML5 History is not supported. Senna will not intercept navigation.');\n        } // When reloading the same path do replaceState instead of pushState to\n        // avoid polluting history with states with the same path.\n\n\n        if (path === this.activePath) {\n          opt_replaceHistory = true;\n        }\n\n        this.emit('beforeNavigate', {\n          event: opt_event,\n          path: path,\n          replaceHistory: !!opt_replaceHistory\n        });\n        return this.pendingNavigate;\n      }\n    }, {\n      key: \"onBeforeNavigate_\",\n      value: function onBeforeNavigate_(event) {\n        if (_globals2.default.capturedFormElement) {\n          event.form = _globals2.default.capturedFormElement;\n        }\n      }\n    }, {\n      key: \"onBeforeNavigateDefault_\",\n      value: function onBeforeNavigateDefault_(event) {\n        if (this.pendingNavigate) {\n          if (this.pendingNavigate.path === event.path) {\n            console.log('Waiting...');\n            return;\n          }\n        }\n\n        this.emit('beforeUnload', event);\n        this.emit('startNavigate', {\n          form: event.form,\n          path: event.path,\n          replaceHistory: event.replaceHistory\n        });\n      }\n    }, {\n      key: \"onBeforeUnloadDefault_\",\n      value: function onBeforeUnloadDefault_(event) {\n        var func = window._onbeforeunload;\n\n        if (func && !func._overloaded && func()) {\n          event.preventDefault();\n        }\n      }\n    }, {\n      key: \"onDocClickDelegate_\",\n      value: function onDocClickDelegate_(event) {\n        if (event.altKey || event.ctrlKey || event.metaKey || event.shiftKey || event.button) {\n          console.log('Navigate aborted, invalid mouse button or modifier key pressed.');\n          return;\n        }\n\n        this.maybeNavigate_(event.delegateTarget.href, event);\n      }\n    }, {\n      key: \"onDocSubmitDelegate_\",\n      value: function onDocSubmitDelegate_(event) {\n        var form = event.delegateTarget;\n\n        if (form.method === 'get') {\n          console.log('GET method not supported');\n          return;\n        }\n\n        event.capturedFormElement = form;\n        var buttonSelector = 'button:not([type]),button[type=submit],input[type=submit]';\n\n        if ((0, _metalDom.match)(_globals2.default.document.activeElement, buttonSelector)) {\n          event.capturedFormButtonElement = _globals2.default.document.activeElement;\n        } else {\n          event.capturedFormButtonElement = form.querySelector(buttonSelector);\n        }\n\n        this.maybeNavigate_(form.action, event);\n      }\n    }, {\n      key: \"onLoad_\",\n      value: function onLoad_() {\n        var _this8 = this;\n\n        this.skipLoadPopstate = true;\n        setTimeout(function () {\n          // The timeout ensures that popstate events will be unblocked right\n          // after the load event occured, but not in the same event-loop cycle.\n          _this8.skipLoadPopstate = false;\n        }, 0); // Try to reposition scroll to the hashed anchor when page loads.\n\n        this.maybeRepositionScrollToHashedAnchor();\n      }\n    }, {\n      key: \"onPopstate_\",\n      value: function onPopstate_(event) {\n        if (this.skipLoadPopstate) {\n          return;\n        } // Do not navigate if the popstate was triggered by a hash change.\n\n\n        if (_utils2.default.isCurrentBrowserPath(this.browserPathBeforeNavigate)) {\n          this.maybeRepositionScrollToHashedAnchor();\n          return;\n        }\n\n        var state = event.state;\n\n        if (!state) {\n          if (_globals2.default.window.location.hash) {\n            // If senna is on an redirect path and a hash popstate happens\n            // to a different url, reload the browser. This behavior doesn't\n            // require senna to route hashed links and is closer to native\n            // browser behavior.\n            if (this.redirectPath && !_utils2.default.isCurrentBrowserPath(this.redirectPath)) {\n              this.reloadPage();\n            } // Always try to reposition scroll to the hashed anchor when\n            // hash popstate happens.\n\n\n            this.maybeRepositionScrollToHashedAnchor();\n          } else {\n            this.reloadPage();\n          }\n\n          return;\n        }\n\n        if (state.senna) {\n          console.log('History navigation to [' + state.path + ']');\n          this.popstateScrollTop = state.scrollTop;\n          this.popstateScrollLeft = state.scrollLeft;\n\n          if (!this.nativeScrollRestorationSupported) {\n            this.lockHistoryScrollPosition_();\n          }\n\n          this.navigate(state.path, true);\n        }\n      }\n    }, {\n      key: \"onScroll_\",\n      value: function onScroll_() {\n        if (this.captureScrollPositionFromScrollEvent) {\n          this.saveHistoryCurrentPageScrollPosition_(_globals2.default.window.pageYOffset, _globals2.default.window.pageXOffset);\n        }\n      }\n    }, {\n      key: \"onStartNavigate_\",\n      value: function onStartNavigate_(event) {\n        var _this9 = this;\n\n        this.maybeDisableNativeScrollRestoration();\n        this.captureScrollPositionFromScrollEvent = false;\n        (0, _metalDom.addClasses)(_globals2.default.document.documentElement, this.loadingCssClass);\n        var endNavigatePayload = {\n          form: event.form,\n          path: event.path\n        };\n        this.pendingNavigate = this.doNavigate_(event.path, event.replaceHistory).catch(function (reason) {\n          endNavigatePayload.error = reason;\n          throw reason;\n        }).thenAlways(function () {\n          if (!_this9.pendingNavigate) {\n            (0, _metalDom.removeClasses)(_globals2.default.document.documentElement, _this9.loadingCssClass);\n\n            _this9.maybeRestoreNativeScrollRestoration();\n\n            _this9.captureScrollPositionFromScrollEvent = true;\n          }\n\n          _this9.emit('endNavigate', endNavigatePayload);\n        });\n        this.pendingNavigate.path = event.path;\n      }\n    }, {\n      key: \"prefetch\",\n      value: function prefetch(path) {\n        var _this10 = this;\n\n        var route = this.findRoute(path);\n\n        if (!route) {\n          return _metalPromise2.default.reject(new _metalPromise2.default.CancellationError('No route for ' + path));\n        }\n\n        console.log('Prefetching [' + path + ']');\n        var nextScreen = this.createScreenInstance(path, route);\n        return nextScreen.load(path).then(function () {\n          return _this10.screens[path] = nextScreen;\n        }).catch(function (reason) {\n          _this10.handleNavigateError_(path, nextScreen, reason);\n\n          throw reason;\n        });\n      }\n    }, {\n      key: \"prepareNavigateHistory_\",\n      value: function prepareNavigateHistory_(path, nextScreen, opt_replaceHistory) {\n        var title = nextScreen.getTitle();\n\n        if (!(0, _metal.isString)(title)) {\n          title = this.getDefaultTitle();\n        }\n\n        var redirectPath = nextScreen.beforeUpdateHistoryPath(path);\n        var historyState = {\n          form: (0, _metal.isDefAndNotNull)(_globals2.default.capturedFormElement),\n          path: path,\n          redirectPath: redirectPath,\n          scrollLeft: 0,\n          scrollTop: 0,\n          senna: true\n        };\n\n        if (opt_replaceHistory) {\n          historyState.scrollTop = this.popstateScrollTop;\n          historyState.scrollLeft = this.popstateScrollLeft;\n        }\n\n        var hash = new _metalUri2.default(path).getHash();\n        redirectPath = this.maybeRestoreRedirectPathHash_(path, redirectPath, hash);\n        this.updateHistory_(title, redirectPath, nextScreen.beforeUpdateHistoryState(historyState), opt_replaceHistory);\n        this.redirectPath = redirectPath;\n      }\n    }, {\n      key: \"prepareNavigateSurfaces_\",\n      value: function prepareNavigateSurfaces_(nextScreen, surfaces, params) {\n        Object.keys(surfaces).forEach(function (id) {\n          var surfaceContent = nextScreen.getSurfaceContent(id, params);\n          surfaces[id].addContent(nextScreen.getId(), surfaceContent);\n          console.log('Screen [' + nextScreen.getId() + '] add content to surface ' + '[' + surfaces[id] + '] [' + ((0, _metal.isDefAndNotNull)(surfaceContent) ? '...' : 'empty') + ']');\n        });\n      }\n    }, {\n      key: \"reloadPage\",\n      value: function reloadPage() {\n        _globals2.default.window.location.reload();\n      }\n    }, {\n      key: \"removeRoute\",\n      value: function removeRoute(route) {\n        return _metal.array.remove(this.routes, route);\n      }\n    }, {\n      key: \"removeScreen\",\n      value: function removeScreen(path) {\n        var _this11 = this;\n\n        var screen = this.screens[path];\n\n        if (screen) {\n          Object.keys(this.surfaces).forEach(function (surfaceId) {\n            return _this11.surfaces[surfaceId].remove(screen.getId());\n          });\n          screen.dispose();\n          delete this.screens[path];\n        }\n      }\n    }, {\n      key: \"saveHistoryCurrentPageScrollPosition_\",\n      value: function saveHistoryCurrentPageScrollPosition_(scrollTop, scrollLeft) {\n        var state = _globals2.default.window.history.state;\n\n        if (state && state.senna) {\n          var _ref = [scrollTop, scrollLeft];\n          state.scrollTop = _ref[0];\n          state.scrollLeft = _ref[1];\n\n          _globals2.default.window.history.replaceState(state, null, null);\n        }\n      }\n    }, {\n      key: \"setAllowPreventNavigate\",\n      value: function setAllowPreventNavigate(allowPreventNavigate) {\n        this.allowPreventNavigate = allowPreventNavigate;\n      }\n    }, {\n      key: \"setBasePath\",\n      value: function setBasePath(basePath) {\n        this.basePath = _utils2.default.removePathTrailingSlash(basePath);\n      }\n    }, {\n      key: \"setDefaultTitle\",\n      value: function setDefaultTitle(defaultTitle) {\n        this.defaultTitle = defaultTitle;\n      }\n    }, {\n      key: \"setFormSelector\",\n      value: function setFormSelector(formSelector) {\n        this.formSelector = formSelector;\n\n        if (this.formEventHandler_) {\n          this.formEventHandler_.removeListener();\n        }\n\n        this.formEventHandler_ = (0, _metalDom.delegate)(document, 'submit', this.formSelector, this.onDocSubmitDelegate_.bind(this), this.allowPreventNavigate);\n      }\n    }, {\n      key: \"setIgnoreQueryStringFromRoutePath\",\n      value: function setIgnoreQueryStringFromRoutePath(ignoreQueryStringFromRoutePath) {\n        this.ignoreQueryStringFromRoutePath = ignoreQueryStringFromRoutePath;\n      }\n    }, {\n      key: \"setLinkSelector\",\n      value: function setLinkSelector(linkSelector) {\n        this.linkSelector = linkSelector;\n\n        if (this.linkEventHandler_) {\n          this.linkEventHandler_.removeListener();\n        }\n\n        this.linkEventHandler_ = (0, _metalDom.delegate)(document, 'click', this.linkSelector, this.onDocClickDelegate_.bind(this), this.allowPreventNavigate);\n      }\n    }, {\n      key: \"setLoadingCssClass\",\n      value: function setLoadingCssClass(loadingCssClass) {\n        this.loadingCssClass = loadingCssClass;\n      }\n    }, {\n      key: \"setUpdateScrollPosition\",\n      value: function setUpdateScrollPosition(updateScrollPosition) {\n        this.updateScrollPosition = updateScrollPosition;\n      }\n    }, {\n      key: \"stopPendingNavigate_\",\n      value: function stopPendingNavigate_() {\n        if (this.pendingNavigate) {\n          this.pendingNavigate.cancel('Cancel pending navigation');\n          this.pendingNavigate = null;\n        }\n      }\n    }, {\n      key: \"syncScrollPositionSyncThenAsync_\",\n      value: function syncScrollPositionSyncThenAsync_() {\n        var _this12 = this;\n\n        var state = _globals2.default.window.history.state;\n\n        if (!state) {\n          return;\n        }\n\n        var scrollTop = state.scrollTop;\n        var scrollLeft = state.scrollLeft;\n\n        var sync = function sync() {\n          if (_this12.updateScrollPosition) {\n            _globals2.default.window.scrollTo(scrollLeft, scrollTop);\n          }\n        };\n\n        return new _metalPromise2.default(function (resolve) {\n          return sync() & _metal.async.nextTick(function () {\n            return sync() & resolve();\n          });\n        });\n      }\n    }, {\n      key: \"updateHistory_\",\n      value: function updateHistory_(title, path, state, opt_replaceHistory) {\n        if (opt_replaceHistory) {\n          _globals2.default.window.history.replaceState(state, title, path);\n        } else {\n          _globals2.default.window.history.pushState(state, title, path);\n        }\n\n        var titleNode = _globals2.default.document.querySelector('title');\n\n        if (titleNode) {\n          titleNode.innerHTML = title;\n        } else {\n          _globals2.default.document.title = title;\n        }\n      }\n    }]);\n\n    return App;\n  }(_metalEvents.EventEmitter);\n\n  exports.default = App;\n});"
        },
        {
          "id": 14,
          "identifier": "/Users/Liferay/trampo/senna.js/node_modules/metal-events/lib/EventHandle.js",
          "name": "./node_modules/metal-events/lib/EventHandle.js",
          "index": 26,
          "index2": 20,
          "size": 3443,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0
          ],
          "assets": [],
          "issuer": "/Users/Liferay/trampo/senna.js/node_modules/metal-events/lib/events.js",
          "issuerId": 6,
          "issuerName": "./node_modules/metal-events/lib/events.js",
          "profile": {
            "factory": 26,
            "building": 21,
            "dependencies": 13
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "reasons": [
            {
              "moduleId": 6,
              "moduleIdentifier": "/Users/Liferay/trampo/senna.js/node_modules/metal-events/lib/events.js",
              "module": "./node_modules/metal-events/lib/events.js",
              "moduleName": "./node_modules/metal-events/lib/events.js",
              "type": "cjs require",
              "userRequest": "./EventHandle",
              "loc": "16:19-43"
            },
            {
              "moduleId": 38,
              "moduleIdentifier": "/Users/Liferay/trampo/senna.js/node_modules/metal-events/lib/EventEmitter.js",
              "module": "./node_modules/metal-events/lib/EventEmitter.js",
              "moduleName": "./node_modules/metal-events/lib/EventEmitter.js",
              "type": "cjs require",
              "userRequest": "./EventHandle",
              "loc": "11:19-43"
            }
          ],
          "usedExports": true,
          "providedExports": null,
          "optimizationBailout": [
            "ModuleConcatenation bailout: Module is not an ECMAScript module"
          ],
          "depth": 3,
          "source": "'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _metal = require('metal');\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n/**\n * EventHandle utility. Holds information about an event subscription, and\n * allows removing them easily.\n * EventHandle is a Disposable, but it's important to note that the\n * EventEmitter that created it is not the one responsible for disposing it.\n * That responsibility is for the code that holds a reference to it.\n * @param {!EventEmitter} emitter Emitter the event was subscribed to.\n * @param {string} event The name of the event that was subscribed to.\n * @param {!Function} listener The listener subscribed to the event.\n * @constructor\n * @extends {Disposable}\n */\nvar EventHandle = function (_Disposable) {\n\t_inherits(EventHandle, _Disposable);\n\n\tfunction EventHandle(emitter, event, listener) {\n\t\t_classCallCheck(this, EventHandle);\n\n\t\t/**\n   * The EventEmitter instance that the event was subscribed to.\n   * @type {EventEmitter}\n   * @protected\n   */\n\t\tvar _this = _possibleConstructorReturn(this, (EventHandle.__proto__ || Object.getPrototypeOf(EventHandle)).call(this));\n\n\t\t_this.emitter_ = emitter;\n\n\t\t/**\n   * The name of the event that was subscribed to.\n   * @type {string}\n   * @protected\n   */\n\t\t_this.event_ = event;\n\n\t\t/**\n   * The listener subscribed to the event.\n   * @type {Function}\n   * @protected\n   */\n\t\t_this.listener_ = listener;\n\t\treturn _this;\n\t}\n\n\t/**\n  * Disposes of this instance's object references.\n  * @override\n  */\n\n\n\t_createClass(EventHandle, [{\n\t\tkey: 'disposeInternal',\n\t\tvalue: function disposeInternal() {\n\t\t\tthis.removeListener();\n\t\t\tthis.emitter_ = null;\n\t\t\tthis.listener_ = null;\n\t\t}\n\n\t\t/**\n   * Removes the listener subscription from the emitter.\n   */\n\n\t}, {\n\t\tkey: 'removeListener',\n\t\tvalue: function removeListener() {\n\t\t\tif (!this.emitter_.isDisposed()) {\n\t\t\t\tthis.emitter_.removeListener(this.event_, this.listener_);\n\t\t\t}\n\t\t}\n\t}]);\n\n\treturn EventHandle;\n}(_metal.Disposable);\n\nexports.default = EventHandle;"
        },
        {
          "id": 15,
          "identifier": "/Users/Liferay/trampo/senna.js/node_modules/metal-dom/lib/DomEventHandle.js",
          "name": "./node_modules/metal-dom/lib/DomEventHandle.js",
          "index": 36,
          "index2": 29,
          "size": 2880,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0
          ],
          "assets": [],
          "issuer": "/Users/Liferay/trampo/senna.js/node_modules/metal-dom/lib/all/dom.js",
          "issuerId": 7,
          "issuerName": "./node_modules/metal-dom/lib/all/dom.js",
          "profile": {
            "factory": 8,
            "building": 49,
            "dependencies": 11
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "reasons": [
            {
              "moduleId": 7,
              "moduleIdentifier": "/Users/Liferay/trampo/senna.js/node_modules/metal-dom/lib/all/dom.js",
              "module": "./node_modules/metal-dom/lib/all/dom.js",
              "moduleName": "./node_modules/metal-dom/lib/all/dom.js",
              "type": "cjs require",
              "userRequest": "../DomEventHandle",
              "loc": "30:22-50"
            },
            {
              "moduleId": 42,
              "moduleIdentifier": "/Users/Liferay/trampo/senna.js/node_modules/metal-dom/lib/domNamed.js",
              "module": "./node_modules/metal-dom/lib/domNamed.js",
              "moduleName": "./node_modules/metal-dom/lib/domNamed.js",
              "type": "cjs require",
              "userRequest": "./DomEventHandle",
              "loc": "41:22-49"
            }
          ],
          "usedExports": true,
          "providedExports": null,
          "optimizationBailout": [
            "ModuleConcatenation bailout: Module is not an ECMAScript module"
          ],
          "depth": 3,
          "source": "'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _metalEvents = require('metal-events');\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n/**\n * This is a special EventHandle, that is responsible for dom events, instead\n * of EventEmitter events.\n * @extends {EventHandle}\n */\nvar DomEventHandle = function (_EventHandle) {\n\t_inherits(DomEventHandle, _EventHandle);\n\n\t/**\n  * The constructor for `DomEventHandle`.\n  * @param {!EventEmitter} emitter Emitter the event was subscribed to.\n  * @param {string} event The name of the event that was subscribed to.\n  * @param {!Function} listener The listener subscribed to the event.\n  * @param {boolean} opt_capture Flag indicating if listener should be triggered\n  *   during capture phase, instead of during the bubbling phase. Defaults to false.\n  * @constructor\n  */\n\tfunction DomEventHandle(emitter, event, listener, opt_capture) {\n\t\t_classCallCheck(this, DomEventHandle);\n\n\t\tvar _this = _possibleConstructorReturn(this, (DomEventHandle.__proto__ || Object.getPrototypeOf(DomEventHandle)).call(this, emitter, event, listener));\n\n\t\t_this.capture_ = opt_capture;\n\t\treturn _this;\n\t}\n\n\t/**\n  * @inheritDoc\n  */\n\n\n\t_createClass(DomEventHandle, [{\n\t\tkey: 'removeListener',\n\t\tvalue: function removeListener() {\n\t\t\tthis.emitter_.removeEventListener(this.event_, this.listener_, this.capture_);\n\t\t}\n\t}]);\n\n\treturn DomEventHandle;\n}(_metalEvents.EventHandle);\n\nexports.default = DomEventHandle;"
        },
        {
          "id": 16,
          "identifier": "/Users/Liferay/trampo/senna.js/node_modules/metal-dom/lib/features.js",
          "name": "./node_modules/metal-dom/lib/features.js",
          "index": 38,
          "index2": 33,
          "size": 3174,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0
          ],
          "assets": [],
          "issuer": "/Users/Liferay/trampo/senna.js/node_modules/metal-dom/lib/all/dom.js",
          "issuerId": 7,
          "issuerName": "./node_modules/metal-dom/lib/all/dom.js",
          "profile": {
            "factory": 8,
            "building": 46,
            "dependencies": 14
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "reasons": [
            {
              "moduleId": 7,
              "moduleIdentifier": "/Users/Liferay/trampo/senna.js/node_modules/metal-dom/lib/all/dom.js",
              "module": "./node_modules/metal-dom/lib/all/dom.js",
              "moduleName": "./node_modules/metal-dom/lib/all/dom.js",
              "type": "cjs require",
              "userRequest": "../features",
              "loc": "34:16-38"
            },
            {
              "moduleId": 47,
              "moduleIdentifier": "/Users/Liferay/trampo/senna.js/node_modules/metal-dom/lib/events.js",
              "module": "./node_modules/metal-dom/lib/events.js",
              "moduleName": "./node_modules/metal-dom/lib/events.js",
              "type": "cjs require",
              "userRequest": "./features",
              "loc": "5:16-37"
            }
          ],
          "usedExports": true,
          "providedExports": null,
          "optimizationBailout": [
            "ModuleConcatenation bailout: Module is not an ECMAScript module"
          ],
          "depth": 3,
          "source": "'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _dom = require('./dom');\n\nvar _metal = require('metal');\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\n * Class with static methods responsible for doing browser feature checks.\n */\nvar features = function () {\n\tfunction features() {\n\t\t_classCallCheck(this, features);\n\t}\n\n\t_createClass(features, null, [{\n\t\tkey: 'checkAnimationEventName',\n\n\t\t/**\n   * Some browsers still supports prefixed animation events. This method can\n   * be used to retrieve the current browser event name for both, animation\n   * and transition.\n   * @return {object}\n   */\n\t\tvalue: function checkAnimationEventName() {\n\t\t\tif (features.animationEventName_ === undefined) {\n\t\t\t\tfeatures.animationEventName_ = {\n\t\t\t\t\tanimation: features.checkAnimationEventName_('animation'),\n\t\t\t\t\ttransition: features.checkAnimationEventName_('transition')\n\t\t\t\t};\n\t\t\t}\n\t\t\treturn features.animationEventName_;\n\t\t}\n\n\t\t/**\n   * @protected\n   * @param {string} type Type to test: animation, transition.\n   * @return {string} Browser event name.\n   */\n\n\t}, {\n\t\tkey: 'checkAnimationEventName_',\n\t\tvalue: function checkAnimationEventName_(type) {\n\t\t\tvar prefixes = ['Webkit', 'MS', 'O', ''];\n\t\t\tvar typeTitleCase = _metal.string.replaceInterval(type, 0, 1, type.substring(0, 1).toUpperCase());\n\t\t\tvar suffixes = [typeTitleCase + 'End', typeTitleCase + 'End', typeTitleCase + 'End', type + 'end'];\n\t\t\tfor (var i = 0; i < prefixes.length; i++) {\n\t\t\t\tif (features.animationElement_.style[prefixes[i] + typeTitleCase] !== undefined) {\n\t\t\t\t\treturn prefixes[i].toLowerCase() + suffixes[i];\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn type + 'end';\n\t\t}\n\n\t\t/**\n   * Some browsers (like IE9) change the order of element attributes, when html\n   * is rendered. This method can be used to check if this behavior happens on\n   * the current browser.\n   * @return {boolean}\n   */\n\n\t}, {\n\t\tkey: 'checkAttrOrderChange',\n\t\tvalue: function checkAttrOrderChange() {\n\t\t\tif (features.attrOrderChange_ === undefined) {\n\t\t\t\tvar originalContent = '<div data-component=\"\" data-ref=\"\"></div>';\n\t\t\t\tvar element = document.createElement('div');\n\t\t\t\t(0, _dom.append)(element, originalContent);\n\t\t\t\tfeatures.attrOrderChange_ = originalContent !== element.innerHTML;\n\t\t\t}\n\t\t\treturn features.attrOrderChange_;\n\t\t}\n\t}]);\n\n\treturn features;\n}();\n\nfeatures.animationElement_ = document.createElement('div');\nfeatures.animationEventName_ = undefined;\nfeatures.attrOrderChange_ = undefined;\n\nexports.default = features;"
        },
        {
          "id": 17,
          "identifier": "/Users/Liferay/trampo/senna.js/node_modules/babel-loader/lib/index.js??ref--0!/Users/Liferay/trampo/senna.js/src/surface/Surface.js",
          "name": "./src/surface/Surface.js",
          "index": 46,
          "index2": 42,
          "size": 9734,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0
          ],
          "assets": [],
          "issuer": "/Users/Liferay/trampo/senna.js/node_modules/babel-loader/lib/index.js??ref--0!/Users/Liferay/trampo/senna.js/src/app/App.js",
          "issuerId": 13,
          "issuerName": "./src/app/App.js",
          "profile": {
            "factory": 283,
            "building": 134,
            "dependencies": 44
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "reasons": [
            {
              "moduleId": 13,
              "moduleIdentifier": "/Users/Liferay/trampo/senna.js/node_modules/babel-loader/lib/index.js??ref--0!/Users/Liferay/trampo/senna.js/src/app/App.js",
              "module": "./src/app/App.js",
              "moduleName": "./src/app/App.js",
              "type": "amd require",
              "userRequest": "../surface/Surface",
              "loc": "1:0-1185:2"
            },
            {
              "moduleId": 18,
              "moduleIdentifier": "/Users/Liferay/trampo/senna.js/node_modules/babel-loader/lib/index.js??ref--0!/Users/Liferay/trampo/senna.js/src/screen/HtmlScreen.js",
              "module": "./src/screen/HtmlScreen.js",
              "moduleName": "./src/screen/HtmlScreen.js",
              "type": "amd require",
              "userRequest": "../surface/Surface",
              "loc": "1:0-425:2"
            }
          ],
          "usedExports": true,
          "providedExports": null,
          "optimizationBailout": [
            "ModuleConcatenation bailout: Module is not an ECMAScript module"
          ],
          "depth": 2,
          "source": "define([\"exports\", \"../globals/globals\", \"metal\", \"metal-dom\", \"metal-promise\"], function (exports, _globals, _metal, _metalDom, _metalPromise) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n\n  var _globals2 = _interopRequireDefault(_globals);\n\n  var _metalPromise2 = _interopRequireDefault(_metalPromise);\n\n  function _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n      default: obj\n    };\n  }\n\n  function _typeof(obj) {\n    if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n      _typeof = function _typeof(obj) {\n        return typeof obj;\n      };\n    } else {\n      _typeof = function _typeof(obj) {\n        return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n      };\n    }\n\n    return _typeof(obj);\n  }\n\n  function _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n      throw new TypeError(\"Cannot call a class as a function\");\n    }\n  }\n\n  function _defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  function _createClass(Constructor, protoProps, staticProps) {\n    if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) _defineProperties(Constructor, staticProps);\n    return Constructor;\n  }\n\n  function _possibleConstructorReturn(self, call) {\n    if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n      return call;\n    }\n\n    if (!self) {\n      throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }\n\n    return self;\n  }\n\n  function _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n      throw new TypeError(\"Super expression must either be null or a function\");\n    }\n\n    subClass.prototype = Object.create(superClass && superClass.prototype, {\n      constructor: {\n        value: subClass,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n    if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n  }\n\n  var Surface = function (_Disposable) {\n    _inherits(Surface, _Disposable);\n\n    /**\n     * Surface class representing the references to elements on the page that\n     * can potentially be updated by <code>App</code>.\n     * @param {string} id\n     * @constructor\n     */\n    function Surface(id) {\n      var _this;\n\n      _classCallCheck(this, Surface);\n\n      _this = _possibleConstructorReturn(this, (Surface.__proto__ || Object.getPrototypeOf(Surface)).call(this));\n\n      if (!id) {\n        throw new Error('Surface element id not specified. A surface element requires a valid id.');\n      }\n      /**\n       * Holds the active child element.\n       * @type {Element}\n       * @default null\n       * @protected\n       */\n\n\n      _this.activeChild = null;\n      /**\n       * Holds the default child element.\n       * @type {Element}\n       * @default null\n       * @protected\n       */\n\n      _this.defaultChild = null;\n      /**\n       * Holds the element with the specified surface id, if not found creates a\n       * new element with the specified id.\n       * @type {Element}\n       * @default null\n       * @protected\n       */\n\n      _this.element = null;\n      /**\n       * Holds the surface id.\n       * @type {String}\n       * @default null\n       * @protected\n       */\n\n      _this.id = id;\n      /**\n       * Holds the default transitionFn for the surfaces.\n       * @param {?Element=} from The visible surface element.\n       * @param {?Element=} to The surface element to be flipped.\n       * @default null\n       */\n\n      _this.transitionFn = null;\n      _this.defaultChild = _this.getChild(Surface.DEFAULT);\n\n      _this.maybeWrapContentAsDefault_();\n\n      _this.activeChild = _this.defaultChild;\n      return _this;\n    }\n    /**\n     * Adds screen content to a surface. If content hasn't been passed, see if\n     * an element exists in the DOM that matches the id. By convention, the\n     * element should already be nested in the right element and should have an\n     * id that is a concatentation of the surface id + '-' + the screen id.\n     * @param {!string} screenId The screen id the content belongs too.\n     * @param {?string|Element=} opt_content The string content or element to\n     *     add be added as surface content.\n     * @return {Element}\n     */\n\n\n    _createClass(Surface, [{\n      key: \"addContent\",\n      value: function addContent(screenId, opt_content) {\n        var child = this.defaultChild;\n\n        if ((0, _metal.isDefAndNotNull)(opt_content)) {\n          child = this.getChild(screenId);\n\n          if (child) {\n            (0, _metalDom.removeChildren)(child);\n          } else {\n            child = this.createChild(screenId);\n            this.transition(child, null);\n          }\n\n          (0, _metalDom.append)(child, opt_content);\n        }\n\n        var element = this.getElement();\n\n        if (element && child) {\n          (0, _metalDom.append)(element, child);\n        }\n\n        return child;\n      }\n    }, {\n      key: \"createChild\",\n      value: function createChild(screenId) {\n        var child = _globals2.default.document.createElement('div');\n\n        child.setAttribute('id', this.makeId_(screenId));\n        return child;\n      }\n    }, {\n      key: \"getChild\",\n      value: function getChild(screenId) {\n        return _globals2.default.document.getElementById(this.makeId_(screenId));\n      }\n    }, {\n      key: \"getElement\",\n      value: function getElement() {\n        if (this.element) {\n          return this.element;\n        }\n\n        this.element = _globals2.default.document.getElementById(this.id);\n        return this.element;\n      }\n    }, {\n      key: \"getId\",\n      value: function getId() {\n        return this.id;\n      }\n    }, {\n      key: \"getTransitionFn\",\n      value: function getTransitionFn() {\n        return this.transitionFn;\n      }\n    }, {\n      key: \"makeId_\",\n      value: function makeId_(screenId) {\n        return this.id + '-' + screenId;\n      }\n    }, {\n      key: \"maybeWrapContentAsDefault_\",\n      value: function maybeWrapContentAsDefault_() {\n        var element = this.getElement();\n\n        if (element && !this.defaultChild) {\n          var fragment = _globals2.default.document.createDocumentFragment();\n\n          while (element.firstChild) {\n            fragment.appendChild(element.firstChild);\n          }\n\n          this.defaultChild = this.addContent(Surface.DEFAULT, fragment);\n          this.transition(null, this.defaultChild);\n        }\n      }\n    }, {\n      key: \"setId\",\n      value: function setId(id) {\n        this.id = id;\n      }\n    }, {\n      key: \"setTransitionFn\",\n      value: function setTransitionFn(transitionFn) {\n        this.transitionFn = transitionFn;\n      }\n    }, {\n      key: \"show\",\n      value: function show(screenId) {\n        var from = this.activeChild;\n        var to = this.getChild(screenId);\n\n        if (!to) {\n          to = this.defaultChild;\n        }\n\n        this.activeChild = to;\n        return this.transition(from, to).thenAlways(function () {\n          if (from && from !== to) {\n            (0, _metalDom.exitDocument)(from);\n          }\n        });\n      }\n    }, {\n      key: \"remove\",\n      value: function remove(screenId) {\n        var child = this.getChild(screenId);\n\n        if (child) {\n          (0, _metalDom.exitDocument)(child);\n        }\n      }\n    }, {\n      key: \"toString\",\n      value: function toString() {\n        return this.id;\n      }\n    }, {\n      key: \"transition\",\n      value: function transition(from, to) {\n        var transitionFn = this.transitionFn || Surface.defaultTransition;\n        return _metalPromise2.default.resolve(transitionFn.call(this, from, to));\n      }\n    }]);\n\n    return Surface;\n  }(_metal.Disposable);\n\n  /**\n     * Holds the default surface name. Elements on the page must contain a child\n     * element containing the default content, this element must be as following:\n     *\n     * Example:\n     * <code>\n     *   <div id=\"mysurface\">\n     *     <div id=\"mysurface-default\">Default surface content.</div>\n     *   </div>\n     * </code>\n     *\n     * The default content is relevant for the initial page content. When a\n     * screen doesn't provide content for the surface the default content is\n     * restored into the page.\n     *\n     * @type {!String}\n     * @default default\n     * @static\n     */\n  Surface.DEFAULT = 'default';\n  /**\n   * Holds the default transition for all surfaces. Each surface could have its\n   * own transition.\n   *\n   * Example:\n   *\n   * <code>\n   * surface.setTransitionFn(function(from, to) {\n   *   if (from) {\n   *     from.style.display = 'none';\n   *     from.classList.remove('flipped');\n   *   }\n   *   if (to) {\n   *     to.style.display = 'block';\n   *     to.classList.add('flipped');\n   *   }\n   *   return null;\n   * });\n   * </code>\n   *\n   * @param {?Element=} from The visible surface element.\n   * @param {?Element=} to The surface element to be flipped.\n   * @static\n   */\n\n  Surface.defaultTransition = function (from, to) {\n    if (from) {\n      from.style.display = 'none';\n      from.classList.remove('flipped');\n    }\n\n    if (to) {\n      to.style.display = 'block';\n      to.classList.add('flipped');\n    }\n  };\n\n  exports.default = Surface;\n});"
        },
        {
          "id": 18,
          "identifier": "/Users/Liferay/trampo/senna.js/node_modules/babel-loader/lib/index.js??ref--0!/Users/Liferay/trampo/senna.js/src/screen/HtmlScreen.js",
          "name": "./src/screen/HtmlScreen.js",
          "index": 47,
          "index2": 48,
          "size": 14342,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0
          ],
          "assets": [],
          "issuer": "/Users/Liferay/trampo/senna.js/node_modules/babel-loader/lib/index.js??ref--0!/Users/Liferay/trampo/senna.js/src/senna.js",
          "issuerId": 21,
          "issuerName": "./src/senna.js",
          "profile": {
            "factory": 18,
            "building": 558,
            "dependencies": 360
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "reasons": [
            {
              "moduleId": 21,
              "moduleIdentifier": "/Users/Liferay/trampo/senna.js/node_modules/babel-loader/lib/index.js??ref--0!/Users/Liferay/trampo/senna.js/src/senna.js",
              "module": "./src/senna.js",
              "moduleName": "./src/senna.js",
              "type": "amd require",
              "userRequest": "./screen/HtmlScreen",
              "loc": "1:0-37:2"
            },
            {
              "moduleId": 36,
              "moduleIdentifier": "/Users/Liferay/trampo/senna.js/node_modules/babel-loader/lib/index.js??ref--0!/Users/Liferay/trampo/senna.js/src/app/AppDataAttributeHandler.js",
              "module": "./src/app/AppDataAttributeHandler.js",
              "moduleName": "./src/app/AppDataAttributeHandler.js",
              "type": "amd require",
              "userRequest": "../screen/HtmlScreen",
              "loc": "1:0-300:2"
            }
          ],
          "usedExports": true,
          "providedExports": null,
          "optimizationBailout": [
            "ModuleConcatenation bailout: Module is not an ECMAScript module"
          ],
          "depth": 1,
          "source": "define([\"exports\", \"metal\", \"metal-dom\", \"metal-promise\", \"../globals/globals\", \"./RequestScreen\", \"../surface/Surface\", \"metal-useragent\", \"metal-uri\", \"../utils/utils\"], function (exports, _metal, _metalDom, _metalPromise, _globals, _RequestScreen2, _Surface, _metalUseragent, _metalUri, _utils) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n\n  var _metalPromise2 = _interopRequireDefault(_metalPromise);\n\n  var _globals2 = _interopRequireDefault(_globals);\n\n  var _RequestScreen3 = _interopRequireDefault(_RequestScreen2);\n\n  var _Surface2 = _interopRequireDefault(_Surface);\n\n  var _metalUseragent2 = _interopRequireDefault(_metalUseragent);\n\n  var _metalUri2 = _interopRequireDefault(_metalUri);\n\n  var _utils2 = _interopRequireDefault(_utils);\n\n  function _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n      default: obj\n    };\n  }\n\n  function _typeof(obj) {\n    if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n      _typeof = function _typeof(obj) {\n        return typeof obj;\n      };\n    } else {\n      _typeof = function _typeof(obj) {\n        return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n      };\n    }\n\n    return _typeof(obj);\n  }\n\n  function _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n      throw new TypeError(\"Cannot call a class as a function\");\n    }\n  }\n\n  function _defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  function _createClass(Constructor, protoProps, staticProps) {\n    if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) _defineProperties(Constructor, staticProps);\n    return Constructor;\n  }\n\n  function _possibleConstructorReturn(self, call) {\n    if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n      return call;\n    }\n\n    if (!self) {\n      throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }\n\n    return self;\n  }\n\n  function _get(object, property, receiver) {\n    if (object === null) object = Function.prototype;\n    var desc = Object.getOwnPropertyDescriptor(object, property);\n\n    if (desc === undefined) {\n      var parent = Object.getPrototypeOf(object);\n\n      if (parent === null) {\n        return undefined;\n      } else {\n        return _get(parent, property, receiver);\n      }\n    } else if (\"value\" in desc) {\n      return desc.value;\n    } else {\n      var getter = desc.get;\n\n      if (getter === undefined) {\n        return undefined;\n      }\n\n      return getter.call(receiver);\n    }\n  }\n\n  function _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n      throw new TypeError(\"Super expression must either be null or a function\");\n    }\n\n    subClass.prototype = Object.create(superClass && superClass.prototype, {\n      constructor: {\n        value: subClass,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n    if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n  }\n\n  var HtmlScreen = function (_RequestScreen) {\n    _inherits(HtmlScreen, _RequestScreen);\n\n    /**\n     * Screen class that perform a request and extracts surface contents from\n     * the response content.\n     * @constructor\n     * @extends {RequestScreen}\n     */\n    function HtmlScreen() {\n      var _this;\n\n      _classCallCheck(this, HtmlScreen);\n\n      _this = _possibleConstructorReturn(this, (HtmlScreen.__proto__ || Object.getPrototypeOf(HtmlScreen)).call(this));\n      /**\n       * Holds the title selector. Relevant to extract the <code><title></code>\n       * element from request fragments to use as the screen title.\n       * @type {!string}\n       * @default title\n       * @protected\n       */\n\n      _this.titleSelector = 'title';\n      return _this;\n    }\n    /**\n     * @inheritDoc\n     */\n\n\n    _createClass(HtmlScreen, [{\n      key: \"activate\",\n      value: function activate() {\n        _get(HtmlScreen.prototype.__proto__ || Object.getPrototypeOf(HtmlScreen.prototype), \"activate\", this).call(this);\n\n        this.releaseVirtualDocument();\n        this.pendingStyles = null;\n      }\n    }, {\n      key: \"allocateVirtualDocumentForContent\",\n      value: function allocateVirtualDocumentForContent(htmlString) {\n        if (!this.virtualDocument) {\n          this.virtualDocument = _globals2.default.document.createElement('html');\n        }\n\n        this.copyNodeAttributesFromContent_(htmlString, this.virtualDocument);\n        this.virtualDocument.innerHTML = htmlString;\n      }\n    }, {\n      key: \"appendStyleIntoDocument_\",\n      value: function appendStyleIntoDocument_(newStyle) {\n        var isTemporaryStyle = (0, _metalDom.match)(newStyle, HtmlScreen.selectors.stylesTemporary);\n\n        if (isTemporaryStyle) {\n          this.pendingStyles.push(newStyle);\n        }\n\n        if (newStyle.id) {\n          var styleInDoc = _globals2.default.document.getElementById(newStyle.id);\n\n          if (styleInDoc) {\n            styleInDoc.parentNode.insertBefore(newStyle, styleInDoc.nextSibling);\n            return;\n          }\n        }\n\n        _globals2.default.document.head.appendChild(newStyle);\n      }\n    }, {\n      key: \"assertSameBodyIdInVirtualDocument\",\n      value: function assertSameBodyIdInVirtualDocument() {\n        var bodySurface = this.virtualDocument.querySelector('body');\n\n        if (!_globals2.default.document.body.id) {\n          _globals2.default.document.body.id = 'senna_surface_' + (0, _metal.getUid)();\n        }\n\n        if (bodySurface) {\n          bodySurface.id = _globals2.default.document.body.id;\n        }\n      }\n    }, {\n      key: \"copyNodeAttributesFromContent_\",\n      value: function copyNodeAttributesFromContent_(content, node) {\n        content = content.replace(/[<]\\s*html/ig, '<senna');\n        content = content.replace(/\\/html\\s*\\>/ig, '/senna>');\n        node.innerHTML = content;\n        var placeholder = node.querySelector('senna');\n\n        if (placeholder) {\n          _utils2.default.clearNodeAttributes(node);\n\n          _utils2.default.copyNodeAttributes(placeholder, node);\n        }\n      }\n    }, {\n      key: \"disposeInternal\",\n      value: function disposeInternal() {\n        this.disposePendingStyles();\n\n        _get(HtmlScreen.prototype.__proto__ || Object.getPrototypeOf(HtmlScreen.prototype), \"disposeInternal\", this).call(this);\n      }\n    }, {\n      key: \"disposePendingStyles\",\n      value: function disposePendingStyles() {\n        if (this.pendingStyles) {\n          this.pendingStyles.forEach(function (style) {\n            return (0, _metalDom.exitDocument)(style);\n          });\n        }\n      }\n    }, {\n      key: \"evaluateScripts\",\n      value: function evaluateScripts(surfaces) {\n        var _this2 = this;\n\n        var evaluateTrackedScripts = this.evaluateTrackedResources_(_metalDom.globalEval.runScriptsInElement, HtmlScreen.selectors.scripts, HtmlScreen.selectors.scriptsTemporary, HtmlScreen.selectors.scriptsPermanent);\n        return evaluateTrackedScripts.then(function () {\n          return _get(HtmlScreen.prototype.__proto__ || Object.getPrototypeOf(HtmlScreen.prototype), \"evaluateScripts\", _this2).call(_this2, surfaces);\n        });\n      }\n    }, {\n      key: \"evaluateStyles\",\n      value: function evaluateStyles(surfaces) {\n        var _this3 = this;\n\n        this.pendingStyles = [];\n        var evaluateTrackedStyles = this.evaluateTrackedResources_(_metalDom.globalEvalStyles.runStylesInElement, HtmlScreen.selectors.styles, HtmlScreen.selectors.stylesTemporary, HtmlScreen.selectors.stylesPermanent, this.appendStyleIntoDocument_.bind(this));\n        return evaluateTrackedStyles.then(function () {\n          return _get(HtmlScreen.prototype.__proto__ || Object.getPrototypeOf(HtmlScreen.prototype), \"evaluateStyles\", _this3).call(_this3, surfaces);\n        });\n      }\n    }, {\n      key: \"evaluateTrackedResources_\",\n      value: function evaluateTrackedResources_(evaluatorFn, selector, selectorTemporary, selectorPermanent, opt_appendResourceFn) {\n        var _this4 = this;\n\n        var tracked = this.virtualQuerySelectorAll_(selector);\n        var temporariesInDoc = this.querySelectorAll_(selectorTemporary);\n        var permanentsInDoc = this.querySelectorAll_(selectorPermanent); // Adds permanent resources in document to cache.\n\n        permanentsInDoc.forEach(function (resource) {\n          var resourceKey = _this4.getResourceKey_(resource);\n\n          if (resourceKey) {\n            HtmlScreen.permanentResourcesInDoc[resourceKey] = true;\n          }\n        });\n        var frag = (0, _metalDom.buildFragment)();\n        tracked.forEach(function (resource) {\n          var resourceKey = _this4.getResourceKey_(resource); // Do not load permanent resources if already in document.\n\n\n          if (!HtmlScreen.permanentResourcesInDoc[resourceKey]) {\n            frag.appendChild(resource);\n          } // If resource has key and is permanent add to cache.\n\n\n          if (resourceKey && (0, _metalDom.match)(resource, selectorPermanent)) {\n            HtmlScreen.permanentResourcesInDoc[resourceKey] = true;\n          }\n        });\n        return new _metalPromise2.default(function (resolve) {\n          evaluatorFn(frag, function () {\n            temporariesInDoc.forEach(function (resource) {\n              return (0, _metalDom.exitDocument)(resource);\n            });\n            resolve();\n          }, opt_appendResourceFn);\n        });\n      }\n    }, {\n      key: \"flip\",\n      value: function flip(surfaces) {\n        var _this5 = this;\n\n        return _get(HtmlScreen.prototype.__proto__ || Object.getPrototypeOf(HtmlScreen.prototype), \"flip\", this).call(this, surfaces).then(function () {\n          _utils2.default.clearNodeAttributes(document.documentElement);\n\n          _utils2.default.copyNodeAttributes(_this5.virtualDocument, document.documentElement);\n        });\n      }\n    }, {\n      key: \"getResourceKey_\",\n      value: function getResourceKey_(resource) {\n        return resource.id || resource.href || resource.src || '';\n      }\n    }, {\n      key: \"getSurfaceContent\",\n      value: function getSurfaceContent(surfaceId) {\n        var surface = this.virtualDocument.querySelector('#' + surfaceId);\n\n        if (surface) {\n          var defaultChild = surface.querySelector('#' + surfaceId + '-' + _Surface2.default.DEFAULT);\n\n          if (defaultChild) {\n            return defaultChild.innerHTML;\n          }\n\n          return surface.innerHTML; // If default content not found, use surface content\n        }\n      }\n    }, {\n      key: \"getTitleSelector\",\n      value: function getTitleSelector() {\n        return this.titleSelector;\n      }\n    }, {\n      key: \"load\",\n      value: function load(path) {\n        var _this6 = this;\n\n        return _get(HtmlScreen.prototype.__proto__ || Object.getPrototypeOf(HtmlScreen.prototype), \"load\", this).call(this, path).then(function (content) {\n          _this6.allocateVirtualDocumentForContent(content);\n\n          _this6.resolveTitleFromVirtualDocument();\n\n          _this6.assertSameBodyIdInVirtualDocument();\n\n          if (_metalUseragent2.default.isIe) {\n            _this6.makeTemporaryStylesHrefsUnique_();\n          }\n\n          return content;\n        });\n      }\n    }, {\n      key: \"makeTemporaryStylesHrefsUnique_\",\n      value: function makeTemporaryStylesHrefsUnique_() {\n        var _this7 = this;\n\n        var temporariesInDoc = this.virtualQuerySelectorAll_(HtmlScreen.selectors.stylesTemporary);\n        temporariesInDoc.forEach(function (style) {\n          return _this7.replaceStyleAndMakeUnique_(style);\n        });\n      }\n    }, {\n      key: \"replaceStyleAndMakeUnique_\",\n      value: function replaceStyleAndMakeUnique_(style) {\n        if (style.href) {\n          var newStyle = _globals2.default.document.createElement(style.tagName);\n\n          style.href = new _metalUri2.default(style.href).makeUnique().toString();\n\n          _utils2.default.copyNodeAttributes(style, newStyle);\n\n          style.parentNode.replaceChild(newStyle, style);\n          style.disabled = true;\n        }\n      }\n    }, {\n      key: \"virtualQuerySelectorAll_\",\n      value: function virtualQuerySelectorAll_(selector) {\n        return Array.prototype.slice.call(this.virtualDocument.querySelectorAll(selector));\n      }\n    }, {\n      key: \"querySelectorAll_\",\n      value: function querySelectorAll_(selector) {\n        return Array.prototype.slice.call(_globals2.default.document.querySelectorAll(selector));\n      }\n    }, {\n      key: \"releaseVirtualDocument\",\n      value: function releaseVirtualDocument() {\n        this.virtualDocument = null;\n      }\n    }, {\n      key: \"resolveTitleFromVirtualDocument\",\n      value: function resolveTitleFromVirtualDocument() {\n        var title = this.virtualDocument.querySelector(this.titleSelector);\n\n        if (title) {\n          this.setTitle(title.textContent.trim());\n        }\n      }\n    }, {\n      key: \"setTitleSelector\",\n      value: function setTitleSelector(titleSelector) {\n        this.titleSelector = titleSelector;\n      }\n    }]);\n\n    return HtmlScreen;\n  }(_RequestScreen3.default);\n\n  /**\n   * Helper selectors for tracking resources.\n   * @type {object}\n   * @protected\n   * @static\n   */\n  HtmlScreen.selectors = {\n    scripts: 'script[data-senna-track]',\n    scriptsPermanent: 'script[data-senna-track=\"permanent\"]',\n    scriptsTemporary: 'script[data-senna-track=\"temporary\"]',\n    styles: 'style[data-senna-track],link[data-senna-track]',\n    stylesPermanent: 'style[data-senna-track=\"permanent\"],link[data-senna-track=\"permanent\"]',\n    stylesTemporary: 'style[data-senna-track=\"temporary\"],link[data-senna-track=\"temporary\"]'\n  };\n  /**\n   * Caches permanent resource keys.\n   * @type {object}\n   * @protected\n   * @static\n   */\n\n  HtmlScreen.permanentResourcesInDoc = {};\n  exports.default = HtmlScreen;\n});"
        },
        {
          "id": 19,
          "identifier": "/Users/Liferay/trampo/senna.js/node_modules/babel-loader/lib/index.js??ref--0!/Users/Liferay/trampo/senna.js/src/screen/RequestScreen.js",
          "name": "./src/screen/RequestScreen.js",
          "index": 48,
          "index2": 47,
          "size": 11101,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0
          ],
          "assets": [],
          "issuer": "/Users/Liferay/trampo/senna.js/node_modules/babel-loader/lib/index.js??ref--0!/Users/Liferay/trampo/senna.js/src/senna.js",
          "issuerId": 21,
          "issuerName": "./src/senna.js",
          "profile": {
            "factory": 18,
            "building": 632,
            "dependencies": 286
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "reasons": [
            {
              "moduleId": 18,
              "moduleIdentifier": "/Users/Liferay/trampo/senna.js/node_modules/babel-loader/lib/index.js??ref--0!/Users/Liferay/trampo/senna.js/src/screen/HtmlScreen.js",
              "module": "./src/screen/HtmlScreen.js",
              "moduleName": "./src/screen/HtmlScreen.js",
              "type": "amd require",
              "userRequest": "./RequestScreen",
              "loc": "1:0-425:2"
            },
            {
              "moduleId": 21,
              "moduleIdentifier": "/Users/Liferay/trampo/senna.js/node_modules/babel-loader/lib/index.js??ref--0!/Users/Liferay/trampo/senna.js/src/senna.js",
              "module": "./src/senna.js",
              "moduleName": "./src/senna.js",
              "type": "amd require",
              "userRequest": "./screen/RequestScreen",
              "loc": "1:0-37:2"
            }
          ],
          "usedExports": true,
          "providedExports": null,
          "optimizationBailout": [
            "ModuleConcatenation bailout: Module is not an ECMAScript module"
          ],
          "depth": 1,
          "source": "define([\"exports\", \"metal\", \"metal-ajax\", \"metal-structs\", \"metal-promise\", \"../errors/errors\", \"../utils/utils\", \"../globals/globals\", \"./Screen\", \"metal-uri\", \"metal-useragent\"], function (exports, _metal, _metalAjax, _metalStructs, _metalPromise, _errors, _utils, _globals, _Screen2, _metalUri, _metalUseragent) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n\n  var _metalAjax2 = _interopRequireDefault(_metalAjax);\n\n  var _metalPromise2 = _interopRequireDefault(_metalPromise);\n\n  var _errors2 = _interopRequireDefault(_errors);\n\n  var _utils2 = _interopRequireDefault(_utils);\n\n  var _globals2 = _interopRequireDefault(_globals);\n\n  var _Screen3 = _interopRequireDefault(_Screen2);\n\n  var _metalUri2 = _interopRequireDefault(_metalUri);\n\n  var _metalUseragent2 = _interopRequireDefault(_metalUseragent);\n\n  function _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n      default: obj\n    };\n  }\n\n  function _typeof(obj) {\n    if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n      _typeof = function _typeof(obj) {\n        return typeof obj;\n      };\n    } else {\n      _typeof = function _typeof(obj) {\n        return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n      };\n    }\n\n    return _typeof(obj);\n  }\n\n  function _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n      throw new TypeError(\"Cannot call a class as a function\");\n    }\n  }\n\n  function _defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  function _createClass(Constructor, protoProps, staticProps) {\n    if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) _defineProperties(Constructor, staticProps);\n    return Constructor;\n  }\n\n  function _possibleConstructorReturn(self, call) {\n    if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n      return call;\n    }\n\n    if (!self) {\n      throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }\n\n    return self;\n  }\n\n  function _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n      throw new TypeError(\"Super expression must either be null or a function\");\n    }\n\n    subClass.prototype = Object.create(superClass && superClass.prototype, {\n      constructor: {\n        value: subClass,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n    if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n  }\n\n  var RequestScreen = function (_Screen) {\n    _inherits(RequestScreen, _Screen);\n\n    /**\n     * Request screen abstract class to perform io operations on descendant\n     * screens.\n     * @constructor\n     * @extends {Screen}\n     */\n    function RequestScreen() {\n      var _this;\n\n      _classCallCheck(this, RequestScreen);\n\n      _this = _possibleConstructorReturn(this, (RequestScreen.__proto__ || Object.getPrototypeOf(RequestScreen)).call(this));\n      /**\n       * @inheritDoc\n       * @default true\n       */\n\n      _this.cacheable = true;\n      /**\n       * Holds default http headers to set on request.\n       * @type {?Object=}\n       * @default {\n       *   'X-PJAX': 'true',\n       *   'X-Requested-With': 'XMLHttpRequest'\n       * }\n       * @protected\n       */\n\n      _this.httpHeaders = {\n        'X-PJAX': 'true',\n        'X-Requested-With': 'XMLHttpRequest'\n      };\n      /**\n       * Holds default http method to perform the request.\n       * @type {!string}\n       * @default RequestScreen.GET\n       * @protected\n       */\n\n      _this.httpMethod = RequestScreen.GET;\n      /**\n       * Holds the XHR object responsible for the request.\n       * @type {XMLHttpRequest}\n       * @default null\n       * @protected\n       */\n\n      _this.request = null;\n      /**\n       * Holds the request timeout in milliseconds.\n       * @type {!number}\n       * @default 30000\n       * @protected\n       */\n\n      _this.timeout = 30000;\n      return _this;\n    }\n    /**\n     * Asserts that response status code is valid.\n     * @param {number} status\n     * @protected\n     */\n\n\n    _createClass(RequestScreen, [{\n      key: \"assertValidResponseStatusCode\",\n      value: function assertValidResponseStatusCode(status) {\n        if (!this.isValidResponseStatusCode(status)) {\n          var error = new Error(_errors2.default.INVALID_STATUS);\n          error.invalidStatus = true;\n          error.statusCode = status;\n          throw error;\n        }\n      }\n    }, {\n      key: \"beforeUpdateHistoryPath\",\n      value: function beforeUpdateHistoryPath(path) {\n        var redirectPath = this.getRequestPath();\n\n        if (redirectPath && redirectPath !== path) {\n          return redirectPath;\n        }\n\n        return path;\n      }\n    }, {\n      key: \"beforeUpdateHistoryState\",\n      value: function beforeUpdateHistoryState(state) {\n        // If state is ours and navigate to post-without-redirect-get set\n        // history state to null, that way Senna will reload the page on\n        // popstate since it cannot predict post data.\n        if (state.senna && state.form && state.redirectPath === state.path) {\n          return null;\n        }\n\n        return state;\n      }\n    }, {\n      key: \"formatLoadPath\",\n      value: function formatLoadPath(path) {\n        var uri = new _metalUri2.default(path);\n        uri.setHostname(_globals2.default.window.location.hostname);\n        uri.setProtocol(_globals2.default.window.location.protocol);\n\n        if (_globals2.default.window.location.port) {\n          uri.setPort(_globals2.default.window.location.port);\n        }\n\n        if (_metalUseragent2.default.isIeOrEdge && this.httpMethod === RequestScreen.GET) {\n          return uri.makeUnique().toString();\n        }\n\n        return uri.toString();\n      }\n    }, {\n      key: \"getHttpHeaders\",\n      value: function getHttpHeaders() {\n        return this.httpHeaders;\n      }\n    }, {\n      key: \"getHttpMethod\",\n      value: function getHttpMethod() {\n        return this.httpMethod;\n      }\n    }, {\n      key: \"getRequestPath\",\n      value: function getRequestPath() {\n        var request = this.getRequest();\n\n        if (request) {\n          var requestPath = request.requestPath;\n          var responseUrl = this.maybeExtractResponseUrlFromRequest(request);\n\n          if (responseUrl) {\n            requestPath = responseUrl;\n          }\n\n          if (_metalUseragent2.default.isIeOrEdge && this.httpMethod === RequestScreen.GET) {\n            requestPath = new _metalUri2.default(requestPath).removeUnique().toString();\n          }\n\n          return _utils2.default.getUrlPath(requestPath);\n        }\n\n        return null;\n      }\n    }, {\n      key: \"getRequest\",\n      value: function getRequest() {\n        return this.request;\n      }\n    }, {\n      key: \"getTimeout\",\n      value: function getTimeout() {\n        return this.timeout;\n      }\n    }, {\n      key: \"isValidResponseStatusCode\",\n      value: function isValidResponseStatusCode(statusCode) {\n        return statusCode >= 200 && statusCode <= 399;\n      }\n    }, {\n      key: \"load\",\n      value: function load(path) {\n        var _this2 = this;\n\n        var cache = this.getCache();\n\n        if ((0, _metal.isDefAndNotNull)(cache)) {\n          return _metalPromise2.default.resolve(cache);\n        }\n\n        var body = null;\n        var httpMethod = this.httpMethod;\n        var headers = new _metalStructs.MultiMap();\n        Object.keys(this.httpHeaders).forEach(function (header) {\n          return headers.add(header, _this2.httpHeaders[header]);\n        });\n\n        if (_globals2.default.capturedFormElement) {\n          body = new FormData(_globals2.default.capturedFormElement);\n          this.maybeAppendSubmitButtonValue_(body);\n          httpMethod = RequestScreen.POST;\n\n          if (_metalUseragent2.default.isIeOrEdge) {\n            headers.add('If-None-Match', '\"0\"');\n          }\n        }\n\n        var requestPath = this.formatLoadPath(path);\n        return _metalAjax2.default.request(requestPath, httpMethod, body, headers, null, this.timeout).then(function (xhr) {\n          _this2.setRequest(xhr);\n\n          _this2.assertValidResponseStatusCode(xhr.status);\n\n          if (httpMethod === RequestScreen.GET && _this2.isCacheable()) {\n            _this2.addCache(xhr.responseText);\n          }\n\n          xhr.requestPath = requestPath;\n          return xhr.responseText;\n        }).catch(function (reason) {\n          switch (reason.message) {\n            case _errors2.default.REQUEST_TIMEOUT:\n              reason.timeout = true;\n              break;\n\n            case _errors2.default.REQUEST_ERROR:\n              reason.requestError = true;\n              break;\n\n            case _errors2.default.REQUEST_PREMATURE_TERMINATION:\n              reason.requestError = true;\n              reason.requestPrematureTermination = true;\n              break;\n          }\n\n          throw reason;\n        });\n      }\n    }, {\n      key: \"maybeAppendSubmitButtonValue_\",\n      value: function maybeAppendSubmitButtonValue_(body) {\n        var button = _globals2.default.capturedFormButtonElement;\n\n        if (button && button.name) {\n          body.append(button.name, button.value);\n        }\n      }\n    }, {\n      key: \"maybeExtractResponseUrlFromRequest\",\n      value: function maybeExtractResponseUrlFromRequest(request) {\n        var responseUrl = request.responseURL;\n\n        if (responseUrl) {\n          return responseUrl;\n        }\n\n        return request.getResponseHeader(RequestScreen.X_REQUEST_URL_HEADER);\n      }\n    }, {\n      key: \"setHttpHeaders\",\n      value: function setHttpHeaders(httpHeaders) {\n        this.httpHeaders = httpHeaders;\n      }\n    }, {\n      key: \"setHttpMethod\",\n      value: function setHttpMethod(httpMethod) {\n        this.httpMethod = httpMethod.toLowerCase();\n      }\n    }, {\n      key: \"setRequest\",\n      value: function setRequest(request) {\n        this.request = request;\n      }\n    }, {\n      key: \"setTimeout\",\n      value: function setTimeout(timeout) {\n        this.timeout = timeout;\n      }\n    }]);\n\n    return RequestScreen;\n  }(_Screen3.default);\n\n  /**\n   * Holds value for method get.\n   * @type {string}\n   * @default 'get'\n   * @static\n   */\n  RequestScreen.GET = 'get';\n  /**\n   * Holds value for method post.\n   * @type {string}\n   * @default 'post'\n   * @static\n   */\n\n  RequestScreen.POST = 'post';\n  /**\n   * Fallback http header to retrieve response request url.\n   * @type {string}\n   * @default 'X-Request-URL'\n   * @static\n   */\n\n  RequestScreen.X_REQUEST_URL_HEADER = 'X-Request-URL';\n  exports.default = RequestScreen;\n});"
        },
        {
          "id": 20,
          "identifier": "/Users/Liferay/trampo/senna.js/node_modules/metal-useragent/lib/UA.js",
          "name": "./node_modules/metal-useragent/lib/UA.js",
          "index": 51,
          "index2": 46,
          "size": 5007,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0
          ],
          "assets": [],
          "issuer": "/Users/Liferay/trampo/senna.js/node_modules/babel-loader/lib/index.js??ref--0!/Users/Liferay/trampo/senna.js/src/screen/HtmlScreen.js",
          "issuerId": 18,
          "issuerName": "./src/screen/HtmlScreen.js",
          "profile": {
            "factory": 359,
            "building": 12
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "reasons": [
            {
              "moduleId": 18,
              "moduleIdentifier": "/Users/Liferay/trampo/senna.js/node_modules/babel-loader/lib/index.js??ref--0!/Users/Liferay/trampo/senna.js/src/screen/HtmlScreen.js",
              "module": "./src/screen/HtmlScreen.js",
              "moduleName": "./src/screen/HtmlScreen.js",
              "type": "amd require",
              "userRequest": "metal-useragent",
              "loc": "1:0-425:2"
            },
            {
              "moduleId": 19,
              "moduleIdentifier": "/Users/Liferay/trampo/senna.js/node_modules/babel-loader/lib/index.js??ref--0!/Users/Liferay/trampo/senna.js/src/screen/RequestScreen.js",
              "module": "./src/screen/RequestScreen.js",
              "moduleName": "./src/screen/RequestScreen.js",
              "type": "amd require",
              "userRequest": "metal-useragent",
              "loc": "1:0-387:2"
            }
          ],
          "usedExports": true,
          "providedExports": null,
          "optimizationBailout": [
            "ModuleConcatenation bailout: Module is not an ECMAScript module"
          ],
          "depth": 2,
          "source": "'use strict';\n\n/**\n * Metal.js browser user agent detection. It's extremely recommended the usage\n * of feature checking over browser user agent sniffing. Unfortunately, in some\n * situations feature checking can be slow or even impossible, therefore use\n * this utility with caution.\n * @see <a href=\"http://www.useragentstring.com/\">User agent strings</a>.\n */\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar UA = function () {\n\tfunction UA() {\n\t\t_classCallCheck(this, UA);\n\t}\n\n\t_createClass(UA, null, [{\n\t\tkey: 'getNativeUserAgent',\n\n\t\t/**\n   * Gets the native userAgent string from navigator if it exists. If\n   * navigator or navigator.userAgent string is missing, returns an empty\n   * string.\n   * @return {string}\n   * @private\n   * @static\n   */\n\t\tvalue: function getNativeUserAgent() {\n\t\t\tvar navigator = UA.globals.window.navigator;\n\t\t\tif (navigator) {\n\t\t\t\tvar userAgent = navigator.userAgent;\n\t\t\t\tif (userAgent) {\n\t\t\t\t\treturn userAgent;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn '';\n\t\t}\n\n\t\t/**\n   * Gets the native platform string from navigator if it exists. If\n   * navigator or navigator.platform string is missing, returns an empty\n   * string.\n   * @return {string}\n   * @private\n   * @static\n   */\n\n\t}, {\n\t\tkey: 'getNativePlatform',\n\t\tvalue: function getNativePlatform() {\n\t\t\tvar navigator = UA.globals.window.navigator;\n\t\t\tif (navigator) {\n\t\t\t\tvar platform = navigator.platform;\n\t\t\t\tif (platform) {\n\t\t\t\t\treturn platform;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn '';\n\t\t}\n\n\t\t/**\n   * Whether the platform contains the given string, ignoring case.\n   * @param {string} str\n   * @return {boolean}\n   * @private\n   * @static\n  */\n\n\t}, {\n\t\tkey: 'matchPlatform',\n\t\tvalue: function matchPlatform(str) {\n\t\t\treturn UA.platform.indexOf(str) !== -1;\n\t\t}\n\n\t\t/**\n   * Whether the user agent contains the given string, ignoring case.\n   * @param {string} str\n   * @return {boolean}\n   * @private\n   * @static\n  */\n\n\t}, {\n\t\tkey: 'matchUserAgent',\n\t\tvalue: function matchUserAgent(str) {\n\t\t\treturn UA.userAgent.indexOf(str) !== -1;\n\t\t}\n\n\t\t/**\n   * Tests the user agent.\n   * @param {string} userAgent The user agent string.\n   * @static\n   */\n\n\t}, {\n\t\tkey: 'testUserAgent',\n\t\tvalue: function testUserAgent() {\n\t\t\tvar userAgent = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n\t\t\tvar platform = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n\n\t\t\t/**\n    * Holds the user agent value extracted from browser native user agent.\n    * @type {string}\n    * @static\n    */\n\t\t\tUA.userAgent = userAgent;\n\n\t\t\t/**\n    * Holds the platform value extracted from browser native platform.\n    * @type {string}\n    * @static\n    */\n\t\t\tUA.platform = platform;\n\n\t\t\t/**\n    * Whether the user's OS is Mac.\n    * @type {boolean}\n    * @static\n    */\n\t\t\tUA.isMac = UA.matchPlatform('Mac');\n\n\t\t\t/**\n    * Whether the user's OS is Win.\n    * @type {boolean}\n    * @static\n    */\n\t\t\tUA.isWin = UA.matchPlatform('Win');\n\n\t\t\t/**\n    * Whether the user's browser is Opera.\n    * @type {boolean}\n    * @static\n    */\n\t\t\tUA.isOpera = UA.matchUserAgent('Opera') || UA.matchUserAgent('OPR');\n\n\t\t\t/**\n    * Whether the user's browser is IE.\n    * @type {boolean}\n    * @static\n    */\n\t\t\tUA.isIe = UA.matchUserAgent('Trident') || UA.matchUserAgent('MSIE');\n\n\t\t\t/**\n    * Whether the user's browser is Edge.\n    * @type {boolean}\n    * @static\n    */\n\t\t\tUA.isEdge = UA.matchUserAgent('Edge');\n\n\t\t\t/**\n    * Whether the user's browser is IE or Edge.\n    * @type {boolean}\n    * @static\n    */\n\t\t\tUA.isIeOrEdge = UA.isIe || UA.isEdge;\n\n\t\t\t/**\n    * Whether the user's browser is Chrome.\n    * @type {boolean}\n    * @static\n    */\n\t\t\tUA.isChrome = (UA.matchUserAgent('Chrome') || UA.matchUserAgent('CriOS')) && !UA.isOpera && !UA.isEdge;\n\n\t\t\t/**\n    * Whether the user's browser is Safari.\n    * @type {boolean}\n    * @static\n    */\n\t\t\tUA.isSafari = UA.matchUserAgent('Safari') && !(UA.isChrome || UA.isOpera || UA.isEdge);\n\n\t\t\t/**\n    * Whether the user's browser is Firefox.\n    * @type {boolean}\n    * @static\n    */\n\t\t\tUA.isFirefox = UA.matchUserAgent('Firefox');\n\t\t}\n\t}]);\n\n\treturn UA;\n}();\n\n/**\n * Exposes global references.\n * @type {object}\n * @static\n */\n\n\nUA.globals = {\n\twindow: window\n};\n\nUA.testUserAgent(UA.getNativeUserAgent(), UA.getNativePlatform());\n\nexports.default = UA;"
        },
        {
          "id": 21,
          "identifier": "/Users/Liferay/trampo/senna.js/node_modules/babel-loader/lib/index.js??ref--0!/Users/Liferay/trampo/senna.js/src/senna.js",
          "name": "./src/senna.js",
          "index": 0,
          "index2": 51,
          "size": 1359,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0
          ],
          "assets": [],
          "issuer": null,
          "issuerId": null,
          "issuerName": null,
          "profile": {
            "factory": 106,
            "building": 384
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "reasons": [],
          "usedExports": true,
          "providedExports": null,
          "optimizationBailout": [
            "ModuleConcatenation bailout: Module is not an ECMAScript module"
          ],
          "depth": 0,
          "source": "define([\"exports\", \"./utils/utils\", \"./app/dataAttributeHandler\", \"./app/App\", \"./screen/HtmlScreen\", \"./screen/RequestScreen\", \"./route/Route\", \"./screen/Screen\"], function (exports, _utils, _dataAttributeHandler, _App, _HtmlScreen, _RequestScreen, _Route, _Screen) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.Screen = exports.RequestScreen = exports.Route = exports.HtmlScreen = exports.App = exports.utils = exports.dataAttributeHandler = undefined;\n\n  var _utils2 = _interopRequireDefault(_utils);\n\n  var _dataAttributeHandler2 = _interopRequireDefault(_dataAttributeHandler);\n\n  var _App2 = _interopRequireDefault(_App);\n\n  var _HtmlScreen2 = _interopRequireDefault(_HtmlScreen);\n\n  var _RequestScreen2 = _interopRequireDefault(_RequestScreen);\n\n  var _Route2 = _interopRequireDefault(_Route);\n\n  var _Screen2 = _interopRequireDefault(_Screen);\n\n  function _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n      default: obj\n    };\n  }\n\n  exports.default = _App2.default;\n  exports.dataAttributeHandler = _dataAttributeHandler2.default;\n  exports.utils = _utils2.default;\n  exports.App = _App2.default;\n  exports.HtmlScreen = _HtmlScreen2.default;\n  exports.Route = _Route2.default;\n  exports.RequestScreen = _RequestScreen2.default;\n  exports.Screen = _Screen2.default;\n});"
        },
        {
          "id": 22,
          "identifier": "/Users/Liferay/trampo/senna.js/node_modules/metal-uri/lib/Uri.js",
          "name": "./node_modules/metal-uri/lib/Uri.js",
          "index": 4,
          "index2": 14,
          "size": 14745,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0
          ],
          "assets": [],
          "issuer": "/Users/Liferay/trampo/senna.js/node_modules/metal-uri/node.js",
          "issuerId": 4,
          "issuerName": "./node_modules/metal-uri/node.js",
          "profile": {
            "factory": 32,
            "building": 9,
            "dependencies": 14
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "reasons": [
            {
              "moduleId": 4,
              "moduleIdentifier": "/Users/Liferay/trampo/senna.js/node_modules/metal-uri/node.js",
              "module": "./node_modules/metal-uri/node.js",
              "moduleName": "./node_modules/metal-uri/node.js",
              "type": "cjs require",
              "userRequest": "./lib/Uri",
              "loc": "3:10-30"
            }
          ],
          "usedExports": true,
          "providedExports": null,
          "optimizationBailout": [
            "ModuleConcatenation bailout: Module is not an ECMAScript module"
          ],
          "depth": 3,
          "source": "'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\n\nvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _metal = require('metal');\n\nvar _parse = require('./parse');\n\nvar _parse2 = _interopRequireDefault(_parse);\n\nvar _metalStructs = require('metal-structs');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar parseFn_ = _parse2.default;\n\nvar Uri = function () {\n\n\t/**\n  * This class contains setters and getters for the parts of the URI.\n  * The following figure displays an example URIs and their component parts.\n  *\n  *                                  path\n  *\t                             ┌───┴────┐\n  *\t  abc://example.com:123/path/data?key=value#fragid1\n  *\t  └┬┘   └────┬────┘ └┬┘           └───┬───┘ └──┬──┘\n  * protocol  hostname  port            search    hash\n  *          └──────┬───────┘\n  *                host\n  *\n  * @param {*=} opt_uri Optional string URI to parse\n  * @constructor\n  */\n\tfunction Uri() {\n\t\tvar opt_uri = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n\n\t\t_classCallCheck(this, Uri);\n\n\t\tthis.url = Uri.parse(this.maybeAddProtocolAndHostname_(opt_uri));\n\t}\n\n\t/**\n  * Adds parameters to uri from a <code>MultiMap</code> as source.\n  * @param {MultiMap} multimap The <code>MultiMap</code> containing the\n  *   parameters.\n  * @protected\n  * @chainable\n  */\n\n\n\t_createClass(Uri, [{\n\t\tkey: 'addParametersFromMultiMap',\n\t\tvalue: function addParametersFromMultiMap(multimap) {\n\t\t\tvar _this = this;\n\n\t\t\tmultimap.names().forEach(function (name) {\n\t\t\t\tmultimap.getAll(name).forEach(function (value) {\n\t\t\t\t\t_this.addParameterValue(name, value);\n\t\t\t\t});\n\t\t\t});\n\t\t\treturn this;\n\t\t}\n\n\t\t/**\n   * Adds the value of the named query parameters.\n   * @param {string} key The parameter to set.\n   * @param {*} value The new value. Will be explicitly casted to String.\n   * @chainable\n   */\n\n\t}, {\n\t\tkey: 'addParameterValue',\n\t\tvalue: function addParameterValue(name, value) {\n\t\t\tthis.ensureQueryInitialized_();\n\t\t\tif ((0, _metal.isDef)(value)) {\n\t\t\t\tvalue = String(value);\n\t\t\t}\n\t\t\tthis.query.add(name, value);\n\t\t\treturn this;\n\t\t}\n\n\t\t/**\n   * Adds the values of the named query parameter.\n   * @param {string} key The parameter to set.\n   * @param {*} value The new value.\n   * @chainable\n   */\n\n\t}, {\n\t\tkey: 'addParameterValues',\n\t\tvalue: function addParameterValues(name, values) {\n\t\t\tvar _this2 = this;\n\n\t\t\tvalues.forEach(function (value) {\n\t\t\t\treturn _this2.addParameterValue(name, value);\n\t\t\t});\n\t\t\treturn this;\n\t\t}\n\n\t\t/**\n   * Ensures query internal map is initialized and synced with initial value\n   * extracted from URI search part.\n   * @protected\n   */\n\n\t}, {\n\t\tkey: 'ensureQueryInitialized_',\n\t\tvalue: function ensureQueryInitialized_() {\n\t\t\tvar _this3 = this;\n\n\t\t\tif (this.query) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tthis.query = new _metalStructs.MultiMap();\n\t\t\tvar search = this.url.search;\n\t\t\tif (search) {\n\t\t\t\tsearch.substring(1).split('&').forEach(function (param) {\n\t\t\t\t\tvar _param$split = param.split('='),\n\t\t\t\t\t    _param$split2 = _slicedToArray(_param$split, 2),\n\t\t\t\t\t    key = _param$split2[0],\n\t\t\t\t\t    value = _param$split2[1];\n\n\t\t\t\t\tif ((0, _metal.isDef)(value)) {\n\t\t\t\t\t\tvalue = Uri.urlDecode(value);\n\t\t\t\t\t}\n\t\t\t\t\t_this3.addParameterValue(key, value);\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\t/**\n   * Gets the hash part of uri.\n   * @return {string}\n   */\n\n\t}, {\n\t\tkey: 'getHash',\n\t\tvalue: function getHash() {\n\t\t\treturn this.url.hash || '';\n\t\t}\n\n\t\t/**\n   * Gets the host part of uri. E.g. <code>[hostname]:[port]</code>.\n   * @return {string}\n   */\n\n\t}, {\n\t\tkey: 'getHost',\n\t\tvalue: function getHost() {\n\t\t\tvar host = this.getHostname();\n\t\t\tif (host) {\n\t\t\t\tvar port = this.getPort();\n\t\t\t\tif (port && port !== '80') {\n\t\t\t\t\thost += ':' + port;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn host;\n\t\t}\n\n\t\t/**\n   * Gets the hostname part of uri without protocol and port.\n   * @return {string}\n   */\n\n\t}, {\n\t\tkey: 'getHostname',\n\t\tvalue: function getHostname() {\n\t\t\tvar hostname = this.url.hostname;\n\t\t\tif (hostname === Uri.HOSTNAME_PLACEHOLDER) {\n\t\t\t\treturn '';\n\t\t\t}\n\t\t\treturn hostname;\n\t\t}\n\n\t\t/**\n   * Gets the origin part of uri. E.g. <code>http://[hostname]:[port]</code>.\n   * @return {string}\n   */\n\n\t}, {\n\t\tkey: 'getOrigin',\n\t\tvalue: function getOrigin() {\n\t\t\tvar host = this.getHost();\n\t\t\tif (host) {\n\t\t\t\treturn this.getProtocol() + '//' + host;\n\t\t\t}\n\t\t\treturn '';\n\t\t}\n\n\t\t/**\n   * Returns the first value for a given parameter or undefined if the given\n   * parameter name does not appear in the query string.\n   * @param {string} paramName Unescaped parameter name.\n   * @return {string|undefined} The first value for a given parameter or\n   *   undefined if the given parameter name does not appear in the query\n   *   string.\n   */\n\n\t}, {\n\t\tkey: 'getParameterValue',\n\t\tvalue: function getParameterValue(name) {\n\t\t\tthis.ensureQueryInitialized_();\n\t\t\treturn this.query.get(name);\n\t\t}\n\n\t\t/**\n   * Returns the value<b>s</b> for a given parameter as a list of decoded\n   * query parameter values.\n   * @param {string} name The parameter to get values for.\n   * @return {!Array<?>} The values for a given parameter as a list of decoded\n   *   query parameter values.\n   */\n\n\t}, {\n\t\tkey: 'getParameterValues',\n\t\tvalue: function getParameterValues(name) {\n\t\t\tthis.ensureQueryInitialized_();\n\t\t\treturn this.query.getAll(name);\n\t\t}\n\n\t\t/**\n   * Returns the name<b>s</b> of the parameters.\n   * @return {!Array<string>} The names for the parameters as a list of\n   *   strings.\n   */\n\n\t}, {\n\t\tkey: 'getParameterNames',\n\t\tvalue: function getParameterNames() {\n\t\t\tthis.ensureQueryInitialized_();\n\t\t\treturn this.query.names();\n\t\t}\n\n\t\t/**\n   * Gets the function currently being used to parse URIs.\n   * @return {!function()}\n   */\n\n\t}, {\n\t\tkey: 'getPathname',\n\n\n\t\t/**\n   * Gets the pathname part of uri.\n   * @return {string}\n   */\n\t\tvalue: function getPathname() {\n\t\t\treturn this.url.pathname;\n\t\t}\n\n\t\t/**\n   * Gets the port number part of uri as string.\n   * @return {string}\n   */\n\n\t}, {\n\t\tkey: 'getPort',\n\t\tvalue: function getPort() {\n\t\t\treturn this.url.port;\n\t\t}\n\n\t\t/**\n   * Gets the protocol part of uri. E.g. <code>http:</code>.\n   * @return {string}\n   */\n\n\t}, {\n\t\tkey: 'getProtocol',\n\t\tvalue: function getProtocol() {\n\t\t\treturn this.url.protocol;\n\t\t}\n\n\t\t/**\n   * Gets the search part of uri. Search value is retrieved from query\n   * parameters.\n   * @return {string}\n   */\n\n\t}, {\n\t\tkey: 'getSearch',\n\t\tvalue: function getSearch() {\n\t\t\tvar _this4 = this;\n\n\t\t\tvar search = '';\n\t\t\tvar querystring = '';\n\t\t\tthis.getParameterNames().forEach(function (name) {\n\t\t\t\t_this4.getParameterValues(name).forEach(function (value) {\n\t\t\t\t\tquerystring += name;\n\t\t\t\t\tif ((0, _metal.isDef)(value)) {\n\t\t\t\t\t\tquerystring += '=' + encodeURIComponent(value);\n\t\t\t\t\t}\n\t\t\t\t\tquerystring += '&';\n\t\t\t\t});\n\t\t\t});\n\t\t\tquerystring = querystring.slice(0, -1);\n\t\t\tif (querystring) {\n\t\t\t\tsearch += '?' + querystring;\n\t\t\t}\n\t\t\treturn search;\n\t\t}\n\n\t\t/**\n   * Checks if uri contains the parameter.\n   * @param {string} name\n   * @return {boolean}\n   */\n\n\t}, {\n\t\tkey: 'hasParameter',\n\t\tvalue: function hasParameter(name) {\n\t\t\tthis.ensureQueryInitialized_();\n\t\t\treturn this.query.contains(name);\n\t\t}\n\n\t\t/**\n   * Makes this URL unique by adding a random param to it. Useful for avoiding\n   * cache.\n   */\n\n\t}, {\n\t\tkey: 'makeUnique',\n\t\tvalue: function makeUnique() {\n\t\t\tthis.setParameterValue(Uri.RANDOM_PARAM, _metal.string.getRandomString());\n\t\t\treturn this;\n\t\t}\n\n\t\t/**\n   * Maybe adds protocol and a hostname placeholder on a parial URI if needed.\n   * Relevent for compatibility with <code>URL</code> native object.\n   * @param {string=} opt_uri\n   * @return {string} URI with protocol and hostname placeholder.\n   */\n\n\t}, {\n\t\tkey: 'maybeAddProtocolAndHostname_',\n\t\tvalue: function maybeAddProtocolAndHostname_(opt_uri) {\n\t\t\tvar url = opt_uri;\n\t\t\tif (opt_uri.indexOf('://') === -1 && opt_uri.indexOf('javascript:') !== 0) {\n\t\t\t\t// jshint ignore:line\n\n\t\t\t\turl = Uri.DEFAULT_PROTOCOL;\n\t\t\t\tif (opt_uri[0] !== '/' || opt_uri[1] !== '/') {\n\t\t\t\t\turl += '//';\n\t\t\t\t}\n\n\t\t\t\tswitch (opt_uri.charAt(0)) {\n\t\t\t\t\tcase '.':\n\t\t\t\t\tcase '?':\n\t\t\t\t\tcase '#':\n\t\t\t\t\t\turl += Uri.HOSTNAME_PLACEHOLDER;\n\t\t\t\t\t\turl += '/';\n\t\t\t\t\t\turl += opt_uri;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase '':\n\t\t\t\t\tcase '/':\n\t\t\t\t\t\tif (opt_uri[1] !== '/') {\n\t\t\t\t\t\t\turl += Uri.HOSTNAME_PLACEHOLDER;\n\t\t\t\t\t\t}\n\t\t\t\t\t\turl += opt_uri;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tdefault:\n\t\t\t\t\t\turl += opt_uri;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn url;\n\t\t}\n\n\t\t/**\n   * Parses the given uri string into an object.\n   * @param {*=} opt_uri Optional string URI to parse\n   */\n\n\t}, {\n\t\tkey: 'removeParameter',\n\n\n\t\t/**\n   * Removes the named query parameter.\n   * @param {string} name The parameter to remove.\n   * @chainable\n   */\n\t\tvalue: function removeParameter(name) {\n\t\t\tthis.ensureQueryInitialized_();\n\t\t\tthis.query.remove(name);\n\t\t\treturn this;\n\t\t}\n\n\t\t/**\n   * Removes uniqueness parameter of the uri.\n   * @chainable\n   */\n\n\t}, {\n\t\tkey: 'removeUnique',\n\t\tvalue: function removeUnique() {\n\t\t\tthis.removeParameter(Uri.RANDOM_PARAM);\n\t\t\treturn this;\n\t\t}\n\n\t\t/**\n   * Sets the hash.\n   * @param {string} hash\n   * @chainable\n   */\n\n\t}, {\n\t\tkey: 'setHash',\n\t\tvalue: function setHash(hash) {\n\t\t\tthis.url.hash = hash;\n\t\t\treturn this;\n\t\t}\n\n\t\t/**\n   * Sets the hostname.\n   * @param {string} hostname\n   * @chainable\n   */\n\n\t}, {\n\t\tkey: 'setHostname',\n\t\tvalue: function setHostname(hostname) {\n\t\t\tthis.url.hostname = hostname;\n\t\t\treturn this;\n\t\t}\n\n\t\t/**\n   * Sets the value of the named query parameters, clearing previous values\n   * for that key.\n   * @param {string} key The parameter to set.\n   * @param {*} value The new value.\n   * @chainable\n   */\n\n\t}, {\n\t\tkey: 'setParameterValue',\n\t\tvalue: function setParameterValue(name, value) {\n\t\t\tthis.removeParameter(name);\n\t\t\tthis.addParameterValue(name, value);\n\t\t\treturn this;\n\t\t}\n\n\t\t/**\n   * Sets the values of the named query parameters, clearing previous values\n   * for that key.\n   * @param {string} key The parameter to set.\n   * @param {*} value The new value.\n   * @chainable\n   */\n\n\t}, {\n\t\tkey: 'setParameterValues',\n\t\tvalue: function setParameterValues(name, values) {\n\t\t\tvar _this5 = this;\n\n\t\t\tthis.removeParameter(name);\n\t\t\tvalues.forEach(function (value) {\n\t\t\t\treturn _this5.addParameterValue(name, value);\n\t\t\t});\n\t\t\treturn this;\n\t\t}\n\n\t\t/**\n   * Sets the pathname.\n   * @param {string} pathname\n   * @chainable\n   */\n\n\t}, {\n\t\tkey: 'setPathname',\n\t\tvalue: function setPathname(pathname) {\n\t\t\tthis.url.pathname = pathname;\n\t\t\treturn this;\n\t\t}\n\n\t\t/**\n   * Sets the port number.\n   * @param {*} port Port number.\n   * @chainable\n   */\n\n\t}, {\n\t\tkey: 'setPort',\n\t\tvalue: function setPort(port) {\n\t\t\tthis.url.port = port;\n\t\t\treturn this;\n\t\t}\n\n\t\t/**\n   * Sets the function that will be used for parsing the original string uri\n   * into an object.\n   * @param {!function()} parseFn\n   */\n\n\t}, {\n\t\tkey: 'setProtocol',\n\n\n\t\t/**\n   * Sets the protocol. If missing <code>http:</code> is used as default.\n   * @param {string} protocol\n   * @chainable\n   */\n\t\tvalue: function setProtocol(protocol) {\n\t\t\tthis.url.protocol = protocol;\n\t\t\tif (this.url.protocol[this.url.protocol.length - 1] !== ':') {\n\t\t\t\tthis.url.protocol += ':';\n\t\t\t}\n\t\t\treturn this;\n\t\t}\n\n\t\t/**\n   * @return {string} The string form of the url.\n   * @override\n   */\n\n\t}, {\n\t\tkey: 'toString',\n\t\tvalue: function toString() {\n\t\t\tvar href = '';\n\t\t\tvar host = this.getHost();\n\t\t\tif (host) {\n\t\t\t\thref += this.getProtocol() + '//';\n\t\t\t}\n\t\t\thref += host + this.getPathname() + this.getSearch() + this.getHash();\n\t\t\treturn href;\n\t\t}\n\n\t\t/**\n   * Joins the given paths.\n   * @param {string} basePath\n   * @param {...string} ...paths Any number of paths to be joined with the base url.\n   * @static\n   */\n\n\t}], [{\n\t\tkey: 'getParseFn',\n\t\tvalue: function getParseFn() {\n\t\t\treturn parseFn_;\n\t\t}\n\t}, {\n\t\tkey: 'parse',\n\t\tvalue: function parse(opt_uri) {\n\t\t\treturn parseFn_(opt_uri);\n\t\t}\n\t}, {\n\t\tkey: 'setParseFn',\n\t\tvalue: function setParseFn(parseFn) {\n\t\t\tparseFn_ = parseFn;\n\t\t}\n\t}, {\n\t\tkey: 'joinPaths',\n\t\tvalue: function joinPaths(basePath) {\n\t\t\tfor (var _len = arguments.length, paths = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n\t\t\t\tpaths[_key - 1] = arguments[_key];\n\t\t\t}\n\n\t\t\tif (basePath.charAt(basePath.length - 1) === '/') {\n\t\t\t\tbasePath = basePath.substring(0, basePath.length - 1);\n\t\t\t}\n\t\t\tpaths = paths.map(function (path) {\n\t\t\t\treturn path.charAt(0) === '/' ? path.substring(1) : path;\n\t\t\t});\n\t\t\treturn [basePath].concat(paths).join('/').replace(/\\/$/, '');\n\t\t}\n\n\t\t/**\n   * URL-decodes the string. We need to specially handle '+'s because\n   * the javascript library doesn't convert them to spaces.\n   * @param {string} str The string to url decode.\n   * @return {string} The decoded {@code str}.\n   */\n\n\t}, {\n\t\tkey: 'urlDecode',\n\t\tvalue: function urlDecode(str) {\n\t\t\treturn decodeURIComponent(str.replace(/\\+/g, ' '));\n\t\t}\n\t}]);\n\n\treturn Uri;\n}();\n\n/**\n * Default protocol value.\n * @type {string}\n * @default http:\n * @static\n */\n\n\nvar isSecure = function isSecure() {\n\treturn typeof window !== 'undefined' && window.location && window.location.protocol && window.location.protocol.indexOf('https') === 0;\n};\n\nUri.DEFAULT_PROTOCOL = isSecure() ? 'https:' : 'http:';\n\n/**\n * Hostname placeholder. Relevant to internal usage only.\n * @type {string}\n * @static\n */\nUri.HOSTNAME_PLACEHOLDER = 'hostname' + Date.now();\n\n/**\n * Name used by the param generated by `makeUnique`.\n * @type {string}\n * @static\n */\nUri.RANDOM_PARAM = 'zx';\n\nexports.default = Uri;"
        },
        {
          "id": 23,
          "identifier": "/Users/Liferay/trampo/senna.js/node_modules/metal/lib/coreNamed.js",
          "name": "./node_modules/metal/lib/coreNamed.js",
          "index": 7,
          "index2": 1,
          "size": 9924,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0
          ],
          "assets": [],
          "issuer": "/Users/Liferay/trampo/senna.js/node_modules/metal/lib/core.js",
          "issuerId": 11,
          "issuerName": "./node_modules/metal/lib/core.js",
          "profile": {
            "factory": 52,
            "building": 3
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "reasons": [
            {
              "moduleId": 11,
              "moduleIdentifier": "/Users/Liferay/trampo/senna.js/node_modules/metal/lib/core.js",
              "module": "./node_modules/metal/lib/core.js",
              "moduleName": "./node_modules/metal/lib/core.js",
              "type": "cjs require",
              "userRequest": "./coreNamed",
              "loc": "13:17-39"
            }
          ],
          "usedExports": true,
          "providedExports": null,
          "optimizationBailout": [
            "ModuleConcatenation bailout: Module is not an ECMAScript module"
          ],
          "depth": 4,
          "source": "'use strict';\n\n/**\n * A collection of core utility functions.\n * @const\n */\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nexports.abstractMethod = abstractMethod;\nexports.disableCompatibilityMode = disableCompatibilityMode;\nexports.enableCompatibilityMode = enableCompatibilityMode;\nexports.getCompatibilityModeData = getCompatibilityModeData;\nexports.getFunctionName = getFunctionName;\nexports.getStaticProperty = getStaticProperty;\nexports.getUid = getUid;\nexports.identityFunction = identityFunction;\nexports.isBoolean = isBoolean;\nexports.isDef = isDef;\nexports.isDefAndNotNull = isDefAndNotNull;\nexports.isDocument = isDocument;\nexports.isDocumentFragment = isDocumentFragment;\nexports.isElement = isElement;\nexports.isFunction = isFunction;\nexports.isNull = isNull;\nexports.isNumber = isNumber;\nexports.isWindow = isWindow;\nexports.isObject = isObject;\nexports.isPromise = isPromise;\nexports.isString = isString;\nexports.isServerSide = isServerSide;\nexports.nullFunction = nullFunction;\nvar compatibilityModeData_ = void 0;\n\n/**\n * Counter for unique id.\n * @type {Number}\n * @private\n */\nvar uniqueIdCounter_ = 1;\n\n/**\n * Unique id property prefix.\n * @type {String}\n * @protected\n */\nvar UID_PROPERTY = exports.UID_PROPERTY = 'core_' + (Math.random() * 1e9 >>> 0);\n\n/**\n * When defining a class Foo with an abstract method bar(), you can do:\n * Foo.prototype.bar = abstractMethod\n *\n * Now if a subclass of Foo fails to override bar(), an error will be thrown\n * when bar() is invoked.\n *\n * @type {!Function}\n * @throws {Error} when invoked to indicate the method should be overridden.\n */\nfunction abstractMethod() {\n  throw Error('Unimplemented abstract method');\n}\n\n/**\n * Disables Metal.js's compatibility mode.\n */\nfunction disableCompatibilityMode() {\n  compatibilityModeData_ = undefined;\n}\n\n/**\n * Enables Metal.js's compatibility mode with the following features from rc\n * and 1.x versions:\n *     - Using \"key\" to reference component instances. In the current version\n *       this should be done via \"ref\" instead. This allows old code still\n *       using \"key\" to keep working like before. NOTE: this may cause\n *       problems, since \"key\" is meant to be used differently. Only use this\n *       if it's not possible to upgrade the code to use \"ref\" instead.\n * @param {Object=} opt_data Optional object with data to specify more\n *     details, such as:\n *         - renderers {Array} the template renderers that should be in\n *           compatibility mode, either their constructors or strings\n *           representing them (e.g. 'soy' or 'jsx'). By default, all the ones\n *           that extend from IncrementalDomRenderer.\n * @type {Object}\n */\nfunction enableCompatibilityMode() {\n  var opt_data = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n  compatibilityModeData_ = opt_data;\n}\n\n/**\n * Returns the data used for compatibility mode, or nothing if it hasn't been\n * enabled.\n * @return {Object}\n */\nfunction getCompatibilityModeData() {\n  // Compatibility mode can be set via the __METAL_COMPATIBILITY__ global var.\n  if (compatibilityModeData_ === undefined) {\n    if (typeof window !== 'undefined' && window.__METAL_COMPATIBILITY__) {\n      enableCompatibilityMode(window.__METAL_COMPATIBILITY__);\n    }\n  }\n  return compatibilityModeData_;\n}\n\n/**\n * Returns the first argument if it's truthy, or the second otherwise.\n * @param {*} a\n * @param {*} b\n * @return {*}\n * @protected\n */\nfunction getFirstTruthy_(a, b) {\n  return a || b;\n}\n\n/**\n * Gets the name of the given function. If the current browser doesn't\n * support the `name` property, this will calculate it from the function's\n * content string.\n * @param {!function()} fn\n * @return {string}\n */\nfunction getFunctionName(fn) {\n  if (!fn.name) {\n    var str = fn.toString();\n    fn.name = str.substring(9, str.indexOf('('));\n  }\n  return fn.name;\n}\n\n/**\n * Gets the value of a static property in the given class. The value will be\n * inherited from ancestors as expected, unless a custom merge function is given,\n * which can change how the super classes' value for that property will be merged\n * together.\n * The final merged value will be stored in another property, so that it won't\n * be recalculated even if this function is called multiple times.\n * @param {!function()} ctor Class constructor.\n * @param {string} propertyName Property name to be merged.\n * @param {function(*, *):*=} opt_mergeFn Function that receives the merged\n *     value of the property so far and the next value to be merged to it.\n *     Should return these two merged together. If not passed the final property\n *     will be the first truthy value among ancestors.\n */\nfunction getStaticProperty(ctor, propertyName, opt_mergeFn) {\n  var mergedName = propertyName + '_MERGED';\n  if (!ctor.hasOwnProperty(mergedName)) {\n    var merged = ctor.hasOwnProperty(propertyName) ? ctor[propertyName] : null;\n    if (ctor.__proto__ && !ctor.__proto__.isPrototypeOf(Function)) {\n      var mergeFn = opt_mergeFn || getFirstTruthy_;\n      merged = mergeFn(merged, getStaticProperty(ctor.__proto__, propertyName, mergeFn));\n    }\n    ctor[mergedName] = merged;\n  }\n  return ctor[mergedName];\n}\n\n/**\n * Gets an unique id. If `opt_object` argument is passed, the object is\n * mutated with an unique id. Consecutive calls with the same object\n * reference won't mutate the object again, instead the current object uid\n * returns. See {@link UID_PROPERTY}.\n * @param {Object=} opt_object Optional object to be mutated with the uid. If\n *     not specified this method only returns the uid.\n * @param {boolean=} opt_noInheritance Optional flag indicating if this\n *     object's uid property can be inherited from parents or not.\n * @throws {Error} when invoked to indicate the method should be overridden.\n */\nfunction getUid(opt_object, opt_noInheritance) {\n  if (opt_object) {\n    var id = opt_object[UID_PROPERTY];\n    if (opt_noInheritance && !opt_object.hasOwnProperty(UID_PROPERTY)) {\n      id = null;\n    }\n    return id || (opt_object[UID_PROPERTY] = uniqueIdCounter_++);\n  }\n  return uniqueIdCounter_++;\n}\n\n/**\n * The identity function. Returns its first argument.\n * @param {*=} opt_returnValue The single value that will be returned.\n * @return {?} The first argument.\n */\nfunction identityFunction(opt_returnValue) {\n  return opt_returnValue;\n}\n\n/**\n * Returns true if the specified value is a boolean.\n * @param {?} val Variable to test.\n * @return {boolean} Whether variable is boolean.\n */\nfunction isBoolean(val) {\n  return typeof val === 'boolean';\n}\n\n/**\n * Returns true if the specified value is not undefined.\n * @param {?} val Variable to test.\n * @return {boolean} Whether variable is defined.\n */\nfunction isDef(val) {\n  return val !== undefined;\n}\n\n/**\n * Returns true if value is not undefined or null.\n * @param {*} val\n * @return {boolean}\n */\nfunction isDefAndNotNull(val) {\n  return isDef(val) && !isNull(val);\n}\n\n/**\n * Returns true if value is a document.\n * @param {*} val\n * @return {boolean}\n */\nfunction isDocument(val) {\n  return val && (typeof val === 'undefined' ? 'undefined' : _typeof(val)) === 'object' && val.nodeType === 9;\n}\n\n/**\n * Returns true if value is a document-fragment.\n * @param {*} val\n * @return {boolean}\n */\nfunction isDocumentFragment(val) {\n  return val && (typeof val === 'undefined' ? 'undefined' : _typeof(val)) === 'object' && val.nodeType === 11;\n}\n\n/**\n * Returns true if value is a dom element.\n * @param {*} val\n * @return {boolean}\n */\nfunction isElement(val) {\n  return val && (typeof val === 'undefined' ? 'undefined' : _typeof(val)) === 'object' && val.nodeType === 1;\n}\n\n/**\n * Returns true if the specified value is a function.\n * @param {?} val Variable to test.\n * @return {boolean} Whether variable is a function.\n */\nfunction isFunction(val) {\n  return typeof val === 'function';\n}\n\n/**\n * Returns true if value is null.\n * @param {*} val\n * @return {boolean}\n */\nfunction isNull(val) {\n  return val === null;\n}\n\n/**\n * Returns true if the specified value is a number.\n * @param {?} val Variable to test.\n * @return {boolean} Whether variable is a number.\n */\nfunction isNumber(val) {\n  return typeof val === 'number';\n}\n\n/**\n * Returns true if value is a window.\n * @param {*} val\n * @return {boolean}\n */\nfunction isWindow(val) {\n  return val !== null && val === val.window;\n}\n\n/**\n * Returns true if the specified value is an object. This includes arrays\n * and functions.\n * @param {?} val Variable to test.\n * @return {boolean} Whether variable is an object.\n */\nfunction isObject(val) {\n  var type = typeof val === 'undefined' ? 'undefined' : _typeof(val);\n  return type === 'object' && val !== null || type === 'function';\n}\n\n/**\n * Returns true if value is a Promise.\n * @param {*} val\n * @return {boolean}\n */\nfunction isPromise(val) {\n  return val && (typeof val === 'undefined' ? 'undefined' : _typeof(val)) === 'object' && typeof val.then === 'function';\n}\n\n/**\n * Returns true if value is a string.\n * @param {*} val\n * @return {boolean}\n */\nfunction isString(val) {\n  return typeof val === 'string' || val instanceof String;\n}\n\n/**\n * Sets to true if running inside Node.js environment with extra check for\n * `process.browser` to skip Karma runner environment. Karma environment has\n * `process` defined even though it runs on the browser.\n * @return {boolean}\n */\nfunction isServerSide() {\n  return typeof process !== 'undefined' && typeof process.env !== 'undefined' && process.env.NODE_ENV !== 'test' && !process.browser;\n}\n\n/**\n * Null function used for default values of callbacks, etc.\n * @return {void} Nothing.\n */\nfunction nullFunction() {}"
        },
        {
          "id": 24,
          "identifier": "/Users/Liferay/trampo/senna.js/node_modules/metal/lib/array/array.js",
          "name": "./node_modules/metal/lib/array/array.js",
          "index": 8,
          "index2": 3,
          "size": 3790,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0
          ],
          "assets": [],
          "issuer": "/Users/Liferay/trampo/senna.js/node_modules/metal/lib/metal.js",
          "issuerId": 0,
          "issuerName": "./node_modules/metal/lib/metal.js",
          "profile": {
            "factory": 29,
            "building": 28,
            "dependencies": 0
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "reasons": [
            {
              "moduleId": 0,
              "moduleIdentifier": "/Users/Liferay/trampo/senna.js/node_modules/metal/lib/metal.js",
              "module": "./node_modules/metal/lib/metal.js",
              "moduleName": "./node_modules/metal/lib/metal.js",
              "type": "cjs require",
              "userRequest": "./array/array",
              "loc": "22:13-37"
            }
          ],
          "usedExports": true,
          "providedExports": null,
          "optimizationBailout": [
            "ModuleConcatenation bailout: Module is not an ECMAScript module"
          ],
          "depth": 3,
          "source": "'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _core = require('../core');\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar array = function () {\n\tfunction array() {\n\t\t_classCallCheck(this, array);\n\t}\n\n\t_createClass(array, null, [{\n\t\tkey: 'equal',\n\n\t\t/**\n   * Checks if the given arrays have the same content.\n   * @param {!Array<*>} arr1\n   * @param {!Array<*>} arr2\n   * @return {boolean}\n   */\n\t\tvalue: function equal(arr1, arr2) {\n\t\t\tif (arr1 === arr2) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tif (arr1.length !== arr2.length) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tfor (var i = 0; i < arr1.length; i++) {\n\t\t\t\tif (arr1[i] !== arr2[i]) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\n\t\t/**\n   * Returns the first value in the given array that isn't undefined.\n   * @param {!Array} arr\n   * @return {*}\n   */\n\n\t}, {\n\t\tkey: 'firstDefinedValue',\n\t\tvalue: function firstDefinedValue(arr) {\n\t\t\tfor (var i = 0; i < arr.length; i++) {\n\t\t\t\tif (arr[i] !== undefined) {\n\t\t\t\t\treturn arr[i];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t/**\n   * Transforms the input nested array to become flat.\n   * @param {Array.<*|Array.<*>>} arr Nested array to flatten.\n   * @param {Array.<*>} opt_output Optional output array.\n   * @return {Array.<*>} Flat array.\n   */\n\n\t}, {\n\t\tkey: 'flatten',\n\t\tvalue: function flatten(arr, opt_output) {\n\t\t\tvar output = opt_output || [];\n\t\t\tfor (var i = 0; i < arr.length; i++) {\n\t\t\t\tif (Array.isArray(arr[i])) {\n\t\t\t\t\tarray.flatten(arr[i], output);\n\t\t\t\t} else {\n\t\t\t\t\toutput.push(arr[i]);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn output;\n\t\t}\n\n\t\t/**\n   * Removes the first occurrence of a particular value from an array.\n   * @param {Array.<T>} arr Array from which to remove value.\n   * @param {T} obj Object to remove.\n   * @return {boolean} True if an element was removed.\n   * @template T\n   */\n\n\t}, {\n\t\tkey: 'remove',\n\t\tvalue: function remove(arr, obj) {\n\t\t\tvar i = arr.indexOf(obj);\n\t\t\tvar rv = void 0;\n\t\t\tif (rv = i >= 0) {\n\t\t\t\tarray.removeAt(arr, i);\n\t\t\t}\n\t\t\treturn rv;\n\t\t}\n\n\t\t/**\n   * Removes from an array the element at index i\n   * @param {Array} arr Array or array like object from which to remove value.\n   * @param {number} i The index to remove.\n   * @return {boolean} True if an element was removed.\n   */\n\n\t}, {\n\t\tkey: 'removeAt',\n\t\tvalue: function removeAt(arr, i) {\n\t\t\treturn Array.prototype.splice.call(arr, i, 1).length === 1;\n\t\t}\n\n\t\t/**\n   * Slices the given array, just like Array.prototype.slice, but this\n   * is faster and working on all array-like objects (like arguments).\n   * @param {!Object} arr Array-like object to slice.\n   * @param {number} start The index that should start the slice.\n   * @param {number=} opt_end The index where the slice should end, not\n   *   included in the final array. If not given, all elements after the\n   *   start index will be included.\n   * @return {!Array}\n   */\n\n\t}, {\n\t\tkey: 'slice',\n\t\tvalue: function slice(arr, start, opt_end) {\n\t\t\tvar sliced = [];\n\t\t\tvar end = (0, _core.isDef)(opt_end) ? opt_end : arr.length;\n\t\t\tfor (var i = start; i < end; i++) {\n\t\t\t\tsliced.push(arr[i]);\n\t\t\t}\n\t\t\treturn sliced;\n\t\t}\n\t}]);\n\n\treturn array;\n}();\n\nexports.default = array;"
        },
        {
          "id": 25,
          "identifier": "/Users/Liferay/trampo/senna.js/node_modules/metal/lib/async/async.js",
          "name": "./node_modules/metal/lib/async/async.js",
          "index": 9,
          "index2": 4,
          "size": 7174,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0
          ],
          "assets": [],
          "issuer": "/Users/Liferay/trampo/senna.js/node_modules/metal/lib/metal.js",
          "issuerId": 0,
          "issuerName": "./node_modules/metal/lib/metal.js",
          "profile": {
            "factory": 29,
            "building": 26
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "reasons": [
            {
              "moduleId": 0,
              "moduleIdentifier": "/Users/Liferay/trampo/senna.js/node_modules/metal/lib/metal.js",
              "module": "./node_modules/metal/lib/metal.js",
              "moduleName": "./node_modules/metal/lib/metal.js",
              "type": "cjs require",
              "userRequest": "./async/async",
              "loc": "26:13-37"
            }
          ],
          "usedExports": true,
          "providedExports": null,
          "optimizationBailout": [
            "ModuleConcatenation bailout: Module is not an ECMAScript module"
          ],
          "depth": 3,
          "source": "/*!\n * Polyfill from Google's Closure Library.\n * Copyright 2013 The Closure Library Authors. All Rights Reserved.\n */\n\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\nvar async = {};\n\n/**\n * Throw an item without interrupting the current execution context.  For\n * example, if processing a group of items in a loop, sometimes it is useful\n * to report an error while still allowing the rest of the batch to be\n * processed.\n * @param {*} exception\n */\nasync.throwException = function (exception) {\n\t// Each throw needs to be in its own context.\n\tasync.nextTick(function () {\n\t\tthrow exception;\n\t});\n};\n\n/**\n * Fires the provided callback just before the current callstack unwinds, or as\n * soon as possible after the current JS execution context.\n * @param {function(this:THIS)} callback\n * @param {THIS=} opt_context Object to use as the \"this value\" when calling\n *     the provided function.\n * @template THIS\n */\nasync.run = function (callback, opt_context) {\n\tif (!async.run.workQueueScheduled_) {\n\t\t// Nothing is currently scheduled, schedule it now.\n\t\tasync.nextTick(async.run.processWorkQueue);\n\t\tasync.run.workQueueScheduled_ = true;\n\t}\n\n\tasync.run.workQueue_.push(new async.run.WorkItem_(callback, opt_context));\n};\n\n/** @private {boolean} */\nasync.run.workQueueScheduled_ = false;\n\n/** @private {!Array.<!async.run.WorkItem_>} */\nasync.run.workQueue_ = [];\n\n/**\n * Run any pending async.run work items. This function is not intended\n * for general use, but for use by entry point handlers to run items ahead of\n * async.nextTick.\n */\nasync.run.processWorkQueue = function () {\n\t// NOTE: additional work queue items may be pushed while processing.\n\twhile (async.run.workQueue_.length) {\n\t\t// Don't let the work queue grow indefinitely.\n\t\tvar workItems = async.run.workQueue_;\n\t\tasync.run.workQueue_ = [];\n\t\tfor (var i = 0; i < workItems.length; i++) {\n\t\t\tvar workItem = workItems[i];\n\t\t\ttry {\n\t\t\t\tworkItem.fn.call(workItem.scope);\n\t\t\t} catch (e) {\n\t\t\t\tasync.throwException(e);\n\t\t\t}\n\t\t}\n\t}\n\n\t// There are no more work items, reset the work queue.\n\tasync.run.workQueueScheduled_ = false;\n};\n\n/**\n * @constructor\n * @final\n * @struct\n * @private\n *\n * @param {function()} fn\n * @param {Object|null|undefined} scope\n */\nasync.run.WorkItem_ = function (fn, scope) {\n\t/** @const */\n\tthis.fn = fn;\n\t/** @const */\n\tthis.scope = scope;\n};\n\n/**\n * Fires the provided callbacks as soon as possible after the current JS\n * execution context. setTimeout(…, 0) always takes at least 5ms for legacy\n * reasons.\n * @param {function(this:SCOPE)} callback Callback function to fire as soon as\n *     possible.\n * @param {SCOPE=} opt_context Object in whose scope to call the listener.\n * @template SCOPE\n */\nasync.nextTick = function (callback, opt_context) {\n\tvar cb = callback;\n\tif (opt_context) {\n\t\tcb = callback.bind(opt_context);\n\t}\n\tcb = async.nextTick.wrapCallback_(cb);\n\t// Introduced and currently only supported by IE10.\n\t// Verify if variable is defined on the current runtime (i.e., node, browser).\n\t// Can't use typeof enclosed in a function (such as core.isFunction) or an\n\t// exception will be thrown when the function is called on an environment\n\t// where the variable is undefined.\n\tif (typeof setImmediate === 'function') {\n\t\tsetImmediate(cb);\n\t\treturn;\n\t}\n\t// Look for and cache the custom fallback version of setImmediate.\n\tif (!async.nextTick.setImmediate_) {\n\t\tasync.nextTick.setImmediate_ = async.nextTick.getSetImmediateEmulator_();\n\t}\n\tasync.nextTick.setImmediate_(cb);\n};\n\n/**\n * Cache for the setImmediate implementation.\n * @type {function(function())}\n * @private\n */\nasync.nextTick.setImmediate_ = null;\n\n/**\n * Determines the best possible implementation to run a function as soon as\n * the JS event loop is idle.\n * @return {function(function())} The \"setImmediate\" implementation.\n * @private\n */\nasync.nextTick.getSetImmediateEmulator_ = function () {\n\t// Create a private message channel and use it to postMessage empty messages\n\t// to ourselves.\n\tvar Channel = void 0;\n\n\t// Verify if variable is defined on the current runtime (i.e., node, browser).\n\t// Can't use typeof enclosed in a function (such as core.isFunction) or an\n\t// exception will be thrown when the function is called on an environment\n\t// where the variable is undefined.\n\tif (typeof MessageChannel === 'function') {\n\t\tChannel = MessageChannel;\n\t}\n\n\t// If MessageChannel is not available and we are in a browser, implement\n\t// an iframe based polyfill in browsers that have postMessage and\n\t// document.addEventListener. The latter excludes IE8 because it has a\n\t// synchronous postMessage implementation.\n\tif (typeof Channel === 'undefined' && typeof window !== 'undefined' && window.postMessage && window.addEventListener) {\n\t\t/** @constructor */\n\t\tChannel = function Channel() {\n\t\t\t// Make an empty, invisible iframe.\n\t\t\tvar iframe = document.createElement('iframe');\n\t\t\tiframe.style.display = 'none';\n\t\t\tiframe.src = '';\n\t\t\tdocument.documentElement.appendChild(iframe);\n\t\t\tvar win = iframe.contentWindow;\n\t\t\tvar doc = win.document;\n\t\t\tdoc.open();\n\t\t\tdoc.write('');\n\t\t\tdoc.close();\n\t\t\tvar message = 'callImmediate' + Math.random();\n\t\t\tvar origin = win.location.protocol + '//' + win.location.host;\n\t\t\tvar onmessage = function (e) {\n\t\t\t\t// Validate origin and message to make sure that this message was\n\t\t\t\t// intended for us.\n\t\t\t\tif (e.origin !== origin && e.data !== message) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tthis.port1.onmessage();\n\t\t\t}.bind(this);\n\t\t\twin.addEventListener('message', onmessage, false);\n\t\t\tthis.port1 = {};\n\t\t\tthis.port2 = {\n\t\t\t\tpostMessage: function postMessage() {\n\t\t\t\t\twin.postMessage(message, origin);\n\t\t\t\t}\n\t\t\t};\n\t\t};\n\t}\n\tif (typeof Channel !== 'undefined') {\n\t\tvar channel = new Channel();\n\t\t// Use a fifo linked list to call callbacks in the right order.\n\t\tvar head = {};\n\t\tvar tail = head;\n\t\tchannel.port1.onmessage = function () {\n\t\t\thead = head.next;\n\t\t\tvar cb = head.cb;\n\t\t\thead.cb = null;\n\t\t\tcb();\n\t\t};\n\t\treturn function (cb) {\n\t\t\ttail.next = {\n\t\t\t\tcb: cb\n\t\t\t};\n\t\t\ttail = tail.next;\n\t\t\tchannel.port2.postMessage(0);\n\t\t};\n\t}\n\t// Implementation for IE6-8: Script elements fire an asynchronous\n\t// onreadystatechange event when inserted into the DOM.\n\tif (typeof document !== 'undefined' && 'onreadystatechange' in document.createElement('script')) {\n\t\treturn function (cb) {\n\t\t\tvar script = document.createElement('script');\n\t\t\tscript.onreadystatechange = function () {\n\t\t\t\t// Clean up and call the callback.\n\t\t\t\tscript.onreadystatechange = null;\n\t\t\t\tscript.parentNode.removeChild(script);\n\t\t\t\tscript = null;\n\t\t\t\tcb();\n\t\t\t\tcb = null;\n\t\t\t};\n\t\t\tdocument.documentElement.appendChild(script);\n\t\t};\n\t}\n\t// Fall back to setTimeout with 0. In browsers this creates a delay of 5ms\n\t// or more.\n\treturn function (cb) {\n\t\tsetTimeout(cb, 0);\n\t};\n};\n\n/**\n * Helper function that is overrided to protect callbacks with entry point\n * monitor if the application monitors entry points.\n * @param {function()} callback Callback function to fire as soon as possible.\n * @return {function()} The wrapped callback.\n * @private\n */\nasync.nextTick.wrapCallback_ = function (opt_returnValue) {\n\treturn opt_returnValue;\n};\n\nexports.default = async;"
        },
        {
          "id": 26,
          "identifier": "/Users/Liferay/trampo/senna.js/node_modules/metal/lib/disposable/Disposable.js",
          "name": "./node_modules/metal/lib/disposable/Disposable.js",
          "index": 10,
          "index2": 5,
          "size": 2100,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0
          ],
          "assets": [],
          "issuer": "/Users/Liferay/trampo/senna.js/node_modules/metal/lib/metal.js",
          "issuerId": 0,
          "issuerName": "./node_modules/metal/lib/metal.js",
          "profile": {
            "factory": 29,
            "building": 29
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "reasons": [
            {
              "moduleId": 0,
              "moduleIdentifier": "/Users/Liferay/trampo/senna.js/node_modules/metal/lib/metal.js",
              "module": "./node_modules/metal/lib/metal.js",
              "moduleName": "./node_modules/metal/lib/metal.js",
              "type": "cjs require",
              "userRequest": "./disposable/Disposable",
              "loc": "30:18-52"
            }
          ],
          "usedExports": true,
          "providedExports": null,
          "optimizationBailout": [
            "ModuleConcatenation bailout: Module is not an ECMAScript module"
          ],
          "depth": 3,
          "source": "'use strict';\n\n/**\n * Disposable utility. When inherited provides the `dispose` function to its\n * subclass, which is responsible for disposing of any object references\n * when an instance won't be used anymore. Subclasses should override\n * `disposeInternal` to implement any specific disposing logic.\n * @constructor\n */\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar Disposable = function () {\n\tfunction Disposable() {\n\t\t_classCallCheck(this, Disposable);\n\n\t\t/**\n   * Flag indicating if this instance has already been disposed.\n   * @type {boolean}\n   * @protected\n   */\n\t\tthis.disposed_ = false;\n\t}\n\n\t/**\n  * Disposes of this instance's object references. Calls `disposeInternal`.\n  */\n\n\n\t_createClass(Disposable, [{\n\t\tkey: 'dispose',\n\t\tvalue: function dispose() {\n\t\t\tif (!this.disposed_) {\n\t\t\t\tthis.disposeInternal();\n\t\t\t\tthis.disposed_ = true;\n\t\t\t}\n\t\t}\n\n\t\t/**\n   * Subclasses should override this method to implement any specific\n   * disposing logic (like clearing references and calling `dispose` on other\n   * disposables).\n   */\n\n\t}, {\n\t\tkey: 'disposeInternal',\n\t\tvalue: function disposeInternal() {}\n\n\t\t/**\n   * Checks if this instance has already been disposed.\n   * @return {boolean}\n   */\n\n\t}, {\n\t\tkey: 'isDisposed',\n\t\tvalue: function isDisposed() {\n\t\t\treturn this.disposed_;\n\t\t}\n\t}]);\n\n\treturn Disposable;\n}();\n\nexports.default = Disposable;"
        },
        {
          "id": 27,
          "identifier": "/Users/Liferay/trampo/senna.js/node_modules/metal/lib/object/object.js",
          "name": "./node_modules/metal/lib/object/object.js",
          "index": 11,
          "index2": 6,
          "size": 3096,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0
          ],
          "assets": [],
          "issuer": "/Users/Liferay/trampo/senna.js/node_modules/metal/lib/metal.js",
          "issuerId": 0,
          "issuerName": "./node_modules/metal/lib/metal.js",
          "profile": {
            "factory": 29,
            "building": 31
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "reasons": [
            {
              "moduleId": 0,
              "moduleIdentifier": "/Users/Liferay/trampo/senna.js/node_modules/metal/lib/metal.js",
              "module": "./node_modules/metal/lib/metal.js",
              "moduleName": "./node_modules/metal/lib/metal.js",
              "type": "cjs require",
              "userRequest": "./object/object",
              "loc": "34:14-40"
            }
          ],
          "usedExports": true,
          "providedExports": null,
          "optimizationBailout": [
            "ModuleConcatenation bailout: Module is not an ECMAScript module"
          ],
          "depth": 3,
          "source": "'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar object = function () {\n\tfunction object() {\n\t\t_classCallCheck(this, object);\n\t}\n\n\t_createClass(object, null, [{\n\t\tkey: 'mixin',\n\n\t\t/**\n   * Copies all the members of a source object to a target object.\n   * @param {Object} target Target object.\n   * @param {...Object} var_args The objects from which values will be copied.\n   * @return {Object} Returns the target object reference.\n   */\n\t\tvalue: function mixin(target) {\n\t\t\tvar key = void 0,\n\t\t\t    source = void 0;\n\t\t\tfor (var i = 1; i < arguments.length; i++) {\n\t\t\t\tsource = arguments[i];\n\t\t\t\tfor (key in source) {\n\t\t\t\t\ttarget[key] = source[key];\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn target;\n\t\t}\n\n\t\t/**\n   * Returns an object based on its fully qualified external name.\n   * @param {string} name The fully qualified name.\n   * @param {object=} opt_obj The object within which to look; default is\n   *     <code>window</code>.\n   * @return {?} The value (object or primitive) or, if not found, undefined.\n   */\n\n\t}, {\n\t\tkey: 'getObjectByName',\n\t\tvalue: function getObjectByName(name, opt_obj) {\n\t\t\tvar scope = opt_obj || window;\n\t\t\tvar parts = name.split('.');\n\t\t\treturn parts.reduce(function (part, key) {\n\t\t\t\treturn part[key];\n\t\t\t}, scope);\n\t\t}\n\n\t\t/**\n   * Returns a new object with the same keys as the given one, but with\n   * their values set to the return values of the specified function.\n   * @param {!Object} obj\n   * @param {!function(string, *)} fn\n   * @return {!Object}\n   */\n\n\t}, {\n\t\tkey: 'map',\n\t\tvalue: function map(obj, fn) {\n\t\t\tvar mappedObj = {};\n\t\t\tvar keys = Object.keys(obj);\n\t\t\tfor (var i = 0; i < keys.length; i++) {\n\t\t\t\tmappedObj[keys[i]] = fn(keys[i], obj[keys[i]]);\n\t\t\t}\n\t\t\treturn mappedObj;\n\t\t}\n\n\t\t/**\n   * Checks if the two given objects are equal. This is done via a shallow\n   * check, including only the keys directly contained by the 2 objects.\n   * @return {boolean}\n   */\n\n\t}, {\n\t\tkey: 'shallowEqual',\n\t\tvalue: function shallowEqual(obj1, obj2) {\n\t\t\tif (obj1 === obj2) {\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\tvar keys1 = Object.keys(obj1);\n\t\t\tvar keys2 = Object.keys(obj2);\n\t\t\tif (keys1.length !== keys2.length) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tfor (var i = 0; i < keys1.length; i++) {\n\t\t\t\tif (obj1[keys1[i]] !== obj2[keys1[i]]) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\t}]);\n\n\treturn object;\n}();\n\nexports.default = object;"
        },
        {
          "id": 28,
          "identifier": "/Users/Liferay/trampo/senna.js/node_modules/metal/lib/string/string.js",
          "name": "./node_modules/metal/lib/string/string.js",
          "index": 12,
          "index2": 7,
          "size": 4127,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0
          ],
          "assets": [],
          "issuer": "/Users/Liferay/trampo/senna.js/node_modules/metal/lib/metal.js",
          "issuerId": 0,
          "issuerName": "./node_modules/metal/lib/metal.js",
          "profile": {
            "factory": 29,
            "building": 33
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "reasons": [
            {
              "moduleId": 0,
              "moduleIdentifier": "/Users/Liferay/trampo/senna.js/node_modules/metal/lib/metal.js",
              "module": "./node_modules/metal/lib/metal.js",
              "moduleName": "./node_modules/metal/lib/metal.js",
              "type": "cjs require",
              "userRequest": "./string/string",
              "loc": "38:14-40"
            }
          ],
          "usedExports": true,
          "providedExports": null,
          "optimizationBailout": [
            "ModuleConcatenation bailout: Module is not an ECMAScript module"
          ],
          "depth": 3,
          "source": "'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar string = function () {\n\tfunction string() {\n\t\t_classCallCheck(this, string);\n\t}\n\n\t_createClass(string, null, [{\n\t\tkey: 'caseInsensitiveCompare',\n\n\t\t/**\n   * Compares the given strings without taking the case into account.\n   * @param {string|number} str1\n   * @param {string|number} str2\n   * @return {number} Either -1, 0 or 1, according to if the first string is\n   *     \"smaller\", equal or \"bigger\" than the second given string.\n   */\n\t\tvalue: function caseInsensitiveCompare(str1, str2) {\n\t\t\tvar test1 = String(str1).toLowerCase();\n\t\t\tvar test2 = String(str2).toLowerCase();\n\n\t\t\tif (test1 < test2) {\n\t\t\t\treturn -1;\n\t\t\t} else if (test1 === test2) {\n\t\t\t\treturn 0;\n\t\t\t} else {\n\t\t\t\treturn 1;\n\t\t\t}\n\t\t}\n\n\t\t/**\n   * Removes the breaking spaces from the left and right of the string and\n   * collapses the sequences of breaking spaces in the middle into single spaces.\n   * The original and the result strings render the same way in HTML.\n   * @param {string} str A string in which to collapse spaces.\n   * @return {string} Copy of the string with normalized breaking spaces.\n   */\n\n\t}, {\n\t\tkey: 'collapseBreakingSpaces',\n\t\tvalue: function collapseBreakingSpaces(str) {\n\t\t\treturn str.replace(/[\\t\\r\\n ]+/g, ' ').replace(/^[\\t\\r\\n ]+|[\\t\\r\\n ]+$/g, '');\n\t\t}\n\n\t\t/**\n  * Escapes characters in the string that are not safe to use in a RegExp.\n  * @param {*} str The string to escape. If not a string, it will be casted\n  *     to one.\n  * @return {string} A RegExp safe, escaped copy of {@code s}.\n  */\n\n\t}, {\n\t\tkey: 'escapeRegex',\n\t\tvalue: function escapeRegex(str) {\n\t\t\treturn String(str).replace(/([-()\\[\\]{}+?*.$\\^|,:#<!\\\\])/g, '\\\\$1').replace(/\\x08/g, '\\\\x08');\n\t\t}\n\n\t\t/**\n  * Returns a string with at least 64-bits of randomness.\n  * @return {string} A random string, e.g. sn1s7vb4gcic.\n  */\n\n\t}, {\n\t\tkey: 'getRandomString',\n\t\tvalue: function getRandomString() {\n\t\t\tvar x = 2147483648;\n\t\t\treturn Math.floor(Math.random() * x).toString(36) + Math.abs(Math.floor(Math.random() * x) ^ Date.now()).toString(36);\n\t\t}\n\n\t\t/**\n   * Calculates the hashcode for a string. The hashcode value is computed by\n   * the sum algorithm: s[0]*31^(n-1) + s[1]*31^(n-2) + ... + s[n-1]. A nice\n   * property of using 31 prime is that the multiplication can be replaced by\n   * a shift and a subtraction for better performance: 31*i == (i<<5)-i.\n   * Modern VMs do this sort of optimization automatically.\n   * @param {String} val Target string.\n   * @return {Number} Returns the string hashcode.\n   */\n\n\t}, {\n\t\tkey: 'hashCode',\n\t\tvalue: function hashCode(val) {\n\t\t\tvar hash = 0;\n\t\t\tfor (var i = 0, len = val.length; i < len; i++) {\n\t\t\t\thash = 31 * hash + val.charCodeAt(i);\n\t\t\t\thash %= 0x100000000;\n\t\t\t}\n\t\t\treturn hash;\n\t\t}\n\n\t\t/**\n   * Replaces interval into the string with specified value, e.g.\n   * `replaceInterval(\"abcde\", 1, 4, \"\")` returns \"ae\".\n   * @param {string} str The input string.\n   * @param {Number} start Start interval position to be replaced.\n   * @param {Number} end End interval position to be replaced.\n   * @param {string} value The value that replaces the specified interval.\n   * @return {string}\n   */\n\n\t}, {\n\t\tkey: 'replaceInterval',\n\t\tvalue: function replaceInterval(str, start, end, value) {\n\t\t\treturn str.substring(0, start) + value + str.substring(end);\n\t\t}\n\t}]);\n\n\treturn string;\n}();\n\nexports.default = string;"
        },
        {
          "id": 29,
          "identifier": "/Users/Liferay/trampo/senna.js/node_modules/metal-uri/lib/parse.js",
          "name": "./node_modules/metal-uri/lib/parse.js",
          "index": 13,
          "index2": 10,
          "size": 1118,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0
          ],
          "assets": [],
          "issuer": "/Users/Liferay/trampo/senna.js/node_modules/metal-uri/lib/Uri.js",
          "issuerId": 22,
          "issuerName": "./node_modules/metal-uri/lib/Uri.js",
          "profile": {
            "factory": 54,
            "building": 1,
            "dependencies": 0
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "reasons": [
            {
              "moduleId": 22,
              "moduleIdentifier": "/Users/Liferay/trampo/senna.js/node_modules/metal-uri/lib/Uri.js",
              "module": "./node_modules/metal-uri/lib/Uri.js",
              "moduleName": "./node_modules/metal-uri/lib/Uri.js",
              "type": "cjs require",
              "userRequest": "./parse",
              "loc": "13:13-31"
            }
          ],
          "usedExports": true,
          "providedExports": null,
          "optimizationBailout": [
            "ModuleConcatenation bailout: Module is not an ECMAScript module"
          ],
          "depth": 4,
          "source": "'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\n\nvar _metal = require('metal');\n\nvar _parseFromAnchor = require('./parseFromAnchor');\n\nvar _parseFromAnchor2 = _interopRequireDefault(_parseFromAnchor);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Parses the given uri string into an object. The URL function will be used\n * when present, otherwise we'll fall back to the anchor node element.\n * @param {*=} opt_uri Optional string URI to parse\n */\nfunction parse(opt_uri) {\n\tif ((0, _metal.isFunction)(URL) && URL.length) {\n\t\tvar url = new URL(opt_uri);\n\n\t\t// Safari Browsers will cap port to the max 16-bit unsigned integer (65535) instead\n\t\t// of throwing a TypeError as per spec. It will still keep the port number in the\n\t\t// href attribute, so we can use this mismatch to raise the expected exception.\n\t\tif (url.port && url.href.indexOf(url.port) === -1) {\n\t\t\tthrow new TypeError(opt_uri + ' is not a valid URL');\n\t\t}\n\n\t\treturn url;\n\t} else {\n\t\treturn (0, _parseFromAnchor2.default)(opt_uri);\n\t}\n}\n\nexports.default = parse;"
        },
        {
          "id": 30,
          "identifier": "/Users/Liferay/trampo/senna.js/node_modules/metal-uri/lib/parseFromAnchor.js",
          "name": "./node_modules/metal-uri/lib/parseFromAnchor.js",
          "index": 14,
          "index2": 9,
          "size": 696,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0
          ],
          "assets": [],
          "issuer": "/Users/Liferay/trampo/senna.js/node_modules/metal-uri/lib/parse.js",
          "issuerId": 29,
          "issuerName": "./node_modules/metal-uri/lib/parse.js",
          "profile": {
            "factory": 13,
            "building": 1
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "reasons": [
            {
              "moduleId": 29,
              "moduleIdentifier": "/Users/Liferay/trampo/senna.js/node_modules/metal-uri/lib/parse.js",
              "module": "./node_modules/metal-uri/lib/parse.js",
              "moduleName": "./node_modules/metal-uri/lib/parse.js",
              "type": "cjs require",
              "userRequest": "./parseFromAnchor",
              "loc": "9:23-51"
            }
          ],
          "usedExports": true,
          "providedExports": null,
          "optimizationBailout": [
            "ModuleConcatenation bailout: Module is not an ECMAScript module"
          ],
          "depth": 5,
          "source": "'use strict';\n\n/**\n * Parses the given uri string into an object.\n * @param {*=} opt_uri Optional string URI to parse\n */\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\nfunction parseFromAnchor(opt_uri) {\n\tvar link = document.createElement('a');\n\tlink.href = opt_uri;\n\n\tif (link.protocol === ':' || !/:/.test(link.href)) {\n\t\tthrow new TypeError(opt_uri + ' is not a valid URL');\n\t}\n\n\treturn {\n\t\thash: link.hash,\n\t\thostname: link.hostname,\n\t\tpassword: link.password,\n\t\tpathname: link.pathname[0] === '/' ? link.pathname : '/' + link.pathname,\n\t\tport: link.port,\n\t\tprotocol: link.protocol,\n\t\tsearch: link.search,\n\t\tusername: link.username\n\t};\n}\n\nexports.default = parseFromAnchor;"
        },
        {
          "id": 31,
          "identifier": "/Users/Liferay/trampo/senna.js/node_modules/metal-structs/lib/MultiMap.js",
          "name": "./node_modules/metal-structs/lib/MultiMap.js",
          "index": 16,
          "index2": 11,
          "size": 4542,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0
          ],
          "assets": [],
          "issuer": "/Users/Liferay/trampo/senna.js/node_modules/metal-structs/lib/all/structs.js",
          "issuerId": 12,
          "issuerName": "./node_modules/metal-structs/lib/all/structs.js",
          "profile": {
            "factory": 7,
            "building": 56,
            "dependencies": 3
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "reasons": [
            {
              "moduleId": 12,
              "moduleIdentifier": "/Users/Liferay/trampo/senna.js/node_modules/metal-structs/lib/all/structs.js",
              "module": "./node_modules/metal-structs/lib/all/structs.js",
              "moduleName": "./node_modules/metal-structs/lib/all/structs.js",
              "type": "cjs require",
              "userRequest": "../MultiMap",
              "loc": "8:16-38"
            }
          ],
          "usedExports": true,
          "providedExports": null,
          "optimizationBailout": [
            "ModuleConcatenation bailout: Module is not an ECMAScript module"
          ],
          "depth": 3,
          "source": "'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\n\nvar _metal = require('metal');\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n/**\n * A cached reference to the create function.\n */\nvar create = Object.create;\n\n/**\n * Case insensitive string Multimap implementation. Allows multiple values for\n * the same key name.\n * @extends {Disposable}\n */\n\nvar MultiMap = function (_Disposable) {\n\t_inherits(MultiMap, _Disposable);\n\n\tfunction MultiMap() {\n\t\t_classCallCheck(this, MultiMap);\n\n\t\tvar _this = _possibleConstructorReturn(this, _Disposable.call(this));\n\n\t\t_this.keys = create(null);\n\t\t_this.values = create(null);\n\t\treturn _this;\n\t}\n\n\t/**\n  * Adds value to a key name.\n  * @param {string} name\n  * @param {*} value\n  * @chainable\n  */\n\n\n\tMultiMap.prototype.add = function add(name, value) {\n\t\tthis.keys[name.toLowerCase()] = name;\n\t\tthis.values[name.toLowerCase()] = this.values[name.toLowerCase()] || [];\n\t\tthis.values[name.toLowerCase()].push(value);\n\t\treturn this;\n\t};\n\n\t/**\n  * Clears map names and values.\n  * @chainable\n  */\n\n\n\tMultiMap.prototype.clear = function clear() {\n\t\tthis.keys = create(null);\n\t\tthis.values = create(null);\n\t\treturn this;\n\t};\n\n\t/**\n  * Checks if map contains a value to the key name.\n  * @param {string} name\n  * @return {boolean}\n  * @chainable\n  */\n\n\n\tMultiMap.prototype.contains = function contains(name) {\n\t\treturn name.toLowerCase() in this.values;\n\t};\n\n\t/**\n  * @inheritDoc\n  */\n\n\n\tMultiMap.prototype.disposeInternal = function disposeInternal() {\n\t\tthis.values = null;\n\t};\n\n\t/**\n  * Creates a `MultiMap` instance from the given object.\n  * @param {!Object} obj\n  * @return {!MultiMap}\n  */\n\n\n\tMultiMap.fromObject = function fromObject(obj) {\n\t\tvar map = new MultiMap();\n\t\tvar keys = Object.keys(obj);\n\t\tfor (var i = 0; i < keys.length; i++) {\n\t\t\tmap.set(keys[i], obj[keys[i]]);\n\t\t}\n\t\treturn map;\n\t};\n\n\t/**\n  * Gets the first added value from a key name.\n  * @param {string} name\n  * @return {*}\n  * @chainable\n  */\n\n\n\tMultiMap.prototype.get = function get(name) {\n\t\tvar values = this.values[name.toLowerCase()];\n\t\tif (values) {\n\t\t\treturn values[0];\n\t\t}\n\t};\n\n\t/**\n  * Gets all values from a key name.\n  * @param {string} name\n  * @return {Array.<*>}\n  */\n\n\n\tMultiMap.prototype.getAll = function getAll(name) {\n\t\treturn this.values[name.toLowerCase()];\n\t};\n\n\t/**\n  * Returns true if the map is empty, false otherwise.\n  * @return {boolean}\n  */\n\n\n\tMultiMap.prototype.isEmpty = function isEmpty() {\n\t\treturn this.size() === 0;\n\t};\n\n\t/**\n  * Gets array of key names.\n  * @return {Array.<string>}\n  */\n\n\n\tMultiMap.prototype.names = function names() {\n\t\tvar _this2 = this;\n\n\t\treturn Object.keys(this.values).map(function (key) {\n\t\t\treturn _this2.keys[key];\n\t\t});\n\t};\n\n\t/**\n  * Removes all values from a key name.\n  * @param {string} name\n  * @chainable\n  */\n\n\n\tMultiMap.prototype.remove = function remove(name) {\n\t\tdelete this.keys[name.toLowerCase()];\n\t\tdelete this.values[name.toLowerCase()];\n\t\treturn this;\n\t};\n\n\t/**\n  * Sets the value of a key name. Relevant to replace the current values with\n  * a new one.\n  * @param {string} name\n  * @param {*} value\n  * @chainable\n  */\n\n\n\tMultiMap.prototype.set = function set(name, value) {\n\t\tthis.keys[name.toLowerCase()] = name;\n\t\tthis.values[name.toLowerCase()] = [value];\n\t\treturn this;\n\t};\n\n\t/**\n  * Gets the size of the map key names.\n  * @return {number}\n  */\n\n\n\tMultiMap.prototype.size = function size() {\n\t\treturn this.names().length;\n\t};\n\n\t/**\n  * Returns the parsed values as a string.\n  * @return {string}\n  */\n\n\n\tMultiMap.prototype.toString = function toString() {\n\t\treturn JSON.stringify(this.values);\n\t};\n\n\treturn MultiMap;\n}(_metal.Disposable);\n\nexports.default = MultiMap;"
        },
        {
          "id": 32,
          "identifier": "/Users/Liferay/trampo/senna.js/node_modules/metal-structs/lib/TreeNode.js",
          "name": "./node_modules/metal-structs/lib/TreeNode.js",
          "index": 17,
          "index2": 12,
          "size": 5460,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0
          ],
          "assets": [],
          "issuer": "/Users/Liferay/trampo/senna.js/node_modules/metal-structs/lib/all/structs.js",
          "issuerId": 12,
          "issuerName": "./node_modules/metal-structs/lib/all/structs.js",
          "profile": {
            "factory": 7,
            "building": 58,
            "dependencies": 1
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "reasons": [
            {
              "moduleId": 12,
              "moduleIdentifier": "/Users/Liferay/trampo/senna.js/node_modules/metal-structs/lib/all/structs.js",
              "module": "./node_modules/metal-structs/lib/all/structs.js",
              "moduleName": "./node_modules/metal-structs/lib/all/structs.js",
              "type": "cjs require",
              "userRequest": "../TreeNode",
              "loc": "12:16-38"
            }
          ],
          "usedExports": true,
          "providedExports": null,
          "optimizationBailout": [
            "ModuleConcatenation bailout: Module is not an ECMAScript module"
          ],
          "depth": 3,
          "source": "'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\n\nvar _metal = require('metal');\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\n * Generic tree node data structure with arbitrary number of child nodes.\n * @param {V} value Value.\n * @constructor\n */\nvar TreeNode = function () {\n\tfunction TreeNode(value) {\n\t\t_classCallCheck(this, TreeNode);\n\n\t\t/**\n   * The value.\n   * @private {V}\n   */\n\t\tthis.value_ = value;\n\n\t\t/**\n   * Reference to the parent node or null if it has no parent.\n   * @private {TreeNode}\n   */\n\t\tthis.parent_ = null;\n\n\t\t/**\n   * Child nodes or null in case of leaf node.\n   * @private {Array<!TreeNode>}\n   */\n\t\tthis.children_ = null;\n\t}\n\n\t/**\n  * Appends a child node to this node.\n  * @param {!TreeNode} child Orphan child node.\n  */\n\n\n\tTreeNode.prototype.addChild = function addChild(child) {\n\t\tassertChildHasNoParent(child);\n\t\tchild.setParent(this);\n\t\tthis.children_ = this.children_ || [];\n\t\tthis.children_.push(child);\n\t};\n\n\t/**\n  * Tells whether this node is the ancestor of the given node.\n  * @param {!TreeNode} node A node.\n  * @return {boolean} Whether this node is the ancestor of {@code node}.\n  */\n\n\n\tTreeNode.prototype.contains = function contains(node) {\n\t\tvar current = node.getParent();\n\t\twhile (current) {\n\t\t\tif (current === this) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tcurrent = current.getParent();\n\t\t}\n\t\treturn false;\n\t};\n\n\t/**\n  * @return {!Array<TreeNode>} All ancestor nodes in bottom-up order.\n  */\n\n\n\tTreeNode.prototype.getAncestors = function getAncestors() {\n\t\tvar ancestors = [];\n\t\tvar node = this.getParent();\n\t\twhile (node) {\n\t\t\tancestors.push(node);\n\t\t\tnode = node.getParent();\n\t\t}\n\t\treturn ancestors;\n\t};\n\n\t/**\n  * Gets the child node of this node at the given index.\n  * @param {number} index Child index.\n  * @return {?TreeNode} The node at the given index\n  * or null if not found.\n  */\n\n\n\tTreeNode.prototype.getChildAt = function getChildAt(index) {\n\t\treturn this.getChildren()[index] || null;\n\t};\n\n\t/**\n  * @return {?Array<!TreeNode>} Child nodes or null in case of leaf node.\n  */\n\n\n\tTreeNode.prototype.getChildren = function getChildren() {\n\t\treturn this.children_ || TreeNode.EMPTY_ARRAY;\n\t};\n\n\t/**\n  * @return {number} The number of children.\n  */\n\n\n\tTreeNode.prototype.getChildCount = function getChildCount() {\n\t\treturn this.getChildren().length;\n\t};\n\n\t/**\n  * @return {number} The number of ancestors of the node.\n  */\n\n\n\tTreeNode.prototype.getDepth = function getDepth() {\n\t\tvar depth = 0;\n\t\tvar node = this;\n\t\twhile (node.getParent()) {\n\t\t\tdepth++;\n\t\t\tnode = node.getParent();\n\t\t}\n\t\treturn depth;\n\t};\n\n\t/**\n  * @return {?TreeNode} Parent node or null if it has no parent.\n  */\n\n\n\tTreeNode.prototype.getParent = function getParent() {\n\t\treturn this.parent_;\n\t};\n\n\t/**\n  * @return {!TreeNode} The root of the tree structure, i.e. the farthest\n  * ancestor of the node or the node itself if it has no parents.\n  */\n\n\n\tTreeNode.prototype.getRoot = function getRoot() {\n\t\tvar root = this;\n\t\twhile (root.getParent()) {\n\t\t\troot = root.getParent();\n\t\t}\n\t\treturn root;\n\t};\n\n\t/**\n  * Gets the value.\n  * @return {V} The value.\n  */\n\n\n\tTreeNode.prototype.getValue = function getValue() {\n\t\treturn this.value_;\n\t};\n\n\t/**\n  * @return {boolean} Whether the node is a leaf node.\n  */\n\n\n\tTreeNode.prototype.isLeaf = function isLeaf() {\n\t\treturn !this.getChildCount();\n\t};\n\n\t/**\n  * Removes the given child node of this node.\n  * @param {TreeNode} child The node to remove.\n  * @return {TreeNode} The removed node if any, null otherwise.\n  */\n\n\n\tTreeNode.prototype.removeChild = function removeChild(child) {\n\t\tif (_metal.array.remove(this.getChildren(), child)) {\n\t\t\treturn child;\n\t\t}\n\t\treturn null;\n\t};\n\n\t/**\n  * Sets the parent node of this node. The callers must ensure that the\n  * parent node and only that has this node among its children.\n  * @param {TreeNode} parent The parent to set. If null, the node will be\n  * detached from the tree.\n  * @protected\n  */\n\n\n\tTreeNode.prototype.setParent = function setParent(parent) {\n\t\tthis.parent_ = parent;\n\t};\n\n\t/**\n  * Traverses the subtree. The first callback starts with this node,\n  * and visits the descendant nodes depth-first, in preorder.\n  * The second callback, starts with deepest child then visits\n  * the ancestor nodes depth-first, in postorder. E.g.\n  *\n  *  \t A\n  *    / \\\n  *   B   C\n  *  /   / \\\n  * D   E   F\n  *\n  * preorder -> ['A', 'B', 'D', 'C', 'E', 'F']\n  * postorder -> ['D', 'B', 'E', 'F', 'C', 'A']\n  *\n  * @param {function=} opt_preorderFn The callback to execute when visiting a node.\n  * @param {function=} opt_postorderFn The callback to execute before leaving a node.\n  */\n\n\n\tTreeNode.prototype.traverse = function traverse(opt_preorderFn, opt_postorderFn) {\n\t\tif (opt_preorderFn) {\n\t\t\topt_preorderFn(this);\n\t\t}\n\t\tthis.getChildren().forEach(function (child) {\n\t\t\treturn child.traverse(opt_preorderFn, opt_postorderFn);\n\t\t});\n\t\tif (opt_postorderFn) {\n\t\t\topt_postorderFn(this);\n\t\t}\n\t};\n\n\treturn TreeNode;\n}();\n\n/**\n * Constant for empty array to avoid unnecessary allocations.\n * @private\n */\n\n\nTreeNode.EMPTY_ARRAY = [];\n\n/**\n * Asserts that child has no parent.\n * @param {TreeNode} child A child.\n * @private\n */\nvar assertChildHasNoParent = function assertChildHasNoParent(child) {\n\tif (child.getParent()) {\n\t\tthrow new Error('Cannot add child with parent.');\n\t}\n};\n\nexports.default = TreeNode;"
        },
        {
          "id": 33,
          "identifier": "external \"path\"",
          "name": "external \"path\"",
          "index": 18,
          "index2": 15,
          "size": 42,
          "cacheable": false,
          "built": false,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0
          ],
          "assets": [],
          "issuer": "/Users/Liferay/trampo/senna.js/node_modules/metal-uri/node.js",
          "issuerId": 4,
          "issuerName": "./node_modules/metal-uri/node.js",
          "profile": {
            "factory": 0,
            "building": 0
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "reasons": [
            {
              "moduleId": 4,
              "moduleIdentifier": "/Users/Liferay/trampo/senna.js/node_modules/metal-uri/node.js",
              "module": "./node_modules/metal-uri/node.js",
              "moduleName": "./node_modules/metal-uri/node.js",
              "type": "cjs require",
              "userRequest": "path",
              "loc": "10:12-27"
            }
          ],
          "usedExports": true,
          "providedExports": null,
          "optimizationBailout": [
            "ModuleConcatenation bailout: Module is not an ECMAScript module"
          ],
          "depth": 3
        },
        {
          "id": 34,
          "identifier": "external \"url\"",
          "name": "external \"url\"",
          "index": 19,
          "index2": 16,
          "size": 42,
          "cacheable": false,
          "built": false,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0
          ],
          "assets": [],
          "issuer": "/Users/Liferay/trampo/senna.js/node_modules/metal-uri/node.js",
          "issuerId": 4,
          "issuerName": "./node_modules/metal-uri/node.js",
          "profile": {
            "factory": 0,
            "building": 0
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "reasons": [
            {
              "moduleId": 4,
              "moduleIdentifier": "/Users/Liferay/trampo/senna.js/node_modules/metal-uri/node.js",
              "module": "./node_modules/metal-uri/node.js",
              "moduleName": "./node_modules/metal-uri/node.js",
              "type": "cjs require",
              "userRequest": "url",
              "loc": "11:11-25"
            }
          ],
          "usedExports": true,
          "providedExports": null,
          "optimizationBailout": [
            "ModuleConcatenation bailout: Module is not an ECMAScript module"
          ],
          "depth": 3
        },
        {
          "id": 35,
          "identifier": "/Users/Liferay/trampo/senna.js/node_modules/babel-loader/lib/index.js??ref--0!/Users/Liferay/trampo/senna.js/src/app/dataAttributeHandler.js",
          "name": "./src/app/dataAttributeHandler.js",
          "index": 20,
          "index2": 50,
          "size": 860,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0
          ],
          "assets": [],
          "issuer": "/Users/Liferay/trampo/senna.js/node_modules/babel-loader/lib/index.js??ref--0!/Users/Liferay/trampo/senna.js/src/senna.js",
          "issuerId": 21,
          "issuerName": "./src/senna.js",
          "profile": {
            "factory": 17,
            "building": 134,
            "dependencies": 606
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "reasons": [
            {
              "moduleId": 21,
              "moduleIdentifier": "/Users/Liferay/trampo/senna.js/node_modules/babel-loader/lib/index.js??ref--0!/Users/Liferay/trampo/senna.js/src/senna.js",
              "module": "./src/senna.js",
              "moduleName": "./src/senna.js",
              "type": "amd require",
              "userRequest": "./app/dataAttributeHandler",
              "loc": "1:0-37:2"
            }
          ],
          "usedExports": true,
          "providedExports": null,
          "optimizationBailout": [
            "ModuleConcatenation bailout: Module is not an ECMAScript module"
          ],
          "depth": 1,
          "source": "define([\"exports\", \"../globals/globals\", \"./AppDataAttributeHandler\"], function (exports, _globals, _AppDataAttributeHandler) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n\n  var _globals2 = _interopRequireDefault(_globals);\n\n  var _AppDataAttributeHandler2 = _interopRequireDefault(_AppDataAttributeHandler);\n\n  function _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n      default: obj\n    };\n  }\n\n  /**\n   * Data attribute handler.\n   * @type {AppDataAttributeHandler}\n   */\n  var dataAttributeHandler = new _AppDataAttributeHandler2.default();\n\n  _globals2.default.document.addEventListener('DOMContentLoaded', function () {\n    dataAttributeHandler.setBaseElement(_globals2.default.document.body);\n    dataAttributeHandler.handle();\n  });\n\n  exports.default = dataAttributeHandler;\n});"
        },
        {
          "id": 36,
          "identifier": "/Users/Liferay/trampo/senna.js/node_modules/babel-loader/lib/index.js??ref--0!/Users/Liferay/trampo/senna.js/src/app/AppDataAttributeHandler.js",
          "name": "./src/app/AppDataAttributeHandler.js",
          "index": 21,
          "index2": 49,
          "size": 9834,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0
          ],
          "assets": [],
          "issuer": "/Users/Liferay/trampo/senna.js/node_modules/babel-loader/lib/index.js??ref--0!/Users/Liferay/trampo/senna.js/src/app/dataAttributeHandler.js",
          "issuerId": 35,
          "issuerName": "./src/app/dataAttributeHandler.js",
          "profile": {
            "factory": 605,
            "building": 70,
            "dependencies": 108
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "reasons": [
            {
              "moduleId": 35,
              "moduleIdentifier": "/Users/Liferay/trampo/senna.js/node_modules/babel-loader/lib/index.js??ref--0!/Users/Liferay/trampo/senna.js/src/app/dataAttributeHandler.js",
              "module": "./src/app/dataAttributeHandler.js",
              "moduleName": "./src/app/dataAttributeHandler.js",
              "type": "amd require",
              "userRequest": "./AppDataAttributeHandler",
              "loc": "1:0-30:2"
            }
          ],
          "usedExports": true,
          "providedExports": null,
          "optimizationBailout": [
            "ModuleConcatenation bailout: Module is not an ECMAScript module"
          ],
          "depth": 2,
          "source": "define([\"exports\", \"metal\", \"./dataAttributes\", \"../globals/globals\", \"./App\", \"../screen/HtmlScreen\", \"../route/Route\"], function (exports, _metal, _dataAttributes, _globals, _App, _HtmlScreen, _Route) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n\n  var _dataAttributes2 = _interopRequireDefault(_dataAttributes);\n\n  var _globals2 = _interopRequireDefault(_globals);\n\n  var _App2 = _interopRequireDefault(_App);\n\n  var _HtmlScreen2 = _interopRequireDefault(_HtmlScreen);\n\n  var _Route2 = _interopRequireDefault(_Route);\n\n  function _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n      default: obj\n    };\n  }\n\n  function _typeof(obj) {\n    if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n      _typeof = function _typeof(obj) {\n        return typeof obj;\n      };\n    } else {\n      _typeof = function _typeof(obj) {\n        return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n      };\n    }\n\n    return _typeof(obj);\n  }\n\n  function _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n      throw new TypeError(\"Cannot call a class as a function\");\n    }\n  }\n\n  function _defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  function _createClass(Constructor, protoProps, staticProps) {\n    if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) _defineProperties(Constructor, staticProps);\n    return Constructor;\n  }\n\n  function _possibleConstructorReturn(self, call) {\n    if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n      return call;\n    }\n\n    if (!self) {\n      throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }\n\n    return self;\n  }\n\n  function _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n      throw new TypeError(\"Super expression must either be null or a function\");\n    }\n\n    subClass.prototype = Object.create(superClass && superClass.prototype, {\n      constructor: {\n        value: subClass,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n    if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n  }\n\n  var AppDataAttributeHandler = function (_Disposable) {\n    _inherits(AppDataAttributeHandler, _Disposable);\n\n    /**\n     * Initilizes App, register surfaces and routes from data attributes.\n     * @constructor\n     */\n    function AppDataAttributeHandler() {\n      var _this;\n\n      _classCallCheck(this, AppDataAttributeHandler);\n\n      _this = _possibleConstructorReturn(this, (AppDataAttributeHandler.__proto__ || Object.getPrototypeOf(AppDataAttributeHandler)).call(this));\n      /**\n       * Holds the app reference initialized by data attributes.\n       * @type {App}\n       * @default null\n       */\n\n      _this.app = null;\n      /**\n       * Holds the base element to search initialization data attributes. This\n       * element is the container used to enable initialization based on the\n       * presence of `data-senna` attribute.\n       * @type {Element}\n       * @default null\n       */\n\n      _this.baseElement = null;\n      return _this;\n    }\n    /**\n     * Inits application based on information scanned from document.\n     */\n\n\n    _createClass(AppDataAttributeHandler, [{\n      key: \"handle\",\n      value: function handle() {\n        if (!(0, _metal.isElement)(this.baseElement)) {\n          throw new Error('Senna data attribute handler base element ' + 'not set or invalid, try setting a valid element that ' + 'contains a `data-senna` attribute.');\n        }\n\n        if (!this.baseElement.hasAttribute(_dataAttributes2.default.senna)) {\n          console.log('Senna was not initialized from data attributes. ' + 'In order to enable its usage from data attributes try setting ' + 'in the base element, e.g. `<body data-senna>`.');\n          return;\n        }\n\n        if (this.app) {\n          throw new Error('Senna app was already initialized.');\n        }\n\n        console.log('Senna initialized from data attribute.');\n        this.app = new _App2.default();\n        this.maybeAddRoutes_();\n        this.maybeAddSurfaces_();\n        this.maybeSetBasePath_();\n        this.maybeSetLinkSelector_();\n        this.maybeSetLoadingCssClass_();\n        this.maybeSetUpdateScrollPosition_();\n        this.maybeDispatch_();\n      }\n    }, {\n      key: \"disposeInternal\",\n      value: function disposeInternal() {\n        if (this.app) {\n          this.app.dispose();\n        }\n      }\n    }, {\n      key: \"getApp\",\n      value: function getApp() {\n        return this.app;\n      }\n    }, {\n      key: \"getBaseElement\",\n      value: function getBaseElement() {\n        return this.baseElement;\n      }\n    }, {\n      key: \"maybeAddRoutes_\",\n      value: function maybeAddRoutes_() {\n        var _this2 = this;\n\n        var routesSelector = 'link[rel=\"senna-route\"]';\n        this.querySelectorAllAsArray_(routesSelector).forEach(function (link) {\n          return _this2.maybeParseLinkRoute_(link);\n        });\n\n        if (!this.app.hasRoutes()) {\n          this.app.addRoutes(new _Route2.default(/.*/, _HtmlScreen2.default));\n          console.log('Senna can\\'t find route elements, adding default.');\n        }\n      }\n    }, {\n      key: \"maybeAddSurfaces_\",\n      value: function maybeAddSurfaces_() {\n        var _this3 = this;\n\n        var surfacesSelector = '[' + _dataAttributes2.default.surface + ']';\n        this.querySelectorAllAsArray_(surfacesSelector).forEach(function (surfaceElement) {\n          _this3.updateElementIdIfSpecialSurface_(surfaceElement);\n\n          _this3.app.addSurfaces(surfaceElement.id);\n        });\n      }\n    }, {\n      key: \"maybeDispatch_\",\n      value: function maybeDispatch_() {\n        if (this.baseElement.hasAttribute(_dataAttributes2.default.dispatch)) {\n          this.app.dispatch();\n        }\n      }\n    }, {\n      key: \"maybeParseLinkRoute_\",\n      value: function maybeParseLinkRoute_(link) {\n        var route = new _Route2.default(this.maybeParseLinkRoutePath_(link), this.maybeParseLinkRouteHandler_(link));\n        this.app.addRoutes(route);\n        console.log('Senna scanned route ' + route.getPath());\n      }\n    }, {\n      key: \"maybeParseLinkRouteHandler_\",\n      value: function maybeParseLinkRouteHandler_(link) {\n        var handler = link.getAttribute('type');\n\n        if ((0, _metal.isDefAndNotNull)(handler)) {\n          handler = _metal.object.getObjectByName(handler);\n        }\n\n        return handler;\n      }\n    }, {\n      key: \"maybeParseLinkRoutePath_\",\n      value: function maybeParseLinkRoutePath_(link) {\n        var path = link.getAttribute('href');\n\n        if ((0, _metal.isDefAndNotNull)(path)) {\n          if (path.indexOf('regex:') === 0) {\n            path = new RegExp(path.substring(6));\n          }\n        }\n\n        return path;\n      }\n    }, {\n      key: \"maybeSetBasePath_\",\n      value: function maybeSetBasePath_() {\n        var basePath = this.baseElement.getAttribute(_dataAttributes2.default.basePath);\n\n        if ((0, _metal.isDefAndNotNull)(basePath)) {\n          this.app.setBasePath(basePath);\n          console.log('Senna scanned base path ' + basePath);\n        }\n      }\n    }, {\n      key: \"maybeSetLinkSelector_\",\n      value: function maybeSetLinkSelector_() {\n        var linkSelector = this.baseElement.getAttribute(_dataAttributes2.default.linkSelector);\n\n        if ((0, _metal.isDefAndNotNull)(linkSelector)) {\n          this.app.setLinkSelector(linkSelector);\n          console.log('Senna scanned link selector ' + linkSelector);\n        }\n      }\n    }, {\n      key: \"maybeSetLoadingCssClass_\",\n      value: function maybeSetLoadingCssClass_() {\n        var loadingCssClass = this.baseElement.getAttribute(_dataAttributes2.default.loadingCssClass);\n\n        if ((0, _metal.isDefAndNotNull)(loadingCssClass)) {\n          this.app.setLoadingCssClass(loadingCssClass);\n          console.log('Senna scanned loading css class ' + loadingCssClass);\n        }\n      }\n    }, {\n      key: \"maybeSetUpdateScrollPosition_\",\n      value: function maybeSetUpdateScrollPosition_() {\n        var updateScrollPosition = this.baseElement.getAttribute(_dataAttributes2.default.updateScrollPosition);\n\n        if ((0, _metal.isDefAndNotNull)(updateScrollPosition)) {\n          if (updateScrollPosition === 'false') {\n            this.app.setUpdateScrollPosition(false);\n          } else {\n            this.app.setUpdateScrollPosition(true);\n          }\n\n          console.log('Senna scanned update scroll position ' + updateScrollPosition);\n        }\n      }\n    }, {\n      key: \"querySelectorAllAsArray_\",\n      value: function querySelectorAllAsArray_(selector) {\n        return Array.prototype.slice.call(_globals2.default.document.querySelectorAll(selector));\n      }\n    }, {\n      key: \"updateElementIdIfSpecialSurface_\",\n      value: function updateElementIdIfSpecialSurface_(element) {\n        if (!element.id && element === _globals2.default.document.body) {\n          element.id = 'senna_surface_' + (0, _metal.getUid)();\n        }\n      }\n    }, {\n      key: \"setBaseElement\",\n      value: function setBaseElement(baseElement) {\n        this.baseElement = baseElement;\n      }\n    }]);\n\n    return AppDataAttributeHandler;\n  }(_metal.Disposable);\n\n  exports.default = AppDataAttributeHandler;\n});"
        },
        {
          "id": 37,
          "identifier": "/Users/Liferay/trampo/senna.js/node_modules/babel-loader/lib/index.js??ref--0!/Users/Liferay/trampo/senna.js/src/app/dataAttributes.js",
          "name": "./src/app/dataAttributes.js",
          "index": 22,
          "index2": 19,
          "size": 455,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0
          ],
          "assets": [],
          "issuer": "/Users/Liferay/trampo/senna.js/node_modules/babel-loader/lib/index.js??ref--0!/Users/Liferay/trampo/senna.js/src/app/AppDataAttributeHandler.js",
          "issuerId": 36,
          "issuerName": "./src/app/AppDataAttributeHandler.js",
          "profile": {
            "factory": 107,
            "building": 8
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "reasons": [
            {
              "moduleId": 36,
              "moduleIdentifier": "/Users/Liferay/trampo/senna.js/node_modules/babel-loader/lib/index.js??ref--0!/Users/Liferay/trampo/senna.js/src/app/AppDataAttributeHandler.js",
              "module": "./src/app/AppDataAttributeHandler.js",
              "moduleName": "./src/app/AppDataAttributeHandler.js",
              "type": "amd require",
              "userRequest": "./dataAttributes",
              "loc": "1:0-300:2"
            }
          ],
          "usedExports": true,
          "providedExports": null,
          "optimizationBailout": [
            "ModuleConcatenation bailout: Module is not an ECMAScript module"
          ],
          "depth": 3,
          "source": "define([\"exports\"], function (exports) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = {\n    basePath: 'data-senna-base-path',\n    linkSelector: 'data-senna-link-selector',\n    loadingCssClass: 'data-senna-loading-css-class',\n    senna: 'data-senna',\n    dispatch: 'data-senna-dispatch',\n    surface: 'data-senna-surface',\n    updateScrollPosition: 'data-senna-update-scroll-position'\n  };\n});"
        },
        {
          "id": 38,
          "identifier": "/Users/Liferay/trampo/senna.js/node_modules/metal-events/lib/EventEmitter.js",
          "name": "./node_modules/metal-events/lib/EventEmitter.js",
          "index": 25,
          "index2": 21,
          "size": 15264,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0
          ],
          "assets": [],
          "issuer": "/Users/Liferay/trampo/senna.js/node_modules/metal-events/lib/events.js",
          "issuerId": 6,
          "issuerName": "./node_modules/metal-events/lib/events.js",
          "profile": {
            "factory": 26,
            "building": 16,
            "dependencies": 18
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "reasons": [
            {
              "moduleId": 6,
              "moduleIdentifier": "/Users/Liferay/trampo/senna.js/node_modules/metal-events/lib/events.js",
              "module": "./node_modules/metal-events/lib/events.js",
              "moduleName": "./node_modules/metal-events/lib/events.js",
              "type": "cjs require",
              "userRequest": "./EventEmitter",
              "loc": "8:20-45"
            }
          ],
          "usedExports": true,
          "providedExports": null,
          "optimizationBailout": [
            "ModuleConcatenation bailout: Module is not an ECMAScript module"
          ],
          "depth": 3,
          "source": "'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _metal = require('metal');\n\nvar _EventHandle = require('./EventHandle');\n\nvar _EventHandle2 = _interopRequireDefault(_EventHandle);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar singleArray_ = [0];\n\n/**\n * EventEmitter utility.\n * @constructor\n * @extends {Disposable}\n */\n\nvar EventEmitter = function (_Disposable) {\n\t_inherits(EventEmitter, _Disposable);\n\n\tfunction EventEmitter() {\n\t\t_classCallCheck(this, EventEmitter);\n\n\t\t/**\n   * Holds event listeners scoped by event type.\n   * @type {Object<string, !Array<!function()>>}\n   * @protected\n   */\n\t\tvar _this = _possibleConstructorReturn(this, (EventEmitter.__proto__ || Object.getPrototypeOf(EventEmitter)).call(this));\n\n\t\t_this.events_ = null;\n\n\t\t/**\n   * Handlers that are triggered when an event is listened to.\n   * @type {Array}\n   */\n\t\t_this.listenerHandlers_ = null;\n\n\t\t/**\n   * Configuration option which determines if an event facade should be sent\n   * as a param of listeners when emitting events. If set to true, the facade\n   * will be passed as the first argument of the listener.\n   * @type {boolean}\n   * @protected\n   */\n\t\t_this.shouldUseFacade_ = false;\n\t\treturn _this;\n\t}\n\n\t/**\n  * Adds a handler to given holder variable. If the holder doesn't have a\n  * value yet, it will receive the handler directly. If the holder is an array,\n  * the value will just be added to it. Otherwise, the holder will be set to a\n  * new array containing its previous value plus the new handler.\n  * @param {*} holder\n  * @param {!function()|Object} handler\n  * @return {*} The holder's new value.\n  * @protected\n  */\n\n\n\t_createClass(EventEmitter, [{\n\t\tkey: 'addHandler_',\n\t\tvalue: function addHandler_(holder, handler) {\n\t\t\tif (!holder) {\n\t\t\t\tholder = handler;\n\t\t\t} else {\n\t\t\t\tif (!Array.isArray(holder)) {\n\t\t\t\t\tholder = [holder];\n\t\t\t\t}\n\t\t\t\tholder.push(handler);\n\t\t\t}\n\t\t\treturn holder;\n\t\t}\n\n\t\t/**\n   * Adds a listener to the end of the listeners array for the specified events.\n   * @param {!(Array|string)} event\n   * @param {!Function} listener\n   * @param {boolean} opt_default Flag indicating if this listener is a default\n   *   action for this event. Default actions are run last, and only if no previous\n   *   listener call `preventDefault()` on the received event facade.\n   * @return {!EventHandle} Can be used to remove the listener.\n   */\n\n\t}, {\n\t\tkey: 'addListener',\n\t\tvalue: function addListener(event, listener, opt_default) {\n\t\t\tthis.validateListener_(listener);\n\n\t\t\tvar events = this.toEventsArray_(event);\n\t\t\tfor (var i = 0; i < events.length; i++) {\n\t\t\t\tthis.addSingleListener_(events[i], listener, opt_default);\n\t\t\t}\n\n\t\t\treturn new _EventHandle2.default(this, event, listener);\n\t\t}\n\n\t\t/**\n   * Adds a listener to the end of the listeners array for a single event.\n   * @param {string} event\n   * @param {!Function} listener\n   * @param {boolean} opt_default Flag indicating if this listener is a default\n   *   action for this event. Default actions are run last, and only if no previous\n   *   listener call `preventDefault()` on the received event facade.\n   * @return {!EventHandle} Can be used to remove the listener.\n   * @param {Function=} opt_origin The original function that was added as a\n   *   listener, if there is any.\n   * @protected\n   */\n\n\t}, {\n\t\tkey: 'addSingleListener_',\n\t\tvalue: function addSingleListener_(event, listener, opt_default, opt_origin) {\n\t\t\tthis.runListenerHandlers_(event);\n\t\t\tif (opt_default || opt_origin) {\n\t\t\t\tlistener = {\n\t\t\t\t\tdefault: opt_default,\n\t\t\t\t\tfn: listener,\n\t\t\t\t\torigin: opt_origin\n\t\t\t\t};\n\t\t\t}\n\t\t\tthis.events_ = this.events_ || {};\n\t\t\tthis.events_[event] = this.addHandler_(this.events_[event], listener);\n\t\t}\n\n\t\t/**\n   * Builds facade for the given event.\n   * @param {string} event\n   * @return {Object}\n   * @protected\n   */\n\n\t}, {\n\t\tkey: 'buildFacade_',\n\t\tvalue: function buildFacade_(event) {\n\t\t\tif (this.getShouldUseFacade()) {\n\t\t\t\tvar facade = {\n\t\t\t\t\tpreventDefault: function preventDefault() {\n\t\t\t\t\t\tfacade.preventedDefault = true;\n\t\t\t\t\t},\n\t\t\t\t\ttarget: this,\n\t\t\t\t\ttype: event\n\t\t\t\t};\n\t\t\t\treturn facade;\n\t\t\t}\n\t\t}\n\n\t\t/**\n   * Disposes of this instance's object references.\n   * @override\n   */\n\n\t}, {\n\t\tkey: 'disposeInternal',\n\t\tvalue: function disposeInternal() {\n\t\t\tthis.events_ = null;\n\t\t}\n\n\t\t/**\n   * Execute each of the listeners in order with the supplied arguments.\n   * @param {string} event\n   * @param {*} opt_args [arg1], [arg2], [...]\n   * @return {boolean} Returns true if event had listeners, false otherwise.\n   */\n\n\t}, {\n\t\tkey: 'emit',\n\t\tvalue: function emit(event) {\n\t\t\tvar listeners = this.getRawListeners_(event);\n\t\t\tif (listeners.length === 0) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tvar args = _metal.array.slice(arguments, 1);\n\t\t\tthis.runListeners_(listeners, args, this.buildFacade_(event));\n\t\t\treturn true;\n\t\t}\n\n\t\t/**\n   * Gets the listener objects for the given event, if there are any.\n   * @param {string} event\n   * @return {!Array}\n   * @protected\n   */\n\n\t}, {\n\t\tkey: 'getRawListeners_',\n\t\tvalue: function getRawListeners_(event) {\n\t\t\tvar directListeners = toArray(this.events_ && this.events_[event]);\n\t\t\treturn directListeners.concat(toArray(this.events_ && this.events_['*']));\n\t\t}\n\n\t\t/**\n   * Gets the configuration option which determines if an event facade should\n   * be sent as a param of listeners when emitting events. If set to true, the\n   * facade will be passed as the first argument of the listener.\n   * @return {boolean}\n   */\n\n\t}, {\n\t\tkey: 'getShouldUseFacade',\n\t\tvalue: function getShouldUseFacade() {\n\t\t\treturn this.shouldUseFacade_;\n\t\t}\n\n\t\t/**\n   * Returns an array of listeners for the specified event.\n   * @param {string} event\n   * @return {Array} Array of listeners.\n   */\n\n\t}, {\n\t\tkey: 'listeners',\n\t\tvalue: function listeners(event) {\n\t\t\treturn this.getRawListeners_(event).map(function (listener) {\n\t\t\t\treturn listener.fn ? listener.fn : listener;\n\t\t\t});\n\t\t}\n\n\t\t/**\n   * Adds a listener that will be invoked a fixed number of times for the\n   * events. After each event is triggered the specified amount of times, the\n   * listener is removed for it.\n   * @param {!(Array|string)} event\n   * @param {number} amount The amount of times this event should be listened\n   * to.\n   * @param {!Function} listener\n   * @return {!EventHandle} Can be used to remove the listener.\n   */\n\n\t}, {\n\t\tkey: 'many',\n\t\tvalue: function many(event, amount, listener) {\n\t\t\tvar events = this.toEventsArray_(event);\n\t\t\tfor (var i = 0; i < events.length; i++) {\n\t\t\t\tthis.many_(events[i], amount, listener);\n\t\t\t}\n\n\t\t\treturn new _EventHandle2.default(this, event, listener);\n\t\t}\n\n\t\t/**\n   * Adds a listener that will be invoked a fixed number of times for a single\n   * event. After the event is triggered the specified amount of times, the\n   * listener is removed.\n   * @param {string} event\n   * @param {number} amount The amount of times this event should be listened\n   * to.\n   * @param {!Function} listener\n   * @protected\n   */\n\n\t}, {\n\t\tkey: 'many_',\n\t\tvalue: function many_(event, amount, listener) {\n\t\t\tvar self = this;\n\n\t\t\tif (amount <= 0) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tfunction handlerInternal() {\n\t\t\t\tif (--amount === 0) {\n\t\t\t\t\tself.removeListener(event, handlerInternal);\n\t\t\t\t}\n\t\t\t\tlistener.apply(self, arguments);\n\t\t\t}\n\n\t\t\tself.addSingleListener_(event, handlerInternal, false, listener);\n\t\t}\n\n\t\t/**\n   * Checks if a listener object matches the given listener function. To match,\n   * it needs to either point to that listener or have it as its origin.\n   * @param {!Object} listenerObj\n   * @param {!Function} listener\n   * @return {boolean}\n   * @protected\n   */\n\n\t}, {\n\t\tkey: 'matchesListener_',\n\t\tvalue: function matchesListener_(listenerObj, listener) {\n\t\t\tvar fn = listenerObj.fn || listenerObj;\n\t\t\treturn fn === listener || listenerObj.origin && listenerObj.origin === listener;\n\t\t}\n\n\t\t/**\n   * Removes a listener for the specified events.\n   * Caution: changes array indices in the listener array behind the listener.\n   * @param {!(Array|string)} events\n   * @param {!Function} listener\n   * @return {!Object} Returns emitter, so calls can be chained.\n   */\n\n\t}, {\n\t\tkey: 'off',\n\t\tvalue: function off(event, listener) {\n\t\t\tthis.validateListener_(listener);\n\t\t\tif (!this.events_) {\n\t\t\t\treturn this;\n\t\t\t}\n\n\t\t\tvar events = this.toEventsArray_(event);\n\t\t\tfor (var i = 0; i < events.length; i++) {\n\t\t\t\tthis.events_[events[i]] = this.removeMatchingListenerObjs_(toArray(this.events_[events[i]]), listener);\n\t\t\t}\n\n\t\t\treturn this;\n\t\t}\n\n\t\t/**\n   * Adds a listener to the end of the listeners array for the specified events.\n   * @param {!(Array|string)} events\n   * @param {!Function} listener\n   * @return {!EventHandle} Can be used to remove the listener.\n   */\n\n\t}, {\n\t\tkey: 'on',\n\t\tvalue: function on() {\n\t\t\treturn this.addListener.apply(this, arguments);\n\t\t}\n\n\t\t/**\n   * Adds handler that gets triggered when an event is listened to on this\n   * instance.\n   * @param {!function()}\n   */\n\n\t}, {\n\t\tkey: 'onListener',\n\t\tvalue: function onListener(handler) {\n\t\t\tthis.listenerHandlers_ = this.addHandler_(this.listenerHandlers_, handler);\n\t\t}\n\n\t\t/**\n   * Adds a one time listener for the events. This listener is invoked only the\n   * next time each event is fired, after which it is removed.\n   * @param {!(Array|string)} events\n   * @param {!Function} listener\n   * @return {!EventHandle} Can be used to remove the listener.\n   */\n\n\t}, {\n\t\tkey: 'once',\n\t\tvalue: function once(events, listener) {\n\t\t\treturn this.many(events, 1, listener);\n\t\t}\n\n\t\t/**\n   * Removes all listeners, or those of the specified events. It's not a good\n   * idea to remove listeners that were added elsewhere in the code,\n   * especially when it's on an emitter that you didn't create.\n   * @param {(Array|string)=} opt_events\n   * @return {!Object} Returns emitter, so calls can be chained.\n   */\n\n\t}, {\n\t\tkey: 'removeAllListeners',\n\t\tvalue: function removeAllListeners(opt_events) {\n\t\t\tif (this.events_) {\n\t\t\t\tif (opt_events) {\n\t\t\t\t\tvar events = this.toEventsArray_(opt_events);\n\t\t\t\t\tfor (var i = 0; i < events.length; i++) {\n\t\t\t\t\t\tthis.events_[events[i]] = null;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tthis.events_ = null;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn this;\n\t\t}\n\n\t\t/**\n   * Removes all listener objects from the given array that match the given\n   * listener function.\n   * @param {Array.<Object>} listenerObjs\n   * @param {!Function} listener\n   * @return {Array.<Object>|Object} The new listeners array for this event.\n   * @protected\n   */\n\n\t}, {\n\t\tkey: 'removeMatchingListenerObjs_',\n\t\tvalue: function removeMatchingListenerObjs_(listenerObjs, listener) {\n\t\t\tvar finalListeners = [];\n\t\t\tfor (var i = 0; i < listenerObjs.length; i++) {\n\t\t\t\tif (!this.matchesListener_(listenerObjs[i], listener)) {\n\t\t\t\t\tfinalListeners.push(listenerObjs[i]);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn finalListeners.length > 0 ? finalListeners : null;\n\t\t}\n\n\t\t/**\n   * Removes a listener for the specified events.\n   * Caution: changes array indices in the listener array behind the listener.\n   * @param {!(Array|string)} events\n   * @param {!Function} listener\n   * @return {!Object} Returns emitter, so calls can be chained.\n   */\n\n\t}, {\n\t\tkey: 'removeListener',\n\t\tvalue: function removeListener() {\n\t\t\treturn this.off.apply(this, arguments);\n\t\t}\n\n\t\t/**\n   * Runs the handlers when an event is listened to.\n   * @param {string} event\n   * @protected\n   */\n\n\t}, {\n\t\tkey: 'runListenerHandlers_',\n\t\tvalue: function runListenerHandlers_(event) {\n\t\t\tvar handlers = this.listenerHandlers_;\n\t\t\tif (handlers) {\n\t\t\t\thandlers = toArray(handlers);\n\t\t\t\tfor (var i = 0; i < handlers.length; i++) {\n\t\t\t\t\thandlers[i](event);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t/**\n   * Runs the given listeners.\n   * @param {!Array} listeners\n   * @param {!Array} args\n   * @param (Object) facade\n   * @protected\n   */\n\n\t}, {\n\t\tkey: 'runListeners_',\n\t\tvalue: function runListeners_(listeners, args, facade) {\n\t\t\tif (facade) {\n\t\t\t\targs.push(facade);\n\t\t\t}\n\n\t\t\tvar defaultListeners = [];\n\t\t\tfor (var i = 0; i < listeners.length; i++) {\n\t\t\t\tvar listener = listeners[i].fn || listeners[i];\n\t\t\t\tif (listeners[i].default) {\n\t\t\t\t\tdefaultListeners.push(listener);\n\t\t\t\t} else {\n\t\t\t\t\tlistener.apply(this, args);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (!facade || !facade.preventedDefault) {\n\t\t\t\tfor (var j = 0; j < defaultListeners.length; j++) {\n\t\t\t\t\tdefaultListeners[j].apply(this, args);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t/**\n   * Sets the configuration option which determines if an event facade should\n   * be sent as a param of listeners when emitting events. If set to true, the\n   * facade will be passed as the first argument of the listener.\n   * @param {boolean} shouldUseFacade\n   * @return {!Object} Returns emitter, so calls can be chained.\n   */\n\n\t}, {\n\t\tkey: 'setShouldUseFacade',\n\t\tvalue: function setShouldUseFacade(shouldUseFacade) {\n\t\t\tthis.shouldUseFacade_ = shouldUseFacade;\n\t\t\treturn this;\n\t\t}\n\n\t\t/**\n   * Converts the parameter to an array if only one event is given. Reuses the\n   * same array each time this conversion is done, to avoid using more memory\n   * than necessary.\n   * @param  {!(Array|string)} events\n   * @return {!Array}\n   * @protected\n   */\n\n\t}, {\n\t\tkey: 'toEventsArray_',\n\t\tvalue: function toEventsArray_(events) {\n\t\t\tif ((0, _metal.isString)(events)) {\n\t\t\t\tsingleArray_[0] = events;\n\t\t\t\tevents = singleArray_;\n\t\t\t}\n\t\t\treturn events;\n\t\t}\n\n\t\t/**\n   * Checks if the given listener is valid, throwing an exception when it's not.\n   * @param  {*} listener\n   * @protected\n   */\n\n\t}, {\n\t\tkey: 'validateListener_',\n\t\tvalue: function validateListener_(listener) {\n\t\t\tif (!(0, _metal.isFunction)(listener)) {\n\t\t\t\tthrow new TypeError('Listener must be a function');\n\t\t\t}\n\t\t}\n\t}]);\n\n\treturn EventEmitter;\n}(_metal.Disposable);\n\nfunction toArray(val) {\n\tval = val || [];\n\treturn Array.isArray(val) ? val : [val];\n}\n\nexports.default = EventEmitter;"
        },
        {
          "id": 39,
          "identifier": "/Users/Liferay/trampo/senna.js/node_modules/metal-events/lib/EventEmitterProxy.js",
          "name": "./node_modules/metal-events/lib/EventEmitterProxy.js",
          "index": 27,
          "index2": 22,
          "size": 7311,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0
          ],
          "assets": [],
          "issuer": "/Users/Liferay/trampo/senna.js/node_modules/metal-events/lib/events.js",
          "issuerId": 6,
          "issuerName": "./node_modules/metal-events/lib/events.js",
          "profile": {
            "factory": 26,
            "building": 19,
            "dependencies": 15
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "reasons": [
            {
              "moduleId": 6,
              "moduleIdentifier": "/Users/Liferay/trampo/senna.js/node_modules/metal-events/lib/events.js",
              "module": "./node_modules/metal-events/lib/events.js",
              "moduleName": "./node_modules/metal-events/lib/events.js",
              "type": "cjs require",
              "userRequest": "./EventEmitterProxy",
              "loc": "12:25-55"
            }
          ],
          "usedExports": true,
          "providedExports": null,
          "optimizationBailout": [
            "ModuleConcatenation bailout: Module is not an ECMAScript module"
          ],
          "depth": 3,
          "source": "'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _metal = require('metal');\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n/**\n * EventEmitterProxy utility. It's responsible for linking two EventEmitter\n * instances together, emitting events from the first emitter through the\n * second one. That means that listening to a supported event on the target\n * emitter will mean listening to it on the origin emitter as well.\n * @param {EventEmitter} originEmitter Events originated on this emitter\n *   will be fired for the target emitter's listeners as well.\n * @param {EventEmitter} targetEmitter Event listeners attached to this emitter\n *   will also be triggered when the event is fired by the origin emitter.\n * @param {Object} opt_blacklist Optional blacklist of events that should not be\n *   proxied.\n * @constructor\n * @extends {Disposable}\n */\nvar EventEmitterProxy = function (_Disposable) {\n\t_inherits(EventEmitterProxy, _Disposable);\n\n\tfunction EventEmitterProxy(originEmitter, targetEmitter, opt_blacklist, opt_whitelist) {\n\t\t_classCallCheck(this, EventEmitterProxy);\n\n\t\t/**\n   * Map of events that should not be proxied.\n   * @type {Object}\n   * @protected\n   */\n\t\tvar _this = _possibleConstructorReturn(this, (EventEmitterProxy.__proto__ || Object.getPrototypeOf(EventEmitterProxy)).call(this));\n\n\t\t_this.blacklist_ = opt_blacklist;\n\n\t\t/**\n   * The origin emitter. This emitter's events will be proxied through the\n   * target emitter.\n   * @type {EventEmitter}\n   * @protected\n   */\n\t\t_this.originEmitter_ = originEmitter;\n\n\t\t/**\n   * A list of events that are pending to be listened by an actual origin\n   * emitter. Events are stored here when the origin doesn't exist, so they\n   * can be set on a new origin when one is set.\n   * @type {Array}\n   * @protected\n   */\n\t\t_this.pendingEvents_ = null;\n\n\t\t/**\n   * Holds a map of events from the origin emitter that are already being proxied.\n   * @type {Object<string, !EventHandle>}\n   * @protected\n   */\n\t\t_this.proxiedEvents_ = null;\n\n\t\t/**\n   * The target emitter. This emitter will emit all events that come from\n   * the origin emitter.\n   * @type {EventEmitter}\n   * @protected\n   */\n\t\t_this.targetEmitter_ = targetEmitter;\n\n\t\t/**\n   * Map of events that should be proxied. If whitelist is set blacklist is ignored.\n   * @type {Object}\n   * @protected\n   */\n\t\t_this.whitelist_ = opt_whitelist;\n\n\t\t_this.startProxy_();\n\t\treturn _this;\n\t}\n\n\t/**\n  * Adds the given listener for the given event.\n  * @param {string} event\n  * @param {!function()} listener\n  * @return {!EventHandle} The listened event's handle.\n  * @protected\n  */\n\n\n\t_createClass(EventEmitterProxy, [{\n\t\tkey: 'addListener_',\n\t\tvalue: function addListener_(event, listener) {\n\t\t\treturn this.originEmitter_.on(event, listener);\n\t\t}\n\n\t\t/**\n   * @inheritDoc\n   */\n\n\t}, {\n\t\tkey: 'disposeInternal',\n\t\tvalue: function disposeInternal() {\n\t\t\tthis.removeListeners_();\n\t\t\tthis.proxiedEvents_ = null;\n\t\t\tthis.originEmitter_ = null;\n\t\t\tthis.targetEmitter_ = null;\n\t\t}\n\n\t\t/**\n   * Emits the specified event type on the target emitter.\n   * @protected\n   */\n\n\t}, {\n\t\tkey: 'emitOnTarget_',\n\t\tvalue: function emitOnTarget_() {\n\t\t\tthis.targetEmitter_.emit.apply(this.targetEmitter_, arguments);\n\t\t}\n\n\t\t/**\n   * Proxies the given event from the origin to the target emitter.\n   * @param {string} event\n   */\n\n\t}, {\n\t\tkey: 'proxyEvent',\n\t\tvalue: function proxyEvent(event) {\n\t\t\tif (this.shouldProxyEvent_(event)) {\n\t\t\t\tthis.tryToAddListener_(event);\n\t\t\t}\n\t\t}\n\n\t\t/**\n   * Removes the proxy listener for all events.\n   * @protected\n   */\n\n\t}, {\n\t\tkey: 'removeListeners_',\n\t\tvalue: function removeListeners_() {\n\t\t\tif (this.proxiedEvents_) {\n\t\t\t\tvar events = Object.keys(this.proxiedEvents_);\n\t\t\t\tfor (var i = 0; i < events.length; i++) {\n\t\t\t\t\tthis.proxiedEvents_[events[i]].removeListener();\n\t\t\t\t}\n\t\t\t\tthis.proxiedEvents_ = null;\n\t\t\t}\n\t\t\tthis.pendingEvents_ = null;\n\t\t}\n\n\t\t/**\n   * Changes the origin emitter. This automatically detaches any events that\n   * were already being proxied from the previous emitter, and starts proxying\n   * them on the new emitter instead.\n   * @param {!EventEmitter} originEmitter\n   */\n\n\t}, {\n\t\tkey: 'setOriginEmitter',\n\t\tvalue: function setOriginEmitter(originEmitter) {\n\t\t\tvar _this2 = this;\n\n\t\t\tvar events = this.originEmitter_ && this.proxiedEvents_ ? Object.keys(this.proxiedEvents_) : this.pendingEvents_;\n\t\t\tthis.originEmitter_ = originEmitter;\n\t\t\tif (events) {\n\t\t\t\tthis.removeListeners_();\n\t\t\t\tevents.forEach(function (event) {\n\t\t\t\t\treturn _this2.proxyEvent(event);\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\t/**\n   * Checks if the given event should be proxied.\n   * @param {string} event\n   * @return {boolean}\n   * @protected\n   */\n\n\t}, {\n\t\tkey: 'shouldProxyEvent_',\n\t\tvalue: function shouldProxyEvent_(event) {\n\t\t\tif (this.whitelist_ && !this.whitelist_[event]) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tif (this.blacklist_ && this.blacklist_[event]) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\treturn !this.proxiedEvents_ || !this.proxiedEvents_[event];\n\t\t}\n\n\t\t/**\n   * Starts proxying all events from the origin to the target emitter.\n   * @protected\n   */\n\n\t}, {\n\t\tkey: 'startProxy_',\n\t\tvalue: function startProxy_() {\n\t\t\tthis.targetEmitter_.onListener(this.proxyEvent.bind(this));\n\t\t}\n\n\t\t/**\n   * Adds a listener to the origin emitter, if it exists. Otherwise, stores\n   * the pending listener so it can be used on a future origin emitter.\n   * @param {string} event\n   * @protected\n   */\n\n\t}, {\n\t\tkey: 'tryToAddListener_',\n\t\tvalue: function tryToAddListener_(event) {\n\t\t\tif (this.originEmitter_) {\n\t\t\t\tthis.proxiedEvents_ = this.proxiedEvents_ || {};\n\t\t\t\tthis.proxiedEvents_[event] = this.addListener_(event, this.emitOnTarget_.bind(this, event));\n\t\t\t} else {\n\t\t\t\tthis.pendingEvents_ = this.pendingEvents_ || [];\n\t\t\t\tthis.pendingEvents_.push(event);\n\t\t\t}\n\t\t}\n\t}]);\n\n\treturn EventEmitterProxy;\n}(_metal.Disposable);\n\nexports.default = EventEmitterProxy;"
        },
        {
          "id": 40,
          "identifier": "/Users/Liferay/trampo/senna.js/node_modules/metal-events/lib/EventHandler.js",
          "name": "./node_modules/metal-events/lib/EventHandler.js",
          "index": 28,
          "index2": 23,
          "size": 3101,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0
          ],
          "assets": [],
          "issuer": "/Users/Liferay/trampo/senna.js/node_modules/metal-events/lib/events.js",
          "issuerId": 6,
          "issuerName": "./node_modules/metal-events/lib/events.js",
          "profile": {
            "factory": 27,
            "building": 21,
            "dependencies": 12
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "reasons": [
            {
              "moduleId": 6,
              "moduleIdentifier": "/Users/Liferay/trampo/senna.js/node_modules/metal-events/lib/events.js",
              "module": "./node_modules/metal-events/lib/events.js",
              "moduleName": "./node_modules/metal-events/lib/events.js",
              "type": "cjs require",
              "userRequest": "./EventHandler",
              "loc": "20:20-45"
            }
          ],
          "usedExports": true,
          "providedExports": null,
          "optimizationBailout": [
            "ModuleConcatenation bailout: Module is not an ECMAScript module"
          ],
          "depth": 3,
          "source": "'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _metal = require('metal');\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n/**\n * EventHandler utility. It's useful for easily removing a group of\n * listeners from different EventEmitter instances.\n * @constructor\n * @extends {Disposable}\n */\nvar EventHandler = function (_Disposable) {\n\t_inherits(EventHandler, _Disposable);\n\n\tfunction EventHandler() {\n\t\t_classCallCheck(this, EventHandler);\n\n\t\t/**\n   * An array that holds the added event handles, so the listeners can be\n   * removed later.\n   * @type {Array.<EventHandle>}\n   * @protected\n   */\n\t\tvar _this = _possibleConstructorReturn(this, (EventHandler.__proto__ || Object.getPrototypeOf(EventHandler)).call(this));\n\n\t\t_this.eventHandles_ = [];\n\t\treturn _this;\n\t}\n\n\t/**\n  * Adds event handles to be removed later through the `removeAllListeners`\n  * method.\n  * @param {...(!EventHandle)} var_args\n  */\n\n\n\t_createClass(EventHandler, [{\n\t\tkey: 'add',\n\t\tvalue: function add() {\n\t\t\tfor (var i = 0; i < arguments.length; i++) {\n\t\t\t\tthis.eventHandles_.push(arguments[i]);\n\t\t\t}\n\t\t}\n\n\t\t/**\n   * Disposes of this instance's object references.\n   * @override\n   */\n\n\t}, {\n\t\tkey: 'disposeInternal',\n\t\tvalue: function disposeInternal() {\n\t\t\tthis.eventHandles_ = null;\n\t\t}\n\n\t\t/**\n   * Removes all listeners that have been added through the `add` method.\n   */\n\n\t}, {\n\t\tkey: 'removeAllListeners',\n\t\tvalue: function removeAllListeners() {\n\t\t\tfor (var i = 0; i < this.eventHandles_.length; i++) {\n\t\t\t\tthis.eventHandles_[i].removeListener();\n\t\t\t}\n\n\t\t\tthis.eventHandles_ = [];\n\t\t}\n\t}]);\n\n\treturn EventHandler;\n}(_metal.Disposable);\n\nexports.default = EventHandler;"
        },
        {
          "id": 41,
          "identifier": "/Users/Liferay/trampo/senna.js/node_modules/metal-debounce/lib/debounce.js",
          "name": "./node_modules/metal-debounce/lib/debounce.js",
          "index": 30,
          "index2": 26,
          "size": 624,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0
          ],
          "assets": [],
          "issuer": "/Users/Liferay/trampo/senna.js/node_modules/babel-loader/lib/index.js??ref--0!/Users/Liferay/trampo/senna.js/src/app/App.js",
          "issuerId": 13,
          "issuerName": "./src/app/App.js",
          "profile": {
            "factory": 459,
            "building": 11
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "reasons": [
            {
              "moduleId": 13,
              "moduleIdentifier": "/Users/Liferay/trampo/senna.js/node_modules/babel-loader/lib/index.js??ref--0!/Users/Liferay/trampo/senna.js/src/app/App.js",
              "module": "./src/app/App.js",
              "moduleName": "./src/app/App.js",
              "type": "amd require",
              "userRequest": "metal-debounce",
              "loc": "1:0-1185:2"
            }
          ],
          "usedExports": true,
          "providedExports": null,
          "optimizationBailout": [
            "ModuleConcatenation bailout: Module is not an ECMAScript module"
          ],
          "depth": 2,
          "source": "'use strict';\n\n/**\n  * Debounces function execution.\n  * @param {!function()} fn\n  * @param {number} delay\n  * @return {!function()}\n  */\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\nfunction debounce(fn, delay) {\n\treturn function debounced() {\n\t\tvar args = arguments;\n\t\tcancelDebounce(debounced);\n\t\tdebounced.id = setTimeout(function () {\n\t\t\tfn.apply(null, args);\n\t\t}, delay);\n\t};\n}\n\n/**\n * Cancels the scheduled debounced function.\n */\nfunction cancelDebounce(debounced) {\n\tclearTimeout(debounced.id);\n}\n\nexports.default = debounce;\nexports.cancelDebounce = cancelDebounce;\nexports.debounce = debounce;"
        },
        {
          "id": 42,
          "identifier": "/Users/Liferay/trampo/senna.js/node_modules/metal-dom/lib/domNamed.js",
          "name": "./node_modules/metal-dom/lib/domNamed.js",
          "index": 33,
          "index2": 30,
          "size": 26467,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0
          ],
          "assets": [],
          "issuer": "/Users/Liferay/trampo/senna.js/node_modules/metal-dom/lib/dom.js",
          "issuerId": 3,
          "issuerName": "./node_modules/metal-dom/lib/dom.js",
          "profile": {
            "factory": 28,
            "building": 13,
            "dependencies": 1
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "reasons": [
            {
              "moduleId": 3,
              "moduleIdentifier": "/Users/Liferay/trampo/senna.js/node_modules/metal-dom/lib/dom.js",
              "module": "./node_modules/metal-dom/lib/dom.js",
              "moduleName": "./node_modules/metal-dom/lib/dom.js",
              "type": "cjs require",
              "userRequest": "./domNamed",
              "loc": "13:16-37"
            }
          ],
          "usedExports": true,
          "providedExports": null,
          "optimizationBailout": [
            "ModuleConcatenation bailout: Module is not an ECMAScript module"
          ],
          "depth": 4,
          "source": "'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\nexports.customEvents = undefined;\nexports.addClasses = addClasses;\nexports.closest = closest;\nexports.append = append;\nexports.buildFragment = buildFragment;\nexports.contains = contains;\nexports.delegate = delegate;\nexports.enterDocument = enterDocument;\nexports.exitDocument = exitDocument;\nexports.hasClass = hasClass;\nexports.isEmpty = isEmpty;\nexports.match = match;\nexports.next = next;\nexports.on = on;\nexports.once = once;\nexports.parent = parent;\nexports.registerCustomEvent = registerCustomEvent;\nexports.removeChildren = removeChildren;\nexports.removeClasses = removeClasses;\nexports.replace = replace;\nexports.supportsEvent = supportsEvent;\nexports.toElement = toElement;\nexports.toggleClasses = toggleClasses;\nexports.triggerEvent = triggerEvent;\n\nvar _metal = require('metal');\n\nvar _domData = require('./domData');\n\nvar _domData2 = _interopRequireDefault(_domData);\n\nvar _DomDelegatedEventHandle = require('./DomDelegatedEventHandle');\n\nvar _DomDelegatedEventHandle2 = _interopRequireDefault(_DomDelegatedEventHandle);\n\nvar _DomEventHandle = require('./DomEventHandle');\n\nvar _DomEventHandle2 = _interopRequireDefault(_DomEventHandle);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar elementsByTag_ = {};\nvar supportCache_ = {};\nvar customEvents = exports.customEvents = {};\n\nvar LAST_CONTAINER = '__metal_last_container__';\nvar USE_CAPTURE = {\n\tblur: true,\n\terror: true,\n\tfocus: true,\n\tinvalid: true,\n\tload: true,\n\tscroll: true\n};\n\n/**\n * Adds the requested CSS classes to an element.\n * @param {!Element|!Nodelist} elements The element or elements to add CSS classes to.\n * @param {string} classes CSS classes to add.\n */\nfunction addClasses(elements, classes) {\n\tif (!(0, _metal.isObject)(elements) || !(0, _metal.isString)(classes)) {\n\t\treturn;\n\t}\n\n\tif (!elements.length) {\n\t\telements = [elements];\n\t}\n\n\tfor (var i = 0; i < elements.length; i++) {\n\t\tif ('classList' in elements[i]) {\n\t\t\taddClassesWithNative_(elements[i], classes);\n\t\t} else {\n\t\t\taddClassesWithoutNative_(elements[i], classes);\n\t\t}\n\t}\n}\n\n/**\n * Adds the requested CSS classes to an element using classList.\n * @param {!Element} element The element to add CSS classes to.\n * @param {string} classes CSS classes to add.\n * @private\n */\nfunction addClassesWithNative_(element, classes) {\n\tclasses.split(' ').forEach(function (className) {\n\t\tif (className) {\n\t\t\telement.classList.add(className);\n\t\t}\n\t});\n}\n\n/**\n * Adds the requested CSS classes to an element without using classList.\n * @param {!Element} element The element to add CSS classes to.\n * @param {string} classes CSS classes to add.\n * @private\n */\nfunction addClassesWithoutNative_(element, classes) {\n\tvar elementClassName = ' ' + element.className + ' ';\n\tvar classesToAppend = '';\n\n\tclasses = classes.split(' ');\n\n\tfor (var i = 0; i < classes.length; i++) {\n\t\tvar className = classes[i];\n\n\t\tif (elementClassName.indexOf(' ' + className + ' ') === -1) {\n\t\t\tclassesToAppend += ' ' + className;\n\t\t}\n\t}\n\n\tif (classesToAppend) {\n\t\telement.className = element.className + classesToAppend;\n\t}\n}\n\n/**\n * Adds an event listener to the given element, to be triggered via delegate.\n * @param {!Element} element\n * @param {string} eventName\n * @param {!function()} listener\n * @private\n */\nfunction addElementListener_(element, eventName, listener) {\n\taddToArr_(_domData2.default.get(element, 'listeners', {}), eventName, listener);\n}\n\n/**\n * Adds an event listener to the given element, to be triggered via delegate\n * selectors.\n * @param {!Element} element\n * @param {string} eventName\n * @param {string} selector\n * @param {!function()} listener\n * @private\n */\nfunction addSelectorListener_(element, eventName, selector, listener) {\n\tvar delegatingData = _domData2.default.get(element, 'delegating', {});\n\taddToArr_(delegatingData[eventName].selectors, selector, listener);\n}\n\n/**\n * Adds a value to an array inside an object, creating it first if it doesn't\n * yet exist.\n * @param {!Array} arr\n * @param {string} key\n * @param {*} value\n * @private\n */\nfunction addToArr_(arr, key, value) {\n\tif (!arr[key]) {\n\t\tarr[key] = [];\n\t}\n\tarr[key].push(value);\n}\n\n/**\n * Attaches a delegate listener, unless there's already one attached.\n * @param {!Element} element\n * @param {string} eventName\n * @private\n */\nfunction attachDelegateEvent_(element, eventName) {\n\tvar delegatingData = _domData2.default.get(element, 'delegating', {});\n\tif (!delegatingData[eventName]) {\n\t\tdelegatingData[eventName] = {\n\t\t\thandle: on(element, eventName, handleDelegateEvent_, !!USE_CAPTURE[eventName]),\n\t\t\tselectors: {}\n\t\t};\n\t}\n}\n\n/**\n * Gets the closest element up the tree from the given element (including\n * itself) that matches the specified selector, or null if none match.\n * @param {Element} element\n * @param {string} selector\n * @return {Element}\n */\nfunction closest(element, selector) {\n\twhile (element && !match(element, selector)) {\n\t\telement = element.parentNode;\n\t}\n\treturn element;\n}\n\n/**\n * Appends a child node with text or other nodes to a parent node. If\n * child is a HTML string it will be automatically converted to a document\n * fragment before appending it to the parent.\n * @param {!Element} parent The node to append nodes to.\n * @param {!(Element|NodeList|string)} child The thing to append to the parent.\n * @return {!Element} The appended child.\n */\nfunction append(parent, child) {\n\tif ((0, _metal.isString)(child)) {\n\t\tchild = buildFragment(child);\n\t}\n\tif (child instanceof NodeList) {\n\t\tvar childArr = Array.prototype.slice.call(child);\n\t\tfor (var i = 0; i < childArr.length; i++) {\n\t\t\tparent.appendChild(childArr[i]);\n\t\t}\n\t} else {\n\t\tparent.appendChild(child);\n\t}\n\treturn child;\n}\n\n/**\n * Helper for converting a HTML string into a document fragment.\n * @param {string} htmlString The HTML string to convert.\n * @return {!Element} The resulting document fragment.\n */\nfunction buildFragment(htmlString) {\n\tvar tempDiv = document.createElement('div');\n\ttempDiv.innerHTML = '<br>' + htmlString;\n\ttempDiv.removeChild(tempDiv.firstChild);\n\n\tvar fragment = document.createDocumentFragment();\n\twhile (tempDiv.firstChild) {\n\t\tfragment.appendChild(tempDiv.firstChild);\n\t}\n\treturn fragment;\n}\n\n/**\n * Checks if the first element contains the second one.\n * @param {!Element} element1\n * @param {!Element} element2\n * @return {boolean}\n */\nfunction contains(element1, element2) {\n\tif ((0, _metal.isDocument)(element1)) {\n\t\t// document.contains is not defined on IE9, so call it on documentElement instead.\n\t\treturn element1.documentElement.contains(element2);\n\t} else {\n\t\treturn element1.contains(element2);\n\t}\n}\n\n/**\n * Listens to the specified event on the given DOM element, but only calls the\n * given callback listener when it's triggered by elements that match the\n * given selector or target element.\n * @param {!Element} element The DOM element the event should be listened on.\n * @param {string} eventName The name of the event to listen to.\n * @param {!Element|string} selectorOrTarget Either an element or css selector\n *     that should match the event for the listener to be triggered.\n * @param {!function(!Object)} callback Function to be called when the event\n *     is triggered. It will receive the normalized event object.\n * @param {boolean=} opt_default Optional flag indicating if this is a default\n *     listener. That means that it would only be executed after all non\n *     default listeners, and only if the event isn't prevented via\n *     `preventDefault`.\n * @return {!EventHandle} Can be used to remove the listener.\n */\nfunction delegate(element, eventName, selectorOrTarget, callback, opt_default) {\n\tvar customConfig = customEvents[eventName];\n\tif (customConfig && customConfig.delegate) {\n\t\teventName = customConfig.originalEvent;\n\t\tcallback = customConfig.handler.bind(customConfig, callback);\n\t}\n\n\tif (opt_default) {\n\t\t// Wrap callback so we don't set property directly on it.\n\t\tcallback = callback.bind();\n\t\tcallback.defaultListener_ = true;\n\t}\n\n\tattachDelegateEvent_(element, eventName);\n\tif ((0, _metal.isString)(selectorOrTarget)) {\n\t\taddSelectorListener_(element, eventName, selectorOrTarget, callback);\n\t} else {\n\t\taddElementListener_(selectorOrTarget, eventName, callback);\n\t}\n\n\treturn new _DomDelegatedEventHandle2.default((0, _metal.isString)(selectorOrTarget) ? element : selectorOrTarget, eventName, callback, (0, _metal.isString)(selectorOrTarget) ? selectorOrTarget : null);\n}\n\n/**\n * Verifies if the element is able to trigger the Click event,\n * simulating browsers behaviour, avoiding event listeners to be called by triggerEvent method.\n * @param {Element} node Element to be checked.\n * @param {string} eventName The event name.\n * @private\n */\nfunction isAbleToInteractWith_(node, eventName, opt_eventObj) {\n\tif (opt_eventObj && eventName === 'click' && opt_eventObj.button === 2) {\n\t\t// Firefox triggers \"click\" events on the document for right clicks. This\n\t\t// causes our delegate logic to trigger it for regular elements too, which\n\t\t// shouldn't happen. Ignoring them here.\n\t\treturn false;\n\t}\n\n\tvar matchesSelector = ['BUTTON', 'INPUT', 'SELECT', 'TEXTAREA', 'FIELDSET'];\n\tif (eventName === 'click' && matchesSelector.indexOf(node.tagName) > -1) {\n\t\treturn !(node.disabled || parent(node, 'fieldset[disabled]'));\n\t}\n\treturn true;\n}\n\n/**\n * Inserts node in document as last element.\n * @param {Element} node Element to remove children from.\n */\nfunction enterDocument(node) {\n\tnode && append(document.body, node);\n}\n\n/**\n * Removes node from document.\n * @param {Element} node Element to remove children from.\n */\nfunction exitDocument(node) {\n\tif (node && node.parentNode) {\n\t\tnode.parentNode.removeChild(node);\n\t}\n}\n\n/**\n * This is called when an event is triggered by a delegate listener. All\n * matching listeners of this event type from `target` to `currentTarget` will\n * be triggered.\n * @param {!Event} event The event payload.\n * @return {boolean} False if at least one of the triggered callbacks returns\n *     false, or true otherwise.\n * @private\n */\nfunction handleDelegateEvent_(event) {\n\tnormalizeDelegateEvent_(event);\n\tvar ret = true;\n\tvar container = event.currentTarget;\n\tvar defFns = [];\n\n\tret &= triggerDelegatedListeners_(container, event, defFns);\n\tret &= triggerDefaultDelegatedListeners_(defFns, event);\n\n\tevent.delegateTarget = null;\n\tevent[LAST_CONTAINER] = container;\n\treturn ret;\n}\n\n/**\n * Checks if the given element has the requested css class.\n * @param {!Element} element\n * @param {string} className\n * @return {boolean}\n */\nfunction hasClass(element, className) {\n\tif ('classList' in element) {\n\t\treturn hasClassWithNative_(element, className);\n\t} else {\n\t\treturn hasClassWithoutNative_(element, className);\n\t}\n}\n\n/**\n * Checks if the given element has the requested css class using classList.\n * @param {!Element} element\n * @param {string} className\n * @return {boolean}\n * @private\n */\nfunction hasClassWithNative_(element, className) {\n\treturn element.classList.contains(className);\n}\n\n/**\n * Checks if the given element has the requested css class without using classList.\n * @param {!Element} element\n * @param {string} className\n * @return {boolean}\n * @private\n */\nfunction hasClassWithoutNative_(element, className) {\n\treturn (' ' + element.className + ' ').indexOf(' ' + className + ' ') >= 0;\n}\n\n/**\n * Checks if the given element is empty or not.\n * @param {!Element} element\n * @return {boolean}\n */\nfunction isEmpty(element) {\n\treturn element.childNodes.length === 0;\n}\n\n/**\n * Check if an element matches a given selector.\n * @param {Element} element\n * @param {string} selector\n * @return {boolean}\n */\nfunction match(element, selector) {\n\tif (!element || element.nodeType !== 1) {\n\t\treturn false;\n\t}\n\n\tvar p = Element.prototype;\n\tvar m = p.matches || p.webkitMatchesSelector || p.mozMatchesSelector || p.msMatchesSelector || p.oMatchesSelector;\n\tif (m) {\n\t\treturn m.call(element, selector);\n\t}\n\n\treturn matchFallback_(element, selector);\n}\n\n/**\n * Check if an element matches a given selector, using an internal implementation\n * instead of calling existing javascript functions.\n * @param {Element} element\n * @param {string} selector\n * @return {boolean}\n * @private\n */\nfunction matchFallback_(element, selector) {\n\tvar nodes = document.querySelectorAll(selector, element.parentNode);\n\tfor (var i = 0; i < nodes.length; ++i) {\n\t\tif (nodes[i] === element) {\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n}\n\n/**\n * Returns the next sibling of the given element that matches the specified\n * selector, or null if there is none.\n * @param {!Element} element\n * @param {?string} selector\n */\nfunction next(element, selector) {\n\tdo {\n\t\telement = element.nextSibling;\n\t\tif (element && match(element, selector)) {\n\t\t\treturn element;\n\t\t}\n\t} while (element);\n\treturn null;\n}\n\n/**\n * Normalizes the event payload for delegate listeners.\n * @param {!Event} event\n * @private\n */\nfunction normalizeDelegateEvent_(event) {\n\tevent.stopPropagation = stopPropagation_;\n\tevent.stopImmediatePropagation = stopImmediatePropagation_;\n}\n\n/**\n * Listens to the specified event on the given DOM element. This function normalizes\n * DOM event payloads and functions so they'll work the same way on all supported\n * browsers.\n * @param {!Element|string} element The DOM element to listen to the event on, or\n *   a selector that should be delegated on the entire document.\n * @param {string} eventName The name of the event to listen to.\n * @param {!function(!Object)} callback Function to be called when the event is\n *   triggered. It will receive the normalized event object.\n * @param {boolean} opt_capture Flag indicating if listener should be triggered\n *   during capture phase, instead of during the bubbling phase. Defaults to false.\n * @return {!DomEventHandle} Can be used to remove the listener.\n */\nfunction on(element, eventName, callback, opt_capture) {\n\tif ((0, _metal.isString)(element)) {\n\t\treturn delegate(document, eventName, element, callback);\n\t}\n\tvar customConfig = customEvents[eventName];\n\tif (customConfig && customConfig.event) {\n\t\teventName = customConfig.originalEvent;\n\t\tcallback = customConfig.handler.bind(customConfig, callback);\n\t}\n\telement.addEventListener(eventName, callback, opt_capture);\n\treturn new _DomEventHandle2.default(element, eventName, callback, opt_capture);\n}\n\n/**\n * Listens to the specified event on the given DOM element once. This\n * function normalizes DOM event payloads and functions so they'll work the\n * same way on all supported browsers.\n * @param {!Element} element The DOM element to listen to the event on.\n * @param {string} eventName The name of the event to listen to.\n * @param {!function(!Object)} callback Function to be called when the event\n *   is triggered. It will receive the normalized event object.\n * @return {!DomEventHandle} Can be used to remove the listener.\n */\nfunction once(element, eventName, callback) {\n\tvar domEventHandle = on(element, eventName, function () {\n\t\tdomEventHandle.removeListener();\n\t\treturn callback.apply(this, arguments);\n\t});\n\treturn domEventHandle;\n}\n\n/**\n * Gets the first parent from the given element that matches the specified\n * selector, or null if none match.\n * @param {!Element} element\n * @param {string} selector\n * @return {Element}\n */\nfunction parent(element, selector) {\n\treturn closest(element.parentNode, selector);\n}\n\n/**\n * Registers a custom event.\n * @param {string} eventName The name of the custom event.\n * @param {!Object} customConfig An object with information about how the event\n *   should be handled.\n */\nfunction registerCustomEvent(eventName, customConfig) {\n\tcustomEvents[eventName] = customConfig;\n}\n\n/**\n * Removes all the child nodes on a DOM node.\n * @param {Element} node Element to remove children from.\n */\nfunction removeChildren(node) {\n\tvar child = void 0;\n\twhile (child = node.firstChild) {\n\t\tnode.removeChild(child);\n\t}\n}\n\n/**\n * Removes the requested CSS classes from an element.\n * @param {!Element|!NodeList} elements The element or elements to remove CSS classes from.\n * @param {string} classes CSS classes to remove.\n */\nfunction removeClasses(elements, classes) {\n\tif (!(0, _metal.isObject)(elements) || !(0, _metal.isString)(classes)) {\n\t\treturn;\n\t}\n\n\tif (!elements.length) {\n\t\telements = [elements];\n\t}\n\n\tfor (var i = 0; i < elements.length; i++) {\n\t\tif ('classList' in elements[i]) {\n\t\t\tremoveClassesWithNative_(elements[i], classes);\n\t\t} else {\n\t\t\tremoveClassesWithoutNative_(elements[i], classes);\n\t\t}\n\t}\n}\n\n/**\n * Removes the requested CSS classes from an element using classList.\n * @param {!Element} element The element to remove CSS classes from.\n * @param {string} classes CSS classes to remove.\n * @private\n */\nfunction removeClassesWithNative_(element, classes) {\n\tclasses.split(' ').forEach(function (className) {\n\t\tif (className) {\n\t\t\telement.classList.remove(className);\n\t\t}\n\t});\n}\n\n/**\n * Removes the requested CSS classes from an element without using classList.\n * @param {!Element} element The element to remove CSS classes from.\n * @param {string} classes CSS classes to remove.\n * @private\n */\nfunction removeClassesWithoutNative_(element, classes) {\n\tvar elementClassName = ' ' + element.className + ' ';\n\n\tclasses = classes.split(' ');\n\n\tfor (var i = 0; i < classes.length; i++) {\n\t\telementClassName = elementClassName.replace(' ' + classes[i] + ' ', ' ');\n\t}\n\n\telement.className = elementClassName.trim();\n}\n\n/**\n * Replaces the first element with the second.\n * @param {Element} element1\n * @param {Element} element2\n */\nfunction replace(element1, element2) {\n\tif (element1 && element2 && element1 !== element2 && element1.parentNode) {\n\t\telement1.parentNode.insertBefore(element2, element1);\n\t\telement1.parentNode.removeChild(element1);\n\t}\n}\n\n/**\n * The function that replaces `stopImmediatePropagation_` for events.\n * @private\n */\nfunction stopImmediatePropagation_() {\n\tvar event = this; // eslint-disable-line\n\tevent.stopped = true;\n\tevent.stoppedImmediate = true;\n\tEvent.prototype.stopImmediatePropagation.call(event);\n}\n\n/**\n * The function that replaces `stopPropagation` for events.\n * @private\n */\nfunction stopPropagation_() {\n\tvar event = this; // eslint-disable-line\n\tevent.stopped = true;\n\tEvent.prototype.stopPropagation.call(event);\n}\n\n/**\n * Checks if the given element supports the given event type.\n * @param {!Element|string} element The DOM element or element tag name to check.\n * @param {string} eventName The name of the event to check.\n * @return {boolean}\n */\nfunction supportsEvent(element, eventName) {\n\tif (customEvents[eventName]) {\n\t\treturn true;\n\t}\n\n\tif ((0, _metal.isString)(element)) {\n\t\tif (!elementsByTag_[element]) {\n\t\t\telementsByTag_[element] = document.createElement(element);\n\t\t}\n\t\telement = elementsByTag_[element];\n\t}\n\n\tvar tag = element.tagName;\n\tif (!supportCache_[tag] || !supportCache_[tag].hasOwnProperty(eventName)) {\n\t\tsupportCache_[tag] = supportCache_[tag] || {};\n\t\tsupportCache_[tag][eventName] = 'on' + eventName in element;\n\t}\n\treturn supportCache_[tag][eventName];\n}\n\n/**\n * This triggers all default matched delegated listeners of a given event type.\n * @param {!Array} defaultFns Array to collect default listeners in, instead\n * @param {!Event} event\n * @return {boolean} False if at least one of the triggered callbacks returns\n *     false, or true otherwise.\n * @private\n */\nfunction triggerDefaultDelegatedListeners_(defFns, event) {\n\tvar ret = true;\n\n\tfor (var i = 0; i < defFns.length && !event.defaultPrevented; i++) {\n\t\tevent.delegateTarget = defFns[i].element;\n\t\tret &= defFns[i].fn(event);\n\t}\n\n\treturn ret;\n}\n\n/**\n * This triggers all matched delegated listeners of a given event type when its\n * delegated target is able to interact.\n * @param {!Element} container\n * @param {!Event} event\n * @param {!Array} defaultFns Array to collect default listeners in, instead\n *     of running them.\n * @return {boolean} False if at least one of the triggered callbacks returns\n *     false, or true otherwise.\n * @private\n */\nfunction triggerDelegatedListeners_(container, event, defaultFns) {\n\tvar ret = true;\n\tvar currElement = event.target;\n\tvar limit = container.parentNode;\n\n\twhile (currElement && currElement !== limit && !event.stopped) {\n\t\tif (isAbleToInteractWith_(currElement, event.type, event)) {\n\t\t\tevent.delegateTarget = currElement;\n\t\t\tret &= triggerElementListeners_(currElement, event, defaultFns);\n\t\t\tret &= triggerSelectorListeners_(container, currElement, event, defaultFns);\n\t\t}\n\t\tcurrElement = currElement.parentNode;\n\t}\n\n\treturn ret;\n}\n\n/**\n * Converts the given argument to a DOM element. Strings are assumed to\n * be selectors, and so a matched element will be returned. If the arg\n * is already a DOM element it will be the return value.\n * @param {string|Element|Document} selectorOrElement\n * @return {Element} The converted element, or null if none was found.\n */\nfunction toElement(selectorOrElement) {\n\tif ((0, _metal.isElement)(selectorOrElement) || (0, _metal.isDocument)(selectorOrElement) || (0, _metal.isDocumentFragment)(selectorOrElement)) {\n\t\treturn selectorOrElement;\n\t} else if ((0, _metal.isString)(selectorOrElement)) {\n\t\tif (selectorOrElement[0] === '#' && selectorOrElement.indexOf(' ') === -1) {\n\t\t\treturn document.getElementById(selectorOrElement.substr(1));\n\t\t} else {\n\t\t\treturn document.querySelector(selectorOrElement);\n\t\t}\n\t} else {\n\t\treturn null;\n\t}\n}\n\n/**\n * Adds or removes one or more classes from an element. If any of the classes\n * is present, it will be removed from the element, or added otherwise.\n * @param {!Element} element The element which classes will be toggled.\n * @param {string} classes The classes which have to added or removed from the element.\n */\nfunction toggleClasses(element, classes) {\n\tif (!(0, _metal.isObject)(element) || !(0, _metal.isString)(classes)) {\n\t\treturn;\n\t}\n\n\tif ('classList' in element) {\n\t\ttoggleClassesWithNative_(element, classes);\n\t} else {\n\t\ttoggleClassesWithoutNative_(element, classes);\n\t}\n}\n\n/**\n * Adds or removes one or more classes from an element using classList.\n * If any of the classes is present, it will be removed from the element,\n * or added otherwise.\n * @param {!Element} element The element which classes will be toggled.\n * @param {string} classes The classes which have to added or removed from the element.\n * @private\n */\nfunction toggleClassesWithNative_(element, classes) {\n\tclasses.split(' ').forEach(function (className) {\n\t\telement.classList.toggle(className);\n\t});\n}\n\n/**\n * Adds or removes one or more classes from an element without using classList.\n * If any of the classes is present, it will be removed from the element,\n * or added otherwise.\n * @param {!Element} element The element which classes will be toggled.\n * @param {string} classes The classes which have to added or removed from the element.\n * @private\n */\nfunction toggleClassesWithoutNative_(element, classes) {\n\tvar elementClassName = ' ' + element.className + ' ';\n\n\tclasses = classes.split(' ');\n\n\tfor (var i = 0; i < classes.length; i++) {\n\t\tvar className = ' ' + classes[i] + ' ';\n\t\tvar classIndex = elementClassName.indexOf(className);\n\n\t\tif (classIndex === -1) {\n\t\t\telementClassName = '' + elementClassName + classes[i] + ' ';\n\t\t} else {\n\t\t\tvar before = elementClassName.substring(0, classIndex);\n\t\t\tvar after = elementClassName.substring(classIndex + className.length);\n\t\t\telementClassName = before + ' ' + after;\n\t\t}\n\t}\n\n\telement.className = elementClassName.trim();\n}\n\n/**\n * Triggers all listeners for the given event type that are stored in the\n * specified element.\n * @param {!Element} element\n * @param {!Event} event\n * @param {!Array} defaultFns Array to collect default listeners in, instead\n *     of running them.\n * @return {boolean} False if at least one of the triggered callbacks returns\n *     false, or true otherwise.\n * @private\n */\nfunction triggerElementListeners_(element, event, defaultFns) {\n\tvar lastContainer = event[LAST_CONTAINER];\n\tif (!(0, _metal.isDef)(lastContainer) || !contains(lastContainer, element)) {\n\t\tvar listeners = _domData2.default.get(element, 'listeners', {})[event.type];\n\t\treturn triggerListeners_(listeners, event, element, defaultFns);\n\t}\n\treturn true;\n}\n\n/**\n * Triggers the specified event on the given element.\n * NOTE: This should mostly be used for testing, not on real code.\n * @param {!Element} element The node that should trigger the event.\n * @param {string} eventName The name of the event to be triggred.\n * @param {Object=} opt_eventObj An object with data that should be on the\n *   triggered event's payload.\n */\nfunction triggerEvent(element, eventName, opt_eventObj) {\n\tif (isAbleToInteractWith_(element, eventName, opt_eventObj)) {\n\t\tvar eventObj = document.createEvent('HTMLEvents');\n\t\teventObj.initEvent(eventName, true, true);\n\t\t_metal.object.mixin(eventObj, opt_eventObj);\n\t\telement.dispatchEvent(eventObj);\n\t}\n}\n\n/**\n * Triggers the given listeners array.\n * @param {Array<!function()>} listeners\n * @param {!Event} event\n * @param {!Element} element\n * @param {!Array} defaultFns Array to collect default listeners in, instead\n *     of running them.\n * @return {boolean} False if at least one of the triggered callbacks returns\n *     false, or true otherwise.\n * @private\n */\nfunction triggerListeners_(listeners, event, element, defaultFns) {\n\tvar ret = true;\n\tlisteners = listeners || [];\n\tfor (var i = 0; i < listeners.length && !event.stoppedImmediate; i++) {\n\t\tif (listeners[i].defaultListener_) {\n\t\t\tdefaultFns.push({\n\t\t\t\telement: element,\n\t\t\t\tfn: listeners[i]\n\t\t\t});\n\t\t} else {\n\t\t\tret &= listeners[i](event);\n\t\t}\n\t}\n\treturn ret;\n}\n\n/**\n * Triggers all selector listeners for the given event.\n * @param {!Element} container\n * @param {!Element} element\n * @param {!Event} event\n * @param {!Array} defaultFns Array to collect default listeners in, instead\n *     of running them.\n * @return {boolean} False if at least one of the triggered callbacks returns\n *     false, or true otherwise.\n * @private\n */\nfunction triggerSelectorListeners_(container, element, event, defaultFns) {\n\tvar ret = true;\n\tvar data = _domData2.default.get(container, 'delegating', {});\n\tvar map = data[event.type].selectors;\n\tvar selectors = Object.keys(map);\n\tfor (var i = 0; i < selectors.length && !event.stoppedImmediate; i++) {\n\t\tif (match(element, selectors[i])) {\n\t\t\tvar listeners = map[selectors[i]];\n\t\t\tret &= triggerListeners_(listeners, event, element, defaultFns);\n\t\t}\n\t}\n\treturn ret;\n}"
        },
        {
          "id": 43,
          "identifier": "/Users/Liferay/trampo/senna.js/node_modules/metal-dom/lib/DomDelegatedEventHandle.js",
          "name": "./node_modules/metal-dom/lib/DomDelegatedEventHandle.js",
          "index": 35,
          "index2": 28,
          "size": 3552,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0
          ],
          "assets": [],
          "issuer": "/Users/Liferay/trampo/senna.js/node_modules/metal-dom/lib/domNamed.js",
          "issuerId": 42,
          "issuerName": "./node_modules/metal-dom/lib/domNamed.js",
          "profile": {
            "factory": 1,
            "building": 3,
            "dependencies": 0
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "reasons": [
            {
              "moduleId": 42,
              "moduleIdentifier": "/Users/Liferay/trampo/senna.js/node_modules/metal-dom/lib/domNamed.js",
              "module": "./node_modules/metal-dom/lib/domNamed.js",
              "moduleName": "./node_modules/metal-dom/lib/domNamed.js",
              "type": "cjs require",
              "userRequest": "./DomDelegatedEventHandle",
              "loc": "37:31-67"
            }
          ],
          "usedExports": true,
          "providedExports": null,
          "optimizationBailout": [
            "ModuleConcatenation bailout: Module is not an ECMAScript module"
          ],
          "depth": 5,
          "source": "'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _metal = require('metal');\n\nvar _domData = require('./domData');\n\nvar _domData2 = _interopRequireDefault(_domData);\n\nvar _metalEvents = require('metal-events');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n/**\n * This is a special EventHandle, that is responsible for dom delegated events\n * (only the ones that receive a target element, not a selector string).\n * @extends {EventHandle}\n */\nvar DomDelegatedEventHandle = function (_EventHandle) {\n\t_inherits(DomDelegatedEventHandle, _EventHandle);\n\n\t/**\n  * The constructor for `DomDelegatedEventHandle`.\n  * @param {!Event} emitter Element the event was subscribed to.\n  * @param {string} event The name of the event that was subscribed to.\n  * @param {!Function} listener The listener subscribed to the event.\n  * @param {string=} opt_selector An optional selector used when delegating\n  *     the event.\n  * @constructor\n  */\n\tfunction DomDelegatedEventHandle(emitter, event, listener, opt_selector) {\n\t\t_classCallCheck(this, DomDelegatedEventHandle);\n\n\t\tvar _this = _possibleConstructorReturn(this, (DomDelegatedEventHandle.__proto__ || Object.getPrototypeOf(DomDelegatedEventHandle)).call(this, emitter, event, listener));\n\n\t\t_this.selector_ = opt_selector;\n\t\treturn _this;\n\t}\n\n\t/**\n  * @inheritDoc\n  */\n\n\n\t_createClass(DomDelegatedEventHandle, [{\n\t\tkey: 'removeListener',\n\t\tvalue: function removeListener() {\n\t\t\tvar delegating = _domData2.default.get(this.emitter_, 'delegating', {});\n\t\t\tvar listeners = _domData2.default.get(this.emitter_, 'listeners', {});\n\t\t\tvar selector = this.selector_;\n\t\t\tvar arr = (0, _metal.isString)(selector) ? delegating[this.event_].selectors : listeners;\n\t\t\tvar key = (0, _metal.isString)(selector) ? selector : this.event_;\n\n\t\t\t_metal.array.remove(arr[key] || [], this.listener_);\n\t\t\tif (arr[key] && arr[key].length === 0) {\n\t\t\t\tdelete arr[key];\n\t\t\t}\n\t\t}\n\t}]);\n\n\treturn DomDelegatedEventHandle;\n}(_metalEvents.EventHandle);\n\nexports.default = DomDelegatedEventHandle;"
        },
        {
          "id": 44,
          "identifier": "/Users/Liferay/trampo/senna.js/node_modules/metal-dom/lib/DomEventEmitterProxy.js",
          "name": "./node_modules/metal-dom/lib/DomEventEmitterProxy.js",
          "index": 37,
          "index2": 32,
          "size": 4745,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0
          ],
          "assets": [],
          "issuer": "/Users/Liferay/trampo/senna.js/node_modules/metal-dom/lib/all/dom.js",
          "issuerId": 7,
          "issuerName": "./node_modules/metal-dom/lib/all/dom.js",
          "profile": {
            "factory": 8,
            "building": 35,
            "dependencies": 25
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "reasons": [
            {
              "moduleId": 7,
              "moduleIdentifier": "/Users/Liferay/trampo/senna.js/node_modules/metal-dom/lib/all/dom.js",
              "module": "./node_modules/metal-dom/lib/all/dom.js",
              "moduleName": "./node_modules/metal-dom/lib/all/dom.js",
              "type": "cjs require",
              "userRequest": "../DomEventEmitterProxy",
              "loc": "26:28-62"
            }
          ],
          "usedExports": true,
          "providedExports": null,
          "optimizationBailout": [
            "ModuleConcatenation bailout: Module is not an ECMAScript module"
          ],
          "depth": 3,
          "source": "'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\nvar _dom = require('./dom');\n\nvar _metalEvents = require('metal-events');\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n/**\n * DomEventEmitterProxy utility. It extends `EventEmitterProxy` to also accept\n * dom elements as origin emitters.\n * @extends {EventEmitterProxy}\n */\nvar DomEventEmitterProxy = function (_EventEmitterProxy) {\n\t_inherits(DomEventEmitterProxy, _EventEmitterProxy);\n\n\tfunction DomEventEmitterProxy() {\n\t\t_classCallCheck(this, DomEventEmitterProxy);\n\n\t\treturn _possibleConstructorReturn(this, (DomEventEmitterProxy.__proto__ || Object.getPrototypeOf(DomEventEmitterProxy)).apply(this, arguments));\n\t}\n\n\t_createClass(DomEventEmitterProxy, [{\n\t\tkey: 'addListener_',\n\n\t\t/**\n   * Adds the given listener for the given event.\n   * @param {string} event\n   * @param {!function()} listener\n   * @return {!EventHandle} The listened event's handle.\n   * @protected\n   * @override\n   */\n\t\tvalue: function addListener_(event, listener) {\n\t\t\tif (this.originEmitter_.addEventListener) {\n\t\t\t\tif (this.isDelegateEvent_(event)) {\n\t\t\t\t\tvar index = event.indexOf(':', 9);\n\t\t\t\t\tvar eventName = event.substring(9, index);\n\t\t\t\t\tvar selector = event.substring(index + 1);\n\t\t\t\t\treturn (0, _dom.delegate)(this.originEmitter_, eventName, selector, listener);\n\t\t\t\t} else {\n\t\t\t\t\treturn (0, _dom.on)(this.originEmitter_, event, listener);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\treturn _get(DomEventEmitterProxy.prototype.__proto__ || Object.getPrototypeOf(DomEventEmitterProxy.prototype), 'addListener_', this).call(this, event, listener);\n\t\t\t}\n\t\t}\n\n\t\t/**\n   * Checks if the given event is of the delegate type.\n   * @param {string} event\n   * @return {boolean}\n   * @protected\n   */\n\n\t}, {\n\t\tkey: 'isDelegateEvent_',\n\t\tvalue: function isDelegateEvent_(event) {\n\t\t\treturn event.substr(0, 9) === 'delegate:';\n\t\t}\n\n\t\t/**\n   * Checks if the given event is supported by the origin element.\n   * @param {string} event\n   * @protected\n   */\n\n\t}, {\n\t\tkey: 'isSupportedDomEvent_',\n\t\tvalue: function isSupportedDomEvent_(event) {\n\t\t\tif (!this.originEmitter_ || !this.originEmitter_.addEventListener) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\treturn this.isDelegateEvent_(event) && event.indexOf(':', 9) !== -1 || (0, _dom.supportsEvent)(this.originEmitter_, event);\n\t\t}\n\n\t\t/**\n   * Checks if the given event should be proxied.\n   * @param {string} event\n   * @return {boolean}\n   * @protected\n   * @override\n   */\n\n\t}, {\n\t\tkey: 'shouldProxyEvent_',\n\t\tvalue: function shouldProxyEvent_(event) {\n\t\t\treturn _get(DomEventEmitterProxy.prototype.__proto__ || Object.getPrototypeOf(DomEventEmitterProxy.prototype), 'shouldProxyEvent_', this).call(this, event) && this.isSupportedDomEvent_(event);\n\t\t}\n\t}]);\n\n\treturn DomEventEmitterProxy;\n}(_metalEvents.EventEmitterProxy);\n\nexports.default = DomEventEmitterProxy;"
        },
        {
          "id": 45,
          "identifier": "/Users/Liferay/trampo/senna.js/node_modules/metal-dom/lib/globalEval.js",
          "name": "./node_modules/metal-dom/lib/globalEval.js",
          "index": 39,
          "index2": 34,
          "size": 4767,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0
          ],
          "assets": [],
          "issuer": "/Users/Liferay/trampo/senna.js/node_modules/metal-dom/lib/all/dom.js",
          "issuerId": 7,
          "issuerName": "./node_modules/metal-dom/lib/all/dom.js",
          "profile": {
            "factory": 8,
            "building": 48,
            "dependencies": 12
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "reasons": [
            {
              "moduleId": 7,
              "moduleIdentifier": "/Users/Liferay/trampo/senna.js/node_modules/metal-dom/lib/all/dom.js",
              "module": "./node_modules/metal-dom/lib/all/dom.js",
              "moduleName": "./node_modules/metal-dom/lib/all/dom.js",
              "type": "cjs require",
              "userRequest": "../globalEval",
              "loc": "38:18-42"
            }
          ],
          "usedExports": true,
          "providedExports": null,
          "optimizationBailout": [
            "ModuleConcatenation bailout: Module is not an ECMAScript module"
          ],
          "depth": 3,
          "source": "'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _metal = require('metal');\n\nvar _dom = require('./dom');\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\n * Utility functions for running javascript code in the global scope.\n */\nvar globalEval = function () {\n\tfunction globalEval() {\n\t\t_classCallCheck(this, globalEval);\n\t}\n\n\t_createClass(globalEval, null, [{\n\t\tkey: 'run',\n\n\t\t/**\n   * Evaluates the given string in the global scope.\n   * @param {string} text\n   * @param {function()=} opt_appendFn Optional function to append the node\n   *   into document.\n   * @return {Element} script\n   */\n\t\tvalue: function run(text, opt_appendFn) {\n\t\t\tvar script = document.createElement('script');\n\t\t\tscript.text = text;\n\t\t\tif (opt_appendFn) {\n\t\t\t\topt_appendFn(script);\n\t\t\t} else {\n\t\t\t\tdocument.head.appendChild(script);\n\t\t\t}\n\t\t\t(0, _dom.exitDocument)(script);\n\t\t\treturn script;\n\t\t}\n\n\t\t/**\n   * Evaluates the given javascript file in the global scope.\n   * @param {string} src The file's path.\n   * @param {function()=} opt_callback Optional function to be called\n   *   when the script has been run.\n   * @param {function()=} opt_appendFn Optional function to append the node\n   *   into document.\n   * @return {Element} script\n   */\n\n\t}, {\n\t\tkey: 'runFile',\n\t\tvalue: function runFile(src, opt_callback, opt_appendFn) {\n\t\t\tvar script = document.createElement('script');\n\t\t\tscript.src = src;\n\n\t\t\tvar callback = function callback() {\n\t\t\t\t(0, _dom.exitDocument)(script);\n\t\t\t\topt_callback && opt_callback();\n\t\t\t};\n\t\t\t(0, _dom.once)(script, 'load', callback);\n\t\t\t(0, _dom.once)(script, 'error', callback);\n\n\t\t\tif (opt_appendFn) {\n\t\t\t\topt_appendFn(script);\n\t\t\t} else {\n\t\t\t\tdocument.head.appendChild(script);\n\t\t\t}\n\n\t\t\treturn script;\n\t\t}\n\n\t\t/**\n   * Evaluates the code referenced by the given script element.\n   * @param {!Element} script\n   * @param {function()=} opt_callback Optional function to be called\n   *   when the script has been run.\n   * @param {function()=} opt_appendFn Optional function to append the node\n   *   into document.\n   * @return {Element} script\n   */\n\n\t}, {\n\t\tkey: 'runScript',\n\t\tvalue: function runScript(script, opt_callback, opt_appendFn) {\n\t\t\tvar callback = function callback() {\n\t\t\t\topt_callback && opt_callback();\n\t\t\t};\n\t\t\tif (script.type && script.type !== 'text/javascript') {\n\t\t\t\t_metal.async.nextTick(callback);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t(0, _dom.exitDocument)(script);\n\t\t\tif (script.src) {\n\t\t\t\treturn globalEval.runFile(script.src, opt_callback, opt_appendFn);\n\t\t\t} else {\n\t\t\t\t_metal.async.nextTick(callback);\n\t\t\t\treturn globalEval.run(script.text, opt_appendFn);\n\t\t\t}\n\t\t}\n\n\t\t/**\n   * Evaluates any script tags present in the given element.\n   * @param {!Element} element\n   * @param {function()=} opt_callback Optional function to be called\n   *   when the script has been run.\n   * @param {function()=} opt_appendFn Optional function to append the node\n   *   into document.\n   */\n\n\t}, {\n\t\tkey: 'runScriptsInElement',\n\t\tvalue: function runScriptsInElement(element, opt_callback, opt_appendFn) {\n\t\t\tvar scripts = element.querySelectorAll('script');\n\t\t\tif (scripts.length) {\n\t\t\t\tglobalEval.runScriptsInOrder(scripts, 0, opt_callback, opt_appendFn);\n\t\t\t} else if (opt_callback) {\n\t\t\t\t_metal.async.nextTick(opt_callback);\n\t\t\t}\n\t\t}\n\n\t\t/**\n   * Runs the given scripts elements in the order that they appear.\n   * @param {!NodeList} scripts\n   * @param {number} index\n   * @param {function()=} opt_callback Optional function to be called\n   *   when the script has been run.\n   * @param {function()=} opt_appendFn Optional function to append the node\n   *   into document.\n   */\n\n\t}, {\n\t\tkey: 'runScriptsInOrder',\n\t\tvalue: function runScriptsInOrder(scripts, index, opt_callback, opt_appendFn) {\n\t\t\tglobalEval.runScript(scripts.item(index), function () {\n\t\t\t\tif (index < scripts.length - 1) {\n\t\t\t\t\tglobalEval.runScriptsInOrder(scripts, index + 1, opt_callback, opt_appendFn);\n\t\t\t\t} else if (opt_callback) {\n\t\t\t\t\t_metal.async.nextTick(opt_callback);\n\t\t\t\t}\n\t\t\t}, opt_appendFn);\n\t\t}\n\t}]);\n\n\treturn globalEval;\n}();\n\nexports.default = globalEval;"
        },
        {
          "id": 46,
          "identifier": "/Users/Liferay/trampo/senna.js/node_modules/metal-dom/lib/globalEvalStyles.js",
          "name": "./node_modules/metal-dom/lib/globalEvalStyles.js",
          "index": 40,
          "index2": 35,
          "size": 3988,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0
          ],
          "assets": [],
          "issuer": "/Users/Liferay/trampo/senna.js/node_modules/metal-dom/lib/all/dom.js",
          "issuerId": 7,
          "issuerName": "./node_modules/metal-dom/lib/all/dom.js",
          "profile": {
            "factory": 8,
            "building": 53,
            "dependencies": 7
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "reasons": [
            {
              "moduleId": 7,
              "moduleIdentifier": "/Users/Liferay/trampo/senna.js/node_modules/metal-dom/lib/all/dom.js",
              "module": "./node_modules/metal-dom/lib/all/dom.js",
              "moduleName": "./node_modules/metal-dom/lib/all/dom.js",
              "type": "cjs require",
              "userRequest": "../globalEvalStyles",
              "loc": "42:24-54"
            }
          ],
          "usedExports": true,
          "providedExports": null,
          "optimizationBailout": [
            "ModuleConcatenation bailout: Module is not an ECMAScript module"
          ],
          "depth": 3,
          "source": "'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _metal = require('metal');\n\nvar _dom = require('./dom');\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\n * Utility functions for running styles.\n */\nvar globalEvalStyles = function () {\n\tfunction globalEvalStyles() {\n\t\t_classCallCheck(this, globalEvalStyles);\n\t}\n\n\t_createClass(globalEvalStyles, null, [{\n\t\tkey: 'run',\n\n\t\t/**\n   * Evaluates the given style.\n   * @param {string} text\n   * @param {function()=} opt_appendFn Optional function to append the node\n   *   into document.\n   * @return {Element} style\n   */\n\t\tvalue: function run(text, opt_appendFn) {\n\t\t\tvar style = document.createElement('style');\n\t\t\tstyle.innerHTML = text;\n\t\t\tif (opt_appendFn) {\n\t\t\t\topt_appendFn(style);\n\t\t\t} else {\n\t\t\t\tdocument.head.appendChild(style);\n\t\t\t}\n\t\t\treturn style;\n\t\t}\n\n\t\t/**\n   * Evaluates the given style file.\n   * @param {string} href The file's path.\n   * @param {function()=} opt_callback Optional function to be called\n   *   when the styles has been run.\n   * @param {function()=} opt_appendFn Optional function to append the node\n   *   into document.\n   * @return {Element} style\n   */\n\n\t}, {\n\t\tkey: 'runFile',\n\t\tvalue: function runFile(href, opt_callback, opt_appendFn) {\n\t\t\tvar link = document.createElement('link');\n\t\t\tlink.rel = 'stylesheet';\n\t\t\tlink.href = href;\n\t\t\tglobalEvalStyles.runStyle(link, opt_callback, opt_appendFn);\n\t\t\treturn link;\n\t\t}\n\n\t\t/**\n   * Evaluates the code referenced by the given style/link element.\n   * @param {!Element} style\n   * @param {function()=} opt_callback Optional function to be called\n   *   when the script has been run.\n   * @param {function()=} opt_appendFn Optional function to append the node\n   *   into document.\n   *  @return {Element} style\n   */\n\n\t}, {\n\t\tkey: 'runStyle',\n\t\tvalue: function runStyle(style, opt_callback, opt_appendFn) {\n\t\t\tvar callback = function callback() {\n\t\t\t\topt_callback && opt_callback();\n\t\t\t};\n\t\t\tif (style.rel && style.rel !== 'stylesheet') {\n\t\t\t\t_metal.async.nextTick(callback);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (style.tagName === 'STYLE') {\n\t\t\t\t_metal.async.nextTick(callback);\n\t\t\t} else {\n\t\t\t\t(0, _dom.once)(style, 'load', callback);\n\t\t\t\t(0, _dom.once)(style, 'error', callback);\n\t\t\t}\n\n\t\t\tif (opt_appendFn) {\n\t\t\t\topt_appendFn(style);\n\t\t\t} else {\n\t\t\t\tdocument.head.appendChild(style);\n\t\t\t}\n\n\t\t\treturn style;\n\t\t}\n\n\t\t/**\n   * Evaluates any style present in the given element.\n   * @param {!Element} element\n   * @param {function()=} opt_callback Optional function to be called when the\n   *   style has been run.\n   * @param {function()=} opt_appendFn Optional function to append the node\n   *   into document.\n   */\n\n\t}, {\n\t\tkey: 'runStylesInElement',\n\t\tvalue: function runStylesInElement(element, opt_callback, opt_appendFn) {\n\t\t\tvar styles = element.querySelectorAll('style,link');\n\t\t\tif (styles.length === 0 && opt_callback) {\n\t\t\t\t_metal.async.nextTick(opt_callback);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar loadCount = 0;\n\t\t\tvar callback = function callback() {\n\t\t\t\tif (opt_callback && ++loadCount === styles.length) {\n\t\t\t\t\t_metal.async.nextTick(opt_callback);\n\t\t\t\t}\n\t\t\t};\n\t\t\tfor (var i = 0; i < styles.length; i++) {\n\t\t\t\tglobalEvalStyles.runStyle(styles[i], callback, opt_appendFn);\n\t\t\t}\n\t\t}\n\t}]);\n\n\treturn globalEvalStyles;\n}();\n\nexports.default = globalEvalStyles;"
        },
        {
          "id": 47,
          "identifier": "/Users/Liferay/trampo/senna.js/node_modules/metal-dom/lib/events.js",
          "name": "./node_modules/metal-dom/lib/events.js",
          "index": 41,
          "index2": 36,
          "size": 1282,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0
          ],
          "assets": [],
          "issuer": "/Users/Liferay/trampo/senna.js/node_modules/metal-dom/lib/all/dom.js",
          "issuerId": 7,
          "issuerName": "./node_modules/metal-dom/lib/all/dom.js",
          "profile": {
            "factory": 8,
            "building": 54,
            "dependencies": 1
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "reasons": [
            {
              "moduleId": 7,
              "moduleIdentifier": "/Users/Liferay/trampo/senna.js/node_modules/metal-dom/lib/all/dom.js",
              "module": "./node_modules/metal-dom/lib/all/dom.js",
              "moduleName": "./node_modules/metal-dom/lib/all/dom.js",
              "type": "cjs require",
              "userRequest": "../events",
              "loc": "46:0-20"
            }
          ],
          "usedExports": true,
          "providedExports": null,
          "optimizationBailout": [
            "ModuleConcatenation bailout: Module is not an ECMAScript module"
          ],
          "depth": 3,
          "source": "'use strict';\n\nvar _dom = require('./dom');\n\nvar _features = require('./features');\n\nvar _features2 = _interopRequireDefault(_features);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar mouseEventMap = {\n\tmouseenter: 'mouseover',\n\tmouseleave: 'mouseout',\n\tpointerenter: 'pointerover',\n\tpointerleave: 'pointerout'\n};\nObject.keys(mouseEventMap).forEach(function (eventName) {\n\t(0, _dom.registerCustomEvent)(eventName, {\n\t\tdelegate: true,\n\t\thandler: function handler(callback, event) {\n\t\t\tvar related = event.relatedTarget;\n\t\t\tvar target = event.delegateTarget;\n\t\t\tif (!related || related !== target && !(0, _dom.contains)(target, related)) {\n\t\t\t\tevent.customType = eventName;\n\t\t\t\treturn callback(event);\n\t\t\t}\n\t\t},\n\t\toriginalEvent: mouseEventMap[eventName]\n\t});\n});\n\nvar animationEventMap = {\n\tanimation: 'animationend',\n\ttransition: 'transitionend'\n};\nObject.keys(animationEventMap).forEach(function (eventType) {\n\tvar eventName = animationEventMap[eventType];\n\t(0, _dom.registerCustomEvent)(eventName, {\n\t\tevent: true,\n\t\tdelegate: true,\n\t\thandler: function handler(callback, event) {\n\t\t\tevent.customType = eventName;\n\t\t\treturn callback(event);\n\t\t},\n\t\toriginalEvent: _features2.default.checkAnimationEventName()[eventType]\n\t});\n});"
        },
        {
          "id": 48,
          "identifier": "/Users/Liferay/trampo/senna.js/node_modules/metal-path-parser/lib/pathParser.js",
          "name": "./node_modules/metal-path-parser/lib/pathParser.js",
          "index": 43,
          "index2": 38,
          "size": 4716,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0
          ],
          "assets": [],
          "issuer": "/Users/Liferay/trampo/senna.js/node_modules/babel-loader/lib/index.js??ref--0!/Users/Liferay/trampo/senna.js/src/route/Route.js",
          "issuerId": 9,
          "issuerName": "./src/route/Route.js",
          "profile": {
            "factory": 209,
            "building": 17,
            "dependencies": 14
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "reasons": [
            {
              "moduleId": 9,
              "moduleIdentifier": "/Users/Liferay/trampo/senna.js/node_modules/babel-loader/lib/index.js??ref--0!/Users/Liferay/trampo/senna.js/src/route/Route.js",
              "module": "./src/route/Route.js",
              "moduleName": "./src/route/Route.js",
              "type": "amd require",
              "userRequest": "metal-path-parser",
              "loc": "1:0-129:2"
            }
          ],
          "usedExports": true,
          "providedExports": null,
          "optimizationBailout": [
            "ModuleConcatenation bailout: Module is not an ECMAScript module"
          ],
          "depth": 2,
          "source": "'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\nexports.parse = parse;\nexports.toRegex = toRegex;\nexports.extractData = extractData;\n\nvar _metal = require('metal');\n\nvar _metal2 = _interopRequireDefault(_metal);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar REGEX = /([\\/])?(?:(?:\\:(\\w+)(?:\\(((?:\\\\.|[^\\\\()])*)\\))?|\\(((?:\\\\.|[^\\\\()])+)\\))([+*?])?)/g;\n\n/**\n * Converts the given array of regex matches to a more readable object format.\n * @param {!Array<string>} matches\n * @return {!Object}\n */\nfunction convertMatchesToObj(matches) {\n\treturn {\n\t\tmatch: matches[0],\n\t\tprefix: matches[1],\n\t\tname: matches[2],\n\t\tparamPattern: matches[3],\n\t\tunnamedPattern: matches[4],\n\t\tmodifier: matches[5]\n\t};\n}\n\n/**\n * Converts the given tokens parsed from a route format string to a regex.\n * @param {!Array<string|!Object>} tokens\n * @return {!RegExp}\n */\nfunction convertTokensToRegex(tokens) {\n\tvar regex = '';\n\tfor (var i = 0; i < tokens.length; i++) {\n\t\tif (_metal2.default.isString(tokens[i])) {\n\t\t\tregex += escape(tokens[i]);\n\t\t} else {\n\t\t\tvar capture = encloseNonCapturingGroup(tokens[i].pattern);\n\t\t\tif (tokens[i].repeat) {\n\t\t\t\tcapture += encloseNonCapturingGroup('\\\\/' + capture) + '*';\n\t\t\t}\n\t\t\tcapture = escape(tokens[i].prefix) + ('(' + capture + ')');\n\t\t\tif (tokens[i].optional) {\n\t\t\t\tif (!tokens[i].partial) {\n\t\t\t\t\tcapture = encloseNonCapturingGroup(capture);\n\t\t\t\t}\n\t\t\t\tcapture += '?';\n\t\t\t}\n\t\t\tregex += capture;\n\t\t}\n\t}\n\treturn new RegExp('^' + makeTrailingSlashOptional(regex) + '$');\n}\n\n/**\n * Encloses the given regex pattern into a non capturing group.\n * @param {string} pattern\n * @return {string}\n */\nfunction encloseNonCapturingGroup(pattern) {\n\treturn '(?:' + pattern + ')';\n}\n\n/**\n * Escapes the given string to show up in the path regex.\n * @param {string} str\n * @return {string}\n */\nfunction escape(str) {\n\treturn str.replace(/([.+*?=^!:${}()[\\]|\\/\\\\])/g, '\\\\$1');\n}\n\n/**\n * Makes trailing slash optional on paths.\n * @param {string} regex\n * @param {string}\n */\nfunction makeTrailingSlashOptional(regex) {\n\tif (/\\/$/.test(regex)) {\n\t\tregex += '?';\n\t} else {\n\t\tregex += '\\\\/?';\n\t}\n\treturn regex;\n}\n\n/**\n * Parses the given route format string into tokens representing its contents.\n * @param {!Array|string} routeOrTokens Either a route format string or tokens\n *     previously parsed via the `parse` function.\n * @return {!Array<string|!Object>} An array of tokens that can be either plain\n *     strings (part of the route) or objects containing informations on params.\n */\nfunction parse(routeOrTokens) {\n\tif (!_metal2.default.isString(routeOrTokens)) {\n\t\treturn routeOrTokens;\n\t}\n\n\tvar route = routeOrTokens;\n\tvar unnamedCount = 0;\n\tvar tokens = [];\n\tvar currPath = '';\n\tvar index = 0;\n\n\tvar matches = REGEX.exec(route);\n\twhile (matches) {\n\t\tvar data = convertMatchesToObj(matches);\n\n\t\tcurrPath = route.slice(index, matches.index);\n\t\tindex = matches.index + data.match.length;\n\t\ttokens.push(currPath);\n\n\t\ttokens.push({\n\t\t\tname: data.name ? data.name : '' + unnamedCount++,\n\t\t\tpartial: route[index] && route[index] !== data.prefix,\n\t\t\tprefix: data.prefix || '',\n\t\t\tpattern: data.paramPattern || data.unnamedPattern || '[^\\\\/]+',\n\t\t\trepeat: data.modifier === '*' || data.modifier === '+',\n\t\t\toptional: data.modifier === '*' || data.modifier === '?'\n\t\t});\n\n\t\tmatches = REGEX.exec(route);\n\t}\n\n\tif (index < route.length) {\n\t\ttokens.push(route.substr(index));\n\t}\n\treturn tokens;\n}\n\n/**\n * Converts the given route format string to a regex that can extract param\n * data from paths matching it.\n * @param {!Array|string} routeOrTokens Either a route format string or tokens\n *     previously parsed via the `parse` function.\n * @return {!RegExp}\n */\nfunction toRegex(routeOrTokens) {\n\treturn convertTokensToRegex(parse(routeOrTokens));\n}\n\n/**\n * Extracts data from the given path according to the specified route format.\n * @param {!Array|string} routeOrTokens Either a route format string or tokens\n *     previously parsed via the `parse` function.\n * @param {string} The path to extract param data from.\n * @return {Object<string, string>} The data object, or null if the path doesn't\n *     match the given format.\n */\nfunction extractData(routeOrTokens, path) {\n\tvar data = {};\n\tvar tokens = parse(routeOrTokens);\n\tvar match = path.match(convertTokensToRegex(tokens));\n\n\tif (!match) {\n\t\treturn null;\n\t}\n\n\tvar paramIndex = 1;\n\tfor (var i = 0; i < tokens.length; i++) {\n\t\tif (!_metal2.default.isString(tokens[i])) {\n\t\t\tvar value = match[paramIndex++];\n\t\t\tif (_metal2.default.isDef(value)) {\n\t\t\t\tif (tokens[i].repeat) {\n\t\t\t\t\tvalue = value.split('/');\n\t\t\t\t}\n\t\t\t\tdata[tokens[i].name] = value;\n\t\t\t}\n\t\t}\n\t}\n\treturn data;\n}"
        },
        {
          "id": 49,
          "identifier": "/Users/Liferay/trampo/senna.js/node_modules/babel-loader/lib/index.js??ref--0!/Users/Liferay/trampo/senna.js/src/cacheable/Cacheable.js",
          "name": "./src/cacheable/Cacheable.js",
          "index": 45,
          "index2": 40,
          "size": 3946,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0
          ],
          "assets": [],
          "issuer": "/Users/Liferay/trampo/senna.js/node_modules/babel-loader/lib/index.js??ref--0!/Users/Liferay/trampo/senna.js/src/screen/Screen.js",
          "issuerId": 10,
          "issuerName": "./src/screen/Screen.js",
          "profile": {
            "factory": 55,
            "building": 163,
            "dependencies": 12
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "reasons": [
            {
              "moduleId": 10,
              "moduleIdentifier": "/Users/Liferay/trampo/senna.js/node_modules/babel-loader/lib/index.js??ref--0!/Users/Liferay/trampo/senna.js/src/screen/Screen.js",
              "module": "./src/screen/Screen.js",
              "moduleName": "./src/screen/Screen.js",
              "type": "amd require",
              "userRequest": "../cacheable/Cacheable",
              "loc": "1:0-264:2"
            }
          ],
          "usedExports": true,
          "providedExports": null,
          "optimizationBailout": [
            "ModuleConcatenation bailout: Module is not an ECMAScript module"
          ],
          "depth": 2,
          "source": "define([\"exports\", \"metal\"], function (exports, _metal) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n\n  function _typeof(obj) {\n    if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n      _typeof = function _typeof(obj) {\n        return typeof obj;\n      };\n    } else {\n      _typeof = function _typeof(obj) {\n        return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n      };\n    }\n\n    return _typeof(obj);\n  }\n\n  function _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n      throw new TypeError(\"Cannot call a class as a function\");\n    }\n  }\n\n  function _defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  function _createClass(Constructor, protoProps, staticProps) {\n    if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) _defineProperties(Constructor, staticProps);\n    return Constructor;\n  }\n\n  function _possibleConstructorReturn(self, call) {\n    if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n      return call;\n    }\n\n    if (!self) {\n      throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }\n\n    return self;\n  }\n\n  function _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n      throw new TypeError(\"Super expression must either be null or a function\");\n    }\n\n    subClass.prototype = Object.create(superClass && superClass.prototype, {\n      constructor: {\n        value: subClass,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n    if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n  }\n\n  var Cacheable = function (_Disposable) {\n    _inherits(Cacheable, _Disposable);\n\n    /**\n     * Abstract class for defining cacheable behavior.\n     * @constructor\n     */\n    function Cacheable() {\n      var _this;\n\n      _classCallCheck(this, Cacheable);\n\n      _this = _possibleConstructorReturn(this, (Cacheable.__proto__ || Object.getPrototypeOf(Cacheable)).call(this));\n      /**\n       * Holds the cached data.\n       * @type {!Object}\n       * @default null\n       * @protected\n       */\n\n      _this.cache = null;\n      /**\n       * Holds whether class is cacheable.\n       * @type {boolean}\n       * @default false\n       * @protected\n       */\n\n      _this.cacheable = false;\n      return _this;\n    }\n    /**\n     * Adds content to the cache.\n     * @param {string} content Content to be cached.\n     * @chainable\n     */\n\n\n    _createClass(Cacheable, [{\n      key: \"addCache\",\n      value: function addCache(content) {\n        if (this.cacheable) {\n          this.cache = content;\n        }\n\n        return this;\n      }\n    }, {\n      key: \"clearCache\",\n      value: function clearCache() {\n        this.cache = null;\n        return this;\n      }\n    }, {\n      key: \"disposeInternal\",\n      value: function disposeInternal() {\n        this.clearCache();\n      }\n    }, {\n      key: \"getCache\",\n      value: function getCache() {\n        return this.cache;\n      }\n    }, {\n      key: \"isCacheable\",\n      value: function isCacheable() {\n        return this.cacheable;\n      }\n    }, {\n      key: \"setCacheable\",\n      value: function setCacheable(cacheable) {\n        if (!cacheable) {\n          this.clearCache();\n        }\n\n        this.cacheable = cacheable;\n      }\n    }]);\n\n    return Cacheable;\n  }(_metal.Disposable);\n\n  exports.default = Cacheable;\n});"
        },
        {
          "id": 50,
          "identifier": "/Users/Liferay/trampo/senna.js/node_modules/metal-ajax/lib/Ajax.js",
          "name": "./node_modules/metal-ajax/lib/Ajax.js",
          "index": 49,
          "index2": 44,
          "size": 4319,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0
          ],
          "assets": [],
          "issuer": "/Users/Liferay/trampo/senna.js/node_modules/babel-loader/lib/index.js??ref--0!/Users/Liferay/trampo/senna.js/src/screen/RequestScreen.js",
          "issuerId": 19,
          "issuerName": "./src/screen/RequestScreen.js",
          "profile": {
            "factory": 285,
            "building": 14,
            "dependencies": 16
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "reasons": [
            {
              "moduleId": 19,
              "moduleIdentifier": "/Users/Liferay/trampo/senna.js/node_modules/babel-loader/lib/index.js??ref--0!/Users/Liferay/trampo/senna.js/src/screen/RequestScreen.js",
              "module": "./src/screen/RequestScreen.js",
              "moduleName": "./src/screen/RequestScreen.js",
              "type": "amd require",
              "userRequest": "metal-ajax",
              "loc": "1:0-387:2"
            }
          ],
          "usedExports": true,
          "providedExports": null,
          "optimizationBailout": [
            "ModuleConcatenation bailout: Module is not an ECMAScript module"
          ],
          "depth": 2,
          "source": "'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _metal = require('metal');\n\nvar _metalUri = require('metal-uri');\n\nvar _metalUri2 = _interopRequireDefault(_metalUri);\n\nvar _metalPromise = require('metal-promise');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar Ajax = function () {\n\tfunction Ajax() {\n\t\t_classCallCheck(this, Ajax);\n\t}\n\n\t_createClass(Ajax, null, [{\n\t\tkey: 'parseResponseHeaders',\n\n\n\t\t/**\n   * XmlHttpRequest's getAllResponseHeaders() method returns a string of\n   * response headers according to the format described on the spec:\n   * {@link http://www.w3.org/TR/XMLHttpRequest/#the-getallresponseheaders-method}.\n   * This method parses that string into a user-friendly name/value pair\n   * object.\n   * @param {string} allHeaders All headers as string.\n   * @return {!Array.<Object<string, string>>}\n   */\n\t\tvalue: function parseResponseHeaders(allHeaders) {\n\t\t\tvar headers = [];\n\t\t\tif (!allHeaders) {\n\t\t\t\treturn headers;\n\t\t\t}\n\t\t\tvar pairs = allHeaders.split('\\r\\n');\n\t\t\tfor (var i = 0; i < pairs.length; i++) {\n\t\t\t\tvar index = pairs[i].indexOf(': ');\n\t\t\t\tif (index > 0) {\n\t\t\t\t\tvar name = pairs[i].substring(0, index);\n\t\t\t\t\tvar value = pairs[i].substring(index + 2);\n\t\t\t\t\theaders.push({\n\t\t\t\t\t\tname: name,\n\t\t\t\t\t\tvalue: value\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn headers;\n\t\t}\n\n\t\t/**\n   * Requests the url using XMLHttpRequest.\n   * @param {!string} url\n   * @param {!string} method\n   * @param {?string} body\n   * @param {MultiMap=} opt_headers\n   * @param {MultiMap=} opt_params\n   * @param {number=} opt_timeout\n   * @param {boolean=} opt_sync\n   * @param {boolean=} opt_withCredentials\n   * @return {Promise} Deferred ajax request.\n   * @protected\n   */\n\n\t}, {\n\t\tkey: 'request',\n\t\tvalue: function request(url, method, body, opt_headers, opt_params, opt_timeout, opt_sync, opt_withCredentials) {\n\t\t\turl = url || '';\n\t\t\tmethod = method || 'GET';\n\n\t\t\tvar request = new XMLHttpRequest();\n\t\t\tvar previousReadyState = 0;\n\n\t\t\tvar promise = new _metalPromise.CancellablePromise(function (resolve, reject) {\n\t\t\t\trequest.onload = function () {\n\t\t\t\t\tif (request.aborted) {\n\t\t\t\t\t\trequest.onerror();\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tresolve(request);\n\t\t\t\t};\n\t\t\t\trequest.onreadystatechange = function () {\n\t\t\t\t\tif (previousReadyState && previousReadyState < 3 && 4 === request.readyState) {\n\t\t\t\t\t\trequest.terminatedPrematurely = true;\n\t\t\t\t\t}\n\t\t\t\t\tpreviousReadyState = request.readyState;\n\t\t\t\t};\n\t\t\t\trequest.onerror = function () {\n\t\t\t\t\tvar message = 'Request error';\n\t\t\t\t\tif (request.terminatedPrematurely) {\n\t\t\t\t\t\tmessage = 'Request terminated prematurely';\n\t\t\t\t\t}\n\t\t\t\t\tvar error = new Error(message);\n\t\t\t\t\terror.request = request;\n\t\t\t\t\treject(error);\n\t\t\t\t};\n\t\t\t}).thenCatch(function (reason) {\n\t\t\t\trequest.abort();\n\t\t\t\tthrow reason;\n\t\t\t}).thenAlways(function () {\n\t\t\t\tclearTimeout(timeout);\n\t\t\t});\n\n\t\t\turl = new _metalUri2.default(url);\n\n\t\t\tif (opt_params) {\n\t\t\t\turl.addParametersFromMultiMap(opt_params).toString();\n\t\t\t}\n\n\t\t\turl = url.toString();\n\n\t\t\trequest.open(method, url, !opt_sync);\n\n\t\t\tif (opt_withCredentials) {\n\t\t\t\trequest.withCredentials = true;\n\t\t\t}\n\n\t\t\tif (opt_headers) {\n\t\t\t\topt_headers.names().forEach(function (name) {\n\t\t\t\t\trequest.setRequestHeader(name, opt_headers.getAll(name).join(', '));\n\t\t\t\t});\n\t\t\t}\n\n\t\t\trequest.send((0, _metal.isDef)(body) ? body : null);\n\n\t\t\tif ((0, _metal.isDefAndNotNull)(opt_timeout)) {\n\t\t\t\tvar timeout = setTimeout(function () {\n\t\t\t\t\tpromise.cancel('Request timeout');\n\t\t\t\t}, opt_timeout);\n\t\t\t}\n\n\t\t\treturn promise;\n\t\t}\n\t}]);\n\n\treturn Ajax;\n}();\n\nexports.default = Ajax;"
        },
        {
          "id": 51,
          "identifier": "/Users/Liferay/trampo/senna.js/node_modules/babel-loader/lib/index.js??ref--0!/Users/Liferay/trampo/senna.js/src/errors/errors.js",
          "name": "./src/errors/errors.js",
          "index": 50,
          "index2": 45,
          "size": 1008,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0
          ],
          "assets": [],
          "issuer": "/Users/Liferay/trampo/senna.js/node_modules/babel-loader/lib/index.js??ref--0!/Users/Liferay/trampo/senna.js/src/screen/RequestScreen.js",
          "issuerId": 19,
          "issuerName": "./src/screen/RequestScreen.js",
          "profile": {
            "factory": 109,
            "building": 143
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "reasons": [
            {
              "moduleId": 19,
              "moduleIdentifier": "/Users/Liferay/trampo/senna.js/node_modules/babel-loader/lib/index.js??ref--0!/Users/Liferay/trampo/senna.js/src/screen/RequestScreen.js",
              "module": "./src/screen/RequestScreen.js",
              "moduleName": "./src/screen/RequestScreen.js",
              "type": "amd require",
              "userRequest": "../errors/errors",
              "loc": "1:0-387:2"
            }
          ],
          "usedExports": true,
          "providedExports": null,
          "optimizationBailout": [
            "ModuleConcatenation bailout: Module is not an ECMAScript module"
          ],
          "depth": 2,
          "source": "define([\"exports\"], function (exports) {\n  'use strict';\n  /**\n   * Holds value error messages.\n   * @const\n   */\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n\n  function _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n      throw new TypeError(\"Cannot call a class as a function\");\n    }\n  }\n\n  var errors = function errors() {\n    _classCallCheck(this, errors);\n  };\n\n  /**\n   * Invalid status error message.\n   * @type {string}\n   * @static\n   */\n  errors.INVALID_STATUS = 'Invalid status code';\n  /**\n   * Request error message.\n   * @type {string}\n   * @static\n   */\n\n  errors.REQUEST_ERROR = 'Request error';\n  /**\n   * Request timeout error message.\n   * @type {string}\n   * @static\n   */\n\n  errors.REQUEST_TIMEOUT = 'Request timeout';\n  /**\n   * Request is blocked by CORS issue message.\n   * @type {string}\n   * @static\n   */\n\n  errors.REQUEST_PREMATURE_TERMINATION = 'Request terminated prematurely';\n  exports.default = errors;\n});"
        }
      ],
      "filteredModules": 0,
      "children": []
    },
    {
      "errors": [],
      "warnings": [],
      "hash": "f35a344cb52b29ace86c",
      "time": 1410,
      "publicPath": "",
      "assetsByChunkName": {
        "main": "build/out.js"
      },
      "assets": [
        {
          "name": "build/out.js",
          "size": 105458,
          "chunks": [
            0
          ],
          "chunkNames": [
            "main"
          ],
          "emitted": true
        }
      ],
      "filteredAssets": 0,
      "entrypoints": {
        "main": {
          "chunks": [
            0
          ],
          "assets": [
            "build/out.js"
          ]
        }
      },
      "chunks": [
        {
          "id": 0,
          "rendered": true,
          "initial": true,
          "entry": true,
          "extraAsync": false,
          "size": 81319,
          "names": [
            "main"
          ],
          "files": [
            "build/out.js"
          ],
          "hash": "1990fb2fde0608cafc8e",
          "parents": [],
          "modules": [
            {
              "id": 0,
              "identifier": "external \"metal\"",
              "name": "external \"metal\"",
              "index": 6,
              "index2": 3,
              "size": 42,
              "cacheable": false,
              "built": false,
              "optional": false,
              "prefetched": false,
              "chunks": [
                0
              ],
              "assets": [],
              "issuer": "/Users/Liferay/trampo/senna.js/src/app/App.js",
              "issuerId": 8,
              "issuerName": "./src/app/App.js",
              "profile": {
                "factory": 0,
                "building": 0
              },
              "failed": false,
              "errors": 0,
              "warnings": 0,
              "reasons": [
                {
                  "moduleId": 6,
                  "moduleIdentifier": "/Users/Liferay/trampo/senna.js/src/route/Route.js",
                  "module": "./src/route/Route.js",
                  "moduleName": "./src/route/Route.js",
                  "type": "harmony import",
                  "userRequest": "metal",
                  "loc": "3:0-62"
                },
                {
                  "moduleId": 7,
                  "moduleIdentifier": "/Users/Liferay/trampo/senna.js/src/screen/Screen.js",
                  "module": "./src/screen/Screen.js",
                  "moduleName": "./src/screen/Screen.js",
                  "type": "harmony import",
                  "userRequest": "metal",
                  "loc": "3:0-31"
                },
                {
                  "moduleId": 8,
                  "moduleIdentifier": "/Users/Liferay/trampo/senna.js/src/app/App.js",
                  "module": "./src/app/App.js",
                  "moduleName": "./src/app/App.js",
                  "type": "harmony import",
                  "userRequest": "metal",
                  "loc": "4:0-64"
                },
                {
                  "moduleId": 9,
                  "moduleIdentifier": "/Users/Liferay/trampo/senna.js/src/surface/Surface.js",
                  "module": "./src/surface/Surface.js",
                  "moduleName": "./src/surface/Surface.js",
                  "type": "harmony import",
                  "userRequest": "metal",
                  "loc": "4:0-52"
                },
                {
                  "moduleId": 10,
                  "moduleIdentifier": "/Users/Liferay/trampo/senna.js/src/screen/HtmlScreen.js",
                  "module": "./src/screen/HtmlScreen.js",
                  "moduleName": "./src/screen/HtmlScreen.js",
                  "type": "harmony import",
                  "userRequest": "metal",
                  "loc": "3:0-31"
                },
                {
                  "moduleId": 11,
                  "moduleIdentifier": "/Users/Liferay/trampo/senna.js/src/screen/RequestScreen.js",
                  "module": "./src/screen/RequestScreen.js",
                  "moduleName": "./src/screen/RequestScreen.js",
                  "type": "harmony import",
                  "userRequest": "metal",
                  "loc": "3:0-40"
                },
                {
                  "moduleId": 15,
                  "moduleIdentifier": "/Users/Liferay/trampo/senna.js/src/app/AppDataAttributeHandler.js",
                  "module": "./src/app/AppDataAttributeHandler.js",
                  "moduleName": "./src/app/AppDataAttributeHandler.js",
                  "type": "harmony import",
                  "userRequest": "metal",
                  "loc": "3:0-79"
                },
                {
                  "moduleId": 20,
                  "moduleIdentifier": "/Users/Liferay/trampo/senna.js/src/cacheable/Cacheable.js",
                  "module": "./src/cacheable/Cacheable.js",
                  "moduleName": "./src/cacheable/Cacheable.js",
                  "type": "harmony import",
                  "userRequest": "metal",
                  "loc": "3:0-35"
                }
              ],
              "usedExports": [
                "Disposable",
                "array",
                "async",
                "getUid",
                "isDefAndNotNull",
                "isElement",
                "isFunction",
                "isString",
                "object"
              ],
              "providedExports": null,
              "optimizationBailout": [],
              "depth": 2
            },
            {
              "id": 1,
              "identifier": "/Users/Liferay/trampo/senna.js/src/globals/globals.js",
              "name": "./src/globals/globals.js",
              "index": 2,
              "index2": 0,
              "size": 192,
              "cacheable": true,
              "built": true,
              "optional": false,
              "prefetched": false,
              "chunks": [
                0
              ],
              "assets": [],
              "issuer": "/Users/Liferay/trampo/senna.js/src/utils/utils.js",
              "issuerId": 3,
              "issuerName": "./src/utils/utils.js",
              "profile": {
                "factory": 441,
                "building": 9
              },
              "failed": false,
              "errors": 0,
              "warnings": 0,
              "reasons": [
                {
                  "moduleId": 3,
                  "moduleIdentifier": "/Users/Liferay/trampo/senna.js/src/utils/utils.js",
                  "module": "./src/utils/utils.js",
                  "moduleName": "./src/utils/utils.js",
                  "type": "harmony import",
                  "userRequest": "../globals/globals",
                  "loc": "3:0-41"
                },
                {
                  "moduleId": 8,
                  "moduleIdentifier": "/Users/Liferay/trampo/senna.js/src/app/App.js",
                  "module": "./src/app/App.js",
                  "moduleName": "./src/app/App.js",
                  "type": "harmony import",
                  "userRequest": "../globals/globals",
                  "loc": "8:0-41"
                },
                {
                  "moduleId": 9,
                  "moduleIdentifier": "/Users/Liferay/trampo/senna.js/src/surface/Surface.js",
                  "module": "./src/surface/Surface.js",
                  "moduleName": "./src/surface/Surface.js",
                  "type": "harmony import",
                  "userRequest": "../globals/globals",
                  "loc": "3:0-41"
                },
                {
                  "moduleId": 10,
                  "moduleIdentifier": "/Users/Liferay/trampo/senna.js/src/screen/HtmlScreen.js",
                  "module": "./src/screen/HtmlScreen.js",
                  "moduleName": "./src/screen/HtmlScreen.js",
                  "type": "harmony import",
                  "userRequest": "../globals/globals",
                  "loc": "6:0-41"
                },
                {
                  "moduleId": 11,
                  "moduleIdentifier": "/Users/Liferay/trampo/senna.js/src/screen/RequestScreen.js",
                  "module": "./src/screen/RequestScreen.js",
                  "moduleName": "./src/screen/RequestScreen.js",
                  "type": "harmony import",
                  "userRequest": "../globals/globals",
                  "loc": "9:0-41"
                },
                {
                  "moduleId": 14,
                  "moduleIdentifier": "/Users/Liferay/trampo/senna.js/src/app/dataAttributeHandler.js",
                  "module": "./src/app/dataAttributeHandler.js",
                  "moduleName": "./src/app/dataAttributeHandler.js",
                  "type": "harmony import",
                  "userRequest": "../globals/globals",
                  "loc": "3:0-41"
                },
                {
                  "moduleId": 15,
                  "moduleIdentifier": "/Users/Liferay/trampo/senna.js/src/app/AppDataAttributeHandler.js",
                  "module": "./src/app/AppDataAttributeHandler.js",
                  "moduleName": "./src/app/AppDataAttributeHandler.js",
                  "type": "harmony import",
                  "userRequest": "../globals/globals",
                  "loc": "5:0-41"
                }
              ],
              "usedExports": [
                "default"
              ],
              "providedExports": [
                "default"
              ],
              "optimizationBailout": [],
              "depth": 2,
              "source": "var globals = globals || {};\n\nif (typeof window !== 'undefined') {\n\tglobals.window = window;\n}\n\nif (typeof document !== 'undefined') {\n\tglobals.document = document;\n}\n\nexport default globals;\n"
            },
            {
              "id": 2,
              "identifier": "external \"metal-promise\"",
              "name": "external \"metal-promise\"",
              "index": 11,
              "index2": 7,
              "size": 42,
              "cacheable": false,
              "built": false,
              "optional": false,
              "prefetched": false,
              "chunks": [
                0
              ],
              "assets": [],
              "issuer": "/Users/Liferay/trampo/senna.js/src/app/App.js",
              "issuerId": 8,
              "issuerName": "./src/app/App.js",
              "profile": {
                "factory": 0,
                "building": 0
              },
              "failed": false,
              "errors": 0,
              "warnings": 0,
              "reasons": [
                {
                  "moduleId": 7,
                  "moduleIdentifier": "/Users/Liferay/trampo/senna.js/src/screen/Screen.js",
                  "module": "./src/screen/Screen.js",
                  "moduleName": "./src/screen/Screen.js",
                  "type": "harmony import",
                  "userRequest": "metal-promise",
                  "loc": "6:0-47"
                },
                {
                  "moduleId": 8,
                  "moduleIdentifier": "/Users/Liferay/trampo/senna.js/src/app/App.js",
                  "module": "./src/app/App.js",
                  "moduleName": "./src/app/App.js",
                  "type": "harmony import",
                  "userRequest": "metal-promise",
                  "loc": "6:0-47"
                },
                {
                  "moduleId": 9,
                  "moduleIdentifier": "/Users/Liferay/trampo/senna.js/src/surface/Surface.js",
                  "module": "./src/surface/Surface.js",
                  "moduleName": "./src/surface/Surface.js",
                  "type": "harmony import",
                  "userRequest": "metal-promise",
                  "loc": "6:0-47"
                },
                {
                  "moduleId": 10,
                  "moduleIdentifier": "/Users/Liferay/trampo/senna.js/src/screen/HtmlScreen.js",
                  "module": "./src/screen/HtmlScreen.js",
                  "moduleName": "./src/screen/HtmlScreen.js",
                  "type": "harmony import",
                  "userRequest": "metal-promise",
                  "loc": "5:0-47"
                },
                {
                  "moduleId": 11,
                  "moduleIdentifier": "/Users/Liferay/trampo/senna.js/src/screen/RequestScreen.js",
                  "module": "./src/screen/RequestScreen.js",
                  "moduleName": "./src/screen/RequestScreen.js",
                  "type": "harmony import",
                  "userRequest": "metal-promise",
                  "loc": "6:0-47"
                }
              ],
              "usedExports": [
                "default"
              ],
              "providedExports": null,
              "optimizationBailout": [],
              "depth": 2
            },
            {
              "id": 3,
              "identifier": "/Users/Liferay/trampo/senna.js/src/utils/utils.js",
              "name": "./src/utils/utils.js",
              "index": 1,
              "index2": 2,
              "size": 3374,
              "cacheable": true,
              "built": true,
              "optional": false,
              "prefetched": false,
              "chunks": [
                0
              ],
              "assets": [],
              "issuer": "/Users/Liferay/trampo/senna.js/src/senna.js",
              "issuerId": 13,
              "issuerName": "./src/senna.js",
              "profile": {
                "factory": 5,
                "building": 15
              },
              "failed": false,
              "errors": 0,
              "warnings": 0,
              "reasons": [
                {
                  "moduleId": 8,
                  "moduleIdentifier": "/Users/Liferay/trampo/senna.js/src/app/App.js",
                  "module": "./src/app/App.js",
                  "moduleName": "./src/app/App.js",
                  "type": "harmony import",
                  "userRequest": "../utils/utils",
                  "loc": "13:0-35"
                },
                {
                  "moduleId": 10,
                  "moduleIdentifier": "/Users/Liferay/trampo/senna.js/src/screen/HtmlScreen.js",
                  "module": "./src/screen/HtmlScreen.js",
                  "moduleName": "./src/screen/HtmlScreen.js",
                  "type": "harmony import",
                  "userRequest": "../utils/utils",
                  "loc": "11:0-35"
                },
                {
                  "moduleId": 11,
                  "moduleIdentifier": "/Users/Liferay/trampo/senna.js/src/screen/RequestScreen.js",
                  "module": "./src/screen/RequestScreen.js",
                  "moduleName": "./src/screen/RequestScreen.js",
                  "type": "harmony import",
                  "userRequest": "../utils/utils",
                  "loc": "8:0-35"
                },
                {
                  "moduleId": 13,
                  "moduleIdentifier": "/Users/Liferay/trampo/senna.js/src/senna.js",
                  "module": "./src/senna.js",
                  "moduleName": "./src/senna.js",
                  "type": "harmony import",
                  "userRequest": "./utils/utils",
                  "loc": "3:0-34"
                }
              ],
              "usedExports": [
                "default"
              ],
              "providedExports": [
                "default"
              ],
              "optimizationBailout": [],
              "depth": 1,
              "source": "'use strict';\n\nimport globals from '../globals/globals';\nimport Uri from 'metal-uri';\n\n/**\n * A collection of static utility functions.\n * @const\n */\nclass utils {\n\n\t/**\n\t * Copies attributes form source node to target node.\n\t * @return {void}\n\t * @static\n\t */\n\tstatic copyNodeAttributes(source, target) {\n\t\tArray.prototype.slice.call(source.attributes).forEach((attribute) => target.setAttribute(attribute.name, attribute.value));\n\t}\n\n\t/**\n\t * Gets the current browser path including hashbang.\n\t * @return {!string}\n\t * @static\n\t */\n\tstatic getCurrentBrowserPath() {\n\t\treturn this.getCurrentBrowserPathWithoutHash() + globals.window.location.hash;\n\t}\n\n\t/**\n\t * Gets the current browser path excluding hashbang.\n\t * @return {!string}\n\t * @static\n\t */\n\tstatic getCurrentBrowserPathWithoutHash() {\n\t\treturn globals.window.location.pathname + globals.window.location.search;\n\t}\n\n\t/**\n\t * Gets the given node offset coordinates.\n\t * @return {!object}\n\t * @static\n\t */\n\tstatic getNodeOffset(node) {\n\t\tlet [offsetLeft, offsetTop] = [0, 0];\n\t\tdo {\n\t\t\toffsetLeft += node.offsetLeft;\n\t\t\toffsetTop += node.offsetTop;\n\t\t\tnode = node.offsetParent;\n\t\t} while (node);\n\t\treturn {\n\t\t\toffsetLeft,\n\t\t\toffsetTop\n\t\t};\n\t}\n\n\t/**\n\t * Extracts the path part of an url.\n\t * @return {!string}\n\t * @static\n\t */\n\tstatic getUrlPath(url) {\n\t\tvar uri = new Uri(url);\n\t\treturn uri.getPathname() + uri.getSearch() + uri.getHash();\n\t}\n\n\t/**\n\t * Extracts the path part of an url without hashbang.\n\t * @return {!string}\n\t * @static\n\t */\n\tstatic getUrlPathWithoutHash(url) {\n\t\tvar uri = new Uri(url);\n\t\treturn uri.getPathname() + uri.getSearch();\n\t}\n\n\t/**\n\t * Extracts the path part of an url without hashbang and query search.\n\t * @return {!string}\n\t * @static\n\t */\n\tstatic getUrlPathWithoutHashAndSearch(url) {\n\t\tvar uri = new Uri(url);\n\t\treturn uri.getPathname();\n\t}\n\n\t/**\n\t * Checks if url is in the same browser current url excluding the hashbang.\n\t * @param  {!string} url\n\t * @return {boolean}\n\t * @static\n\t */\n\tstatic isCurrentBrowserPath(url) {\n\t\tif (url) {\n\t\t\tconst currentBrowserPath = this.getCurrentBrowserPathWithoutHash();\n\t\t\t// the getUrlPath will create a Uri and will normalize the path and\n\t\t\t// remove the trailling '/' for properly comparing paths.\n\t\t\treturn utils.getUrlPathWithoutHash(url) === this.getUrlPath(currentBrowserPath);\n\t\t}\n\t\treturn false;\n\t}\n\n\t/**\n\t * Returns true if HTML5 History api is supported.\n\t * @return {boolean}\n\t * @static\n\t */\n\tstatic isHtml5HistorySupported() {\n\t\treturn !!(globals.window.history && globals.window.history.pushState);\n\t}\n\n\t/**\n\t * Checks if a given url is a valid http(s) uri and returns the formed Uri\n\t * or false if the parsing failed\n\t * @return {Uri|boolean}\n\t * @static\n\t */\n\tstatic isWebUri(url) {\n\t\ttry {\n\t\t\treturn new Uri(url);\n\t\t} catch (err) {\n\t\t\tconsole.error(`${err.message} ${url}`);\n\t\t\treturn false;\n\t\t}\n\t}\n\n\t/**\n\t * Removes all attributes form node.\n\t * @return {void}\n\t * @static\n\t */\n\tstatic clearNodeAttributes(node) {\n\t\tArray.prototype.slice.call(node.attributes).forEach((attribute) => node.removeAttribute(attribute.name));\n\t}\n\n\t/**\n\t* Removes trailing slash in path.\n\t* @param {!string}\n\t* @return {string}\n\t*/\n\tstatic removePathTrailingSlash(path) {\n\t\tvar length = path ? path.length : 0;\n\t\tif (length > 1 && path[length - 1] === '/') {\n\t\t\tpath = path.substr(0, length - 1);\n\t\t}\n\t\treturn path;\n\t}\n}\n\nexport default utils;\n"
            },
            {
              "id": 4,
              "identifier": "external \"metal-uri\"",
              "name": "external \"metal-uri\"",
              "index": 3,
              "index2": 1,
              "size": 42,
              "cacheable": false,
              "built": false,
              "optional": false,
              "prefetched": false,
              "chunks": [
                0
              ],
              "assets": [],
              "issuer": "/Users/Liferay/trampo/senna.js/src/utils/utils.js",
              "issuerId": 3,
              "issuerName": "./src/utils/utils.js",
              "profile": {
                "factory": 0,
                "building": 1
              },
              "failed": false,
              "errors": 0,
              "warnings": 0,
              "reasons": [
                {
                  "moduleId": 3,
                  "moduleIdentifier": "/Users/Liferay/trampo/senna.js/src/utils/utils.js",
                  "module": "./src/utils/utils.js",
                  "moduleName": "./src/utils/utils.js",
                  "type": "harmony import",
                  "userRequest": "metal-uri",
                  "loc": "4:0-28"
                },
                {
                  "moduleId": 8,
                  "moduleIdentifier": "/Users/Liferay/trampo/senna.js/src/app/App.js",
                  "module": "./src/app/App.js",
                  "moduleName": "./src/app/App.js",
                  "type": "harmony import",
                  "userRequest": "metal-uri",
                  "loc": "12:0-28"
                },
                {
                  "moduleId": 10,
                  "moduleIdentifier": "/Users/Liferay/trampo/senna.js/src/screen/HtmlScreen.js",
                  "module": "./src/screen/HtmlScreen.js",
                  "moduleName": "./src/screen/HtmlScreen.js",
                  "type": "harmony import",
                  "userRequest": "metal-uri",
                  "loc": "10:0-28"
                },
                {
                  "moduleId": 11,
                  "moduleIdentifier": "/Users/Liferay/trampo/senna.js/src/screen/RequestScreen.js",
                  "module": "./src/screen/RequestScreen.js",
                  "moduleName": "./src/screen/RequestScreen.js",
                  "type": "harmony import",
                  "userRequest": "metal-uri",
                  "loc": "11:0-28"
                }
              ],
              "usedExports": [
                "default"
              ],
              "providedExports": null,
              "optimizationBailout": [],
              "depth": 2
            },
            {
              "id": 5,
              "identifier": "external \"metal-dom\"",
              "name": "external \"metal-dom\"",
              "index": 9,
              "index2": 5,
              "size": 42,
              "cacheable": false,
              "built": false,
              "optional": false,
              "prefetched": false,
              "chunks": [
                0
              ],
              "assets": [],
              "issuer": "/Users/Liferay/trampo/senna.js/src/app/App.js",
              "issuerId": 8,
              "issuerName": "./src/app/App.js",
              "profile": {
                "factory": 0,
                "building": 0
              },
              "failed": false,
              "errors": 0,
              "warnings": 0,
              "reasons": [
                {
                  "moduleId": 7,
                  "moduleIdentifier": "/Users/Liferay/trampo/senna.js/src/screen/Screen.js",
                  "module": "./src/screen/Screen.js",
                  "moduleName": "./src/screen/Screen.js",
                  "type": "harmony import",
                  "userRequest": "metal-dom",
                  "loc": "4:0-39"
                },
                {
                  "moduleId": 8,
                  "moduleIdentifier": "/Users/Liferay/trampo/senna.js/src/app/App.js",
                  "module": "./src/app/App.js",
                  "moduleName": "./src/app/App.js",
                  "type": "harmony import",
                  "userRequest": "metal-dom",
                  "loc": "3:0-75"
                },
                {
                  "moduleId": 9,
                  "moduleIdentifier": "/Users/Liferay/trampo/senna.js/src/surface/Surface.js",
                  "module": "./src/surface/Surface.js",
                  "moduleName": "./src/surface/Surface.js",
                  "type": "harmony import",
                  "userRequest": "metal-dom",
                  "loc": "5:0-65"
                },
                {
                  "moduleId": 10,
                  "moduleIdentifier": "/Users/Liferay/trampo/senna.js/src/screen/HtmlScreen.js",
                  "module": "./src/screen/HtmlScreen.js",
                  "moduleName": "./src/screen/HtmlScreen.js",
                  "type": "harmony import",
                  "userRequest": "metal-dom",
                  "loc": "4:0-93"
                }
              ],
              "usedExports": [
                "addClasses",
                "append",
                "buildFragment",
                "delegate",
                "exitDocument",
                "globalEval",
                "globalEvalStyles",
                "match",
                "on",
                "removeChildren",
                "removeClasses"
              ],
              "providedExports": null,
              "optimizationBailout": [],
              "depth": 2
            },
            {
              "id": 6,
              "identifier": "/Users/Liferay/trampo/senna.js/src/route/Route.js",
              "name": "./src/route/Route.js",
              "index": 13,
              "index2": 10,
              "size": 2185,
              "cacheable": true,
              "built": true,
              "optional": false,
              "prefetched": false,
              "chunks": [
                0
              ],
              "assets": [],
              "issuer": "/Users/Liferay/trampo/senna.js/src/senna.js",
              "issuerId": 13,
              "issuerName": "./src/senna.js",
              "profile": {
                "factory": 6,
                "building": 68,
                "dependencies": 0
              },
              "failed": false,
              "errors": 0,
              "warnings": 0,
              "reasons": [
                {
                  "moduleId": 8,
                  "moduleIdentifier": "/Users/Liferay/trampo/senna.js/src/app/App.js",
                  "module": "./src/app/App.js",
                  "moduleName": "./src/app/App.js",
                  "type": "harmony import",
                  "userRequest": "../route/Route",
                  "loc": "9:0-35"
                },
                {
                  "moduleId": 13,
                  "moduleIdentifier": "/Users/Liferay/trampo/senna.js/src/senna.js",
                  "module": "./src/senna.js",
                  "moduleName": "./src/senna.js",
                  "type": "harmony import",
                  "userRequest": "./route/Route",
                  "loc": "8:0-34"
                },
                {
                  "moduleId": 15,
                  "moduleIdentifier": "/Users/Liferay/trampo/senna.js/src/app/AppDataAttributeHandler.js",
                  "module": "./src/app/AppDataAttributeHandler.js",
                  "moduleName": "./src/app/AppDataAttributeHandler.js",
                  "type": "harmony import",
                  "userRequest": "../route/Route",
                  "loc": "8:0-35"
                }
              ],
              "usedExports": [
                "default"
              ],
              "providedExports": [
                "default"
              ],
              "optimizationBailout": [],
              "depth": 1,
              "source": "'use strict';\n\nimport { isDefAndNotNull, isFunction, isString } from 'metal';\nimport { extractData, parse, toRegex } from 'metal-path-parser';\n\nclass Route {\n\n\t/**\n\t * Route class.\n\t * @param {!string|RegExp|Function} path\n\t * @param {!Function} handler\n\t * @constructor\n\t */\n\tconstructor(path, handler) {\n\t\tif (!isDefAndNotNull(path)) {\n\t\t\tthrow new Error('Route path not specified.');\n\t\t}\n\t\tif (!isFunction(handler)) {\n\t\t\tthrow new Error('Route handler is not a function.');\n\t\t}\n\n\t\t/**\n\t\t * Defines the handler which will execute once a URL in the application\n\t\t * matches the path.\n\t\t * @type {!Function}\n\t\t * @protected\n\t\t */\n\t\tthis.handler = handler;\n\n\t\t/**\n\t\t * Defines the path which will trigger the route handler.\n\t\t * @type {!string|RegExp|Function}\n\t\t * @protected\n\t\t */\n\t\tthis.path = path;\n\t}\n\n\t/**\n\t* Builds parsed data (regex and tokens) for this route.\n\t* @return {!Object}\n\t* @protected\n\t*/\n\tbuildParsedData_() {\n\t\tif (!this.parsedData_) {\n\t\t\tvar tokens = parse(this.path);\n\t\t\tvar regex = toRegex(tokens);\n\t\t\tthis.parsedData_ = {\n\t\t\t\tregex,\n\t\t\t\ttokens\n\t\t\t};\n\t\t}\n\t\treturn this.parsedData_;\n\t}\n\n\t/**\n\t * Extracts param data from the given path, according to this route.\n\t * @param {string} path The url path to extract params from.\n\t * @return {Object} The extracted data, if the path matches this route, or\n\t *     null otherwise.\n\t */\n\textractParams(path) {\n\t\tif (isString(this.path)) {\n\t\t\treturn extractData(this.buildParsedData_().tokens, path);\n\t\t}\n\t\treturn {};\n\t}\n\n\t/**\n\t * Gets the route handler.\n\t * @return {!Function}\n\t */\n\tgetHandler() {\n\t\treturn this.handler;\n\t}\n\n\t/**\n\t * Gets the route path.\n\t * @return {!string|RegExp|Function}\n\t */\n\tgetPath() {\n\t\treturn this.path;\n\t}\n\n\t/**\n \t * Matches if the router can handle the tested path.\n \t * @param {!string} value Path to test (may contain the querystring part).\n\t * @return {boolean} Returns true if matches any route.\n\t */\n\tmatchesPath(value) {\n\t\tvar path = this.path;\n\n\t\tif (isFunction(path)) {\n\t\t\treturn path(value);\n\t\t}\n\t\tif (isString(path)) {\n\t\t\tpath = this.buildParsedData_().regex;\n\t\t}\n\t\tif (path instanceof RegExp) {\n\t\t\treturn value.search(path) > -1;\n\t\t}\n\n\t\treturn false;\n\t}\n\n}\n\nexport default Route;\n"
            },
            {
              "id": 7,
              "identifier": "/Users/Liferay/trampo/senna.js/src/screen/Screen.js",
              "name": "./src/screen/Screen.js",
              "index": 15,
              "index2": 12,
              "size": 5991,
              "cacheable": true,
              "built": true,
              "optional": false,
              "prefetched": false,
              "chunks": [
                0
              ],
              "assets": [],
              "issuer": "/Users/Liferay/trampo/senna.js/src/senna.js",
              "issuerId": 13,
              "issuerName": "./src/senna.js",
              "profile": {
                "factory": 6,
                "building": 66,
                "dependencies": 0
              },
              "failed": false,
              "errors": 0,
              "warnings": 0,
              "reasons": [
                {
                  "moduleId": 8,
                  "moduleIdentifier": "/Users/Liferay/trampo/senna.js/src/app/App.js",
                  "module": "./src/app/App.js",
                  "moduleName": "./src/app/App.js",
                  "type": "harmony import",
                  "userRequest": "../screen/Screen",
                  "loc": "10:0-38"
                },
                {
                  "moduleId": 11,
                  "moduleIdentifier": "/Users/Liferay/trampo/senna.js/src/screen/RequestScreen.js",
                  "module": "./src/screen/RequestScreen.js",
                  "moduleName": "./src/screen/RequestScreen.js",
                  "type": "harmony import",
                  "userRequest": "./Screen",
                  "loc": "10:0-30"
                },
                {
                  "moduleId": 13,
                  "moduleIdentifier": "/Users/Liferay/trampo/senna.js/src/senna.js",
                  "module": "./src/senna.js",
                  "moduleName": "./src/senna.js",
                  "type": "harmony import",
                  "userRequest": "./screen/Screen",
                  "loc": "9:0-37"
                }
              ],
              "usedExports": [
                "default"
              ],
              "providedExports": [
                "default"
              ],
              "optimizationBailout": [],
              "depth": 1,
              "source": "'use strict';\n\nimport { getUid } from 'metal';\nimport { globalEval } from 'metal-dom';\nimport Cacheable from '../cacheable/Cacheable';\nimport CancellablePromise from 'metal-promise';\n\nclass Screen extends Cacheable {\n\n\t/**\n\t * Screen class is a special type of route handler that provides helper\n\t * utilities that adds lifecycle and methods to provide content to each\n\t * registered surface.\n\t * @constructor\n\t * @extends {Cacheable}\n\t */\n\tconstructor() {\n\t\tsuper();\n\n\t\t/**\n\t\t * Holds the screen id.\n\t\t * @type {string}\n\t\t * @protected\n\t\t */\n\t\tthis.id = this.makeId_(getUid());\n\n\t\t/**\n\t\t * Holds the screen title. Relevant when the page title should be\n\t\t * upadated when screen is rendered.\n\t\t * @type {?string=}\n\t\t * @default null\n\t\t * @protected\n\t\t */\n\t\tthis.title = null;\n\t}\n\n\t/**\n\t * Fires when the screen is active. Allows a screen to perform any setup\n\t * that requires its DOM to be visible. Lifecycle.\n\t */\n\tactivate() {\n\t\tconsole.log('Screen [' + this + '] activate');\n\t}\n\n\t/**\n\t * Gives the Screen a chance to cancel the navigation and stop itself from\n\t * being deactivated. Can be used, for example, if the screen has unsaved\n\t * state. Lifecycle. Clean-up should not be preformed here, since the\n\t * navigation may still be cancelled. Do clean-up in deactivate.\n\t * @return {boolean=} If returns true, the current screen is locked and the\n\t *     next nagivation interrupted.\n\t */\n\tbeforeDeactivate() {\n\t\tconsole.log('Screen [' + this + '] beforeDeactivate');\n\t}\n\n\t/**\n\t * Gives the Screen a chance format the path before history update.\n\t * @path {!string} path Navigation path.\n\t * @return {!string} Navigation path to use on history.\n\t */\n\tbeforeUpdateHistoryPath(path) {\n\t\treturn path;\n\t}\n\n\t/**\n\t * Gives the Screen a chance format the state before history update.\n\t * @path {!object} state History state.\n\t * @return {!object} History state to use on history.\n\t */\n\tbeforeUpdateHistoryState(state) {\n\t\treturn state;\n\t}\n\n\t/**\n\t * Allows a screen to do any cleanup necessary after it has been\n\t * deactivated, for example cancelling outstanding requests or stopping\n\t * timers. Lifecycle.\n\t */\n\tdeactivate() {\n\t\tconsole.log('Screen [' + this + '] deactivate');\n\t}\n\n\t/**\n\t * Dispose a screen, either after it is deactivated (in the case of a\n\t * non-cacheable view) or when the App is itself disposed for whatever\n\t * reason. Lifecycle.\n\t */\n\tdisposeInternal() {\n\t\tsuper.disposeInternal();\n\t\tconsole.log('Screen [' + this + '] dispose');\n\t}\n\n\t/**\n\t * Allows a screen to evaluate scripts before the element is made visible.\n\t * Lifecycle.\n\t * @param {!object} surfaces Map of surfaces to flip keyed by surface id.\n\t * @return {?CancellablePromise=} This can return a promise, which will\n\t *     pause the navigation until it is resolved.\n\t */\n\tevaluateScripts(surfaces) {\n\t\tObject.keys(surfaces).forEach(sId => {\n\t\t\tif (surfaces[sId].activeChild) {\n\t\t\t\tglobalEval.runScriptsInElement(surfaces[sId].activeChild);\n\t\t\t}\n\t\t});\n\t\treturn CancellablePromise.resolve();\n\t}\n\n\t/**\n\t * Allows a screen to evaluate styles before the element is made visible.\n\t * Lifecycle.\n\t * @param {!object} surfaces Map of surfaces to flip keyed by surface id.\n\t * @return {?CancellablePromise=} This can return a promise, which will\n\t *     pause the navigation until it is resolved.\n\t */\n\tevaluateStyles() {\n\t\treturn CancellablePromise.resolve();\n\t}\n\n\t/**\n\t * Allows a screen to perform any setup immediately before the element is\n\t * made visible. Lifecycle.\n\t * @param {!object} surfaces Map of surfaces to flip keyed by surface id.\n\t * @return {?CancellablePromise=} This can return a promise, which will pause the\n\t *     navigation until it is resolved.\n\t */\n\tflip(surfaces) {\n\t\tconsole.log('Screen [' + this + '] flip');\n\n\t\tvar transitions = [];\n\n\t\tObject.keys(surfaces).forEach(sId => {\n\t\t\tvar surface = surfaces[sId];\n\t\t\tvar deferred = surface.show(this.id);\n\t\t\ttransitions.push(deferred);\n\t\t});\n\n\t\treturn CancellablePromise.all(transitions);\n\t}\n\n\t/**\n\t * Gets the screen id.\n\t * @return {string}\n\t */\n\tgetId() {\n\t\treturn this.id;\n\t}\n\n\t/**\n\t * Returns the content for the given surface, or null if the surface isn't\n\t * used by this screen. This will be called when a screen is initially\n\t * constructed or, if a screen is non-cacheable, when navigated.\n\t * @param {!string} surfaceId The id of the surface DOM element.\n\t * @param {!Object} params Params extracted from the current path.\n\t * @return {?string|Element=} This can return a string or node representing\n\t *     the content of the surface. If returns falsy values surface default\n\t *     content is restored.\n\t */\n\tgetSurfaceContent() {\n\t\tconsole.log('Screen [' + this + '] getSurfaceContent');\n\t}\n\n\t/**\n\t * Gets the screen title.\n\t * @return {?string=}\n\t */\n\tgetTitle() {\n\t\treturn this.title;\n\t}\n\n\t/**\n\t * Returns all contents for the surfaces. This will pass the loaded content\n\t * to <code>Screen.load</code> with all information you\n\t * need to fulfill the surfaces. Lifecycle.\n\t * @param {!string=} path The requested path.\n\t * @return {!CancellablePromise} This can return a string representing the\n\t *     contents of the surfaces or a promise, which will pause the navigation\n\t *     until it is resolved. This is useful for loading async content.\n\t */\n\tload() {\n\t\tconsole.log('Screen [' + this + '] load');\n\t\treturn CancellablePromise.resolve();\n\t}\n\n\t/**\n\t * Makes the id for the screen.\n\t * @param {!string} id The screen id the content belongs too.\n\t * @return {string}\n\t * @private\n\t */\n\tmakeId_(id) {\n\t\treturn 'screen_' + id;\n\t}\n\n\t/**\n\t * Sets the screen id.\n\t * @param {!string} id\n\t */\n\tsetId(id) {\n\t\tthis.id = id;\n\t}\n\n\t/**\n\t * Sets the screen title.\n\t * @param {?string=} title\n\t */\n\tsetTitle(title) {\n\t\tthis.title = title;\n\t}\n\n\t/**\n\t * @return {string}\n\t */\n\ttoString() {\n\t\treturn this.id;\n\t}\n\n}\n\n/**\n * @param {*} object\n * @return {boolean} Whether a given instance implements\n * <code>Screen</code>.\n */\nScreen.isImplementedBy = function(object) {\n\treturn object instanceof Screen;\n};\n\nexport default Screen;\n"
            },
            {
              "id": 8,
              "identifier": "/Users/Liferay/trampo/senna.js/src/app/App.js",
              "name": "./src/app/App.js",
              "index": 8,
              "index2": 14,
              "size": 34624,
              "cacheable": true,
              "built": true,
              "optional": false,
              "prefetched": false,
              "chunks": [
                0
              ],
              "assets": [],
              "issuer": "/Users/Liferay/trampo/senna.js/src/senna.js",
              "issuerId": 13,
              "issuerName": "./src/senna.js",
              "profile": {
                "factory": 6,
                "building": 47,
                "dependencies": 407
              },
              "failed": false,
              "errors": 0,
              "warnings": 0,
              "reasons": [
                {
                  "moduleId": 13,
                  "moduleIdentifier": "/Users/Liferay/trampo/senna.js/src/senna.js",
                  "module": "./src/senna.js",
                  "moduleName": "./src/senna.js",
                  "type": "harmony import",
                  "userRequest": "./app/App",
                  "loc": "5:0-28"
                },
                {
                  "moduleId": 15,
                  "moduleIdentifier": "/Users/Liferay/trampo/senna.js/src/app/AppDataAttributeHandler.js",
                  "module": "./src/app/AppDataAttributeHandler.js",
                  "moduleName": "./src/app/AppDataAttributeHandler.js",
                  "type": "harmony import",
                  "userRequest": "./App",
                  "loc": "6:0-24"
                }
              ],
              "usedExports": [
                "default"
              ],
              "providedExports": [
                "default"
              ],
              "optimizationBailout": [],
              "depth": 1,
              "source": "'use strict';\n\nimport { addClasses, delegate, match, on, removeClasses } from 'metal-dom';\nimport { array, async, isDefAndNotNull, isString } from 'metal';\nimport { EventEmitter, EventHandler } from 'metal-events';\nimport CancellablePromise from 'metal-promise';\nimport debounce from 'metal-debounce';\nimport globals from '../globals/globals';\nimport Route from '../route/Route';\nimport Screen from '../screen/Screen';\nimport Surface from '../surface/Surface';\nimport Uri from 'metal-uri';\nimport utils from '../utils/utils';\n\nclass App extends EventEmitter {\n\n\t/**\n\t * App class that handle routes and screens lifecycle.\n\t * @constructor\n\t * @extends {EventEmitter}\n\t */\n\tconstructor() {\n\t\tsuper();\n\n\t\t/**\n\t\t * Holds the active screen.\n\t\t * @type {?Screen}\n\t\t * @protected\n\t\t */\n\t\tthis.activeScreen = null;\n\n\t\t/**\n\t\t * Holds the active path containing the query parameters.\n\t\t * @type {?string}\n\t\t * @protected\n\t\t */\n\t\tthis.activePath = null;\n\n\t\t/**\n\t\t * Allows prevent navigate from dom prevented event.\n\t\t * @type {boolean}\n\t\t * @default true\n\t\t * @protected\n\t\t */\n\t\tthis.allowPreventNavigate = true;\n\n\t\t/**\n\t\t * Holds link base path.\n\t\t * @type {!string}\n\t\t * @default ''\n\t\t * @protected\n\t\t */\n\t\tthis.basePath = '';\n\n\t\t/**\n\t\t * Holds the value of the browser path before a navigation is performed.\n\t\t * @type {!string}\n\t\t * @default the current browser path.\n\t\t * @protected\n\t\t */\n\t\tthis.browserPathBeforeNavigate = utils.getCurrentBrowserPathWithoutHash();\n\n\t\t/**\n\t\t * Captures scroll position from scroll event.\n\t\t * @type {!boolean}\n\t\t * @default true\n\t\t * @protected\n\t\t */\n\t\tthis.captureScrollPositionFromScrollEvent = true;\n\n\t\t/**\n\t\t * Holds the default page title.\n\t\t * @type {string}\n\t\t * @default null\n\t\t * @protected\n\t\t */\n\t\tthis.defaultTitle = globals.document.title;\n\n\t\t/**\n\t\t * Holds the form selector to define forms that are routed.\n\t\t * @type {!string}\n\t\t * @default form[enctype=\"multipart/form-data\"]:not([data-senna-off])\n\t\t * @protected\n\t\t */\n\t\tthis.formSelector = 'form[enctype=\"multipart/form-data\"]:not([data-senna-off])';\n\n\t\t/**\n\t\t * When enabled, the route matching ignores query string from the path.\n\t\t * @type {boolean}\n\t\t * @default false\n\t\t * @protected\n\t\t */\n\t\tthis.ignoreQueryStringFromRoutePath = false;\n\n\t\t/**\n\t\t * Holds the link selector to define links that are routed.\n\t\t * @type {!string}\n\t\t * @default a:not([data-senna-off])\n\t\t * @protected\n\t\t */\n\t\tthis.linkSelector = 'a:not([data-senna-off]):not([target=\"_blank\"])';\n\n\t\t/**\n\t\t * Holds the loading css class.\n\t\t * @type {!string}\n\t\t * @default senna-loading\n\t\t * @protected\n\t\t */\n\t\tthis.loadingCssClass = 'senna-loading';\n\n\t\t/**\n\t\t * Using the History API to manage your URLs is awesome and, as it happens,\n\t\t * a crucial feature of good web apps. One of its downsides, however, is\n\t\t * that scroll positions are stored and then, more importantly, restored\n\t\t * whenever you traverse the history. This often means unsightly jumps as\n\t\t * the scroll position changes automatically, and especially so if your app\n\t\t * does transitions, or changes the contents of the page in any way.\n\t\t * Ultimately this leads to an horrible user experience. The good news is,\n\t\t * however, that there’s a potential fix: history.scrollRestoration.\n\t\t * https://developers.google.com/web/updates/2015/09/history-api-scroll-restoration\n\t\t * @type {boolean}\n\t\t * @protected\n\t\t */\n\t\tthis.nativeScrollRestorationSupported = ('scrollRestoration' in globals.window.history);\n\n\t\t/**\n\t\t * When set to true there is a pendingNavigate that has not yet been\n\t\t * resolved or rejected.\n\t\t * @type {boolean}\n\t\t * @default false\n\t\t * @protected\n\t\t */\n\t\tthis.isNavigationPending = false;\n\n\t\t/**\n\t\t * Holds a deferred with the current navigation.\n\t\t * @type {?CancellablePromise}\n\t\t * @default null\n\t\t * @protected\n\t\t */\n\t\tthis.pendingNavigate = null;\n\n\t\t/**\n\t\t * Holds the window horizontal scroll position when the navigation using\n\t\t * back or forward happens to be restored after the surfaces are updated.\n\t\t * @type {!Number}\n\t\t * @default 0\n\t\t * @protected\n\t\t */\n\t\tthis.popstateScrollLeft = 0;\n\n\t\t/**\n\t\t * Holds the window vertical scroll position when the navigation using\n\t\t * back or forward happens to be restored after the surfaces are updated.\n\t\t * @type {!Number}\n\t\t * @default 0\n\t\t * @protected\n\t\t */\n\t\tthis.popstateScrollTop = 0;\n\n\t\t/**\n\t\t * Holds the redirect path containing the query parameters.\n\t\t * @type {?string}\n\t\t * @protected\n\t\t */\n\t\tthis.redirectPath = null;\n\n\t\t/**\n\t\t * Holds the screen routes configuration.\n\t\t * @type {?Array}\n\t\t * @default []\n\t\t * @protected\n\t\t */\n\t\tthis.routes = [];\n\n\t\t/**\n\t\t * Maps the screen instances by the url containing the parameters.\n\t\t * @type {?Object}\n\t\t * @default {}\n\t\t * @protected\n\t\t */\n\t\tthis.screens = {};\n\n\t\t/**\n\t\t * When set to true the first erroneous popstate fired on page load will be\n\t\t * ignored, only if <code>globals.window.history.state</code> is also\n\t\t * <code>null</code>.\n\t\t * @type {boolean}\n\t\t * @default false\n\t\t * @protected\n\t\t */\n\t\tthis.skipLoadPopstate = false;\n\n\t\t/**\n\t\t * Maps that index the surfaces instances by the surface id.\n\t\t * @type {?Object}\n\t\t * @default {}\n\t\t * @protected\n\t\t */\n\t\tthis.surfaces = {};\n\n\t\t/**\n\t\t * When set to true, moves the scroll position after popstate, or to the\n\t\t * top of the viewport for new navigation. If false, the browser will\n\t\t * take care of scroll restoration.\n\t\t * @type {!boolean}\n\t\t * @default true\n\t\t * @protected\n\t\t */\n\t\tthis.updateScrollPosition = true;\n\n\t\tthis.appEventHandlers_ = new EventHandler();\n\n\t\tthis.appEventHandlers_.add(\n\t\t\ton(globals.window, 'scroll', debounce(this.onScroll_.bind(this), 100)),\n\t\t\ton(globals.window, 'load', this.onLoad_.bind(this)),\n\t\t\ton(globals.window, 'popstate', this.onPopstate_.bind(this))\n\t\t);\n\n\t\tthis.on('startNavigate', this.onStartNavigate_);\n\t\tthis.on('beforeNavigate', this.onBeforeNavigate_);\n\t\tthis.on('beforeNavigate', this.onBeforeNavigateDefault_, true);\n\t\tthis.on('beforeUnload', this.onBeforeUnloadDefault_);\n\n\t\tthis.setLinkSelector(this.linkSelector);\n\t\tthis.setFormSelector(this.formSelector);\n\n\t\tthis.maybeOverloadBeforeUnload_();\n\t}\n\n\t/**\n\t * Adds one or more screens to the application.\n\t *\n\t * Example:\n\t *\n\t * <code>\n\t *   app.addRoutes({ path: '/foo', handler: FooScreen });\n\t *   or\n\t *   app.addRoutes([{ path: '/foo', handler: function(route) { return new FooScreen(); } }]);\n\t * </code>\n\t *\n\t * @param {Object} or {Array} routes Single object or an array of object.\n\t *     Each object should contain <code>path</code> and <code>screen</code>.\n\t *     The <code>path</code> should be a string or a regex that maps the\n\t *     navigation route to a screen class definition (not an instance), e.g:\n\t *         <code>{ path: \"/home:param1\", handler: MyScreen }</code>\n\t *         <code>{ path: /foo.+/, handler: MyScreen }</code>\n\t * @chainable\n\t */\n\taddRoutes(routes) {\n\t\tif (!Array.isArray(routes)) {\n\t\t\troutes = [routes];\n\t\t}\n\t\troutes.forEach((route) => {\n\t\t\tif (!(route instanceof Route)) {\n\t\t\t\troute = new Route(route.path, route.handler);\n\t\t\t}\n\t\t\tthis.routes.push(route);\n\t\t});\n\t\treturn this;\n\t}\n\n\t/**\n\t * Adds one or more surfaces to the application.\n\t * @param {Surface|String|Array.<Surface|String>} surfaces\n\t *     Surface element id or surface instance. You can also pass an Array\n\t *     whichcontains surface instances or id. In case of ID, these should be\n\t *     the id of surface element.\n\t * @chainable\n\t */\n\taddSurfaces(surfaces) {\n\t\tif (!Array.isArray(surfaces)) {\n\t\t\tsurfaces = [surfaces];\n\t\t}\n\t\tsurfaces.forEach((surface) => {\n\t\t\tif (isString(surface)) {\n\t\t\t\tsurface = new Surface(surface);\n\t\t\t}\n\t\t\tthis.surfaces[surface.getId()] = surface;\n\t\t});\n\t\treturn this;\n\t}\n\n\t/**\n\t * Returns if can navigate to path.\n\t * @param {!string} url\n\t * @return {boolean}\n\t */\n\tcanNavigate(url) {\n\t\tconst uri = utils.isWebUri(url);\n\n\t\tif (!uri) {\n\t\t\treturn false;\n\t\t}\n\n\t\tconst path = utils.getUrlPath(url);\n\n\t\tif (!this.isLinkSameOrigin_(uri.getHostname())) {\n\t\t\tconsole.log('Offsite link clicked');\n\t\t\treturn false;\n\t\t}\n\t\tif (!this.isSameBasePath_(path)) {\n\t\t\tconsole.log('Link clicked outside app\\'s base path');\n\t\t\treturn false;\n\t\t}\n\t\t// Prevents navigation if it's a hash change on the same url.\n\t\tif (uri.getHash() && utils.isCurrentBrowserPath(path)) {\n\t\t\treturn false;\n\t\t}\n\t\tif (!this.findRoute(path)) {\n\t\t\tconsole.log('No route for ' + path);\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t}\n\n\t/**\n\t * Clear screens cache.\n\t * @chainable\n\t */\n\tclearScreensCache() {\n\t\tObject.keys(this.screens).forEach((path) => {\n\t\t\tif (path === this.activePath) {\n\t\t\t\tthis.activeScreen.clearCache();\n\t\t\t} else {\n\t\t\t\tthis.removeScreen(path);\n\t\t\t}\n\t\t});\n\t}\n\n\t/**\n\t * Retrieves or create a screen instance to a path.\n\t * @param {!string} path Path containing the querystring part.\n\t * @return {Screen}\n\t */\n\tcreateScreenInstance(path, route) {\n\t\tif (!this.pendingNavigate && path === this.activePath) {\n\t\t\tconsole.log('Already at destination, refresh navigation');\n\t\t\treturn this.activeScreen;\n\t\t}\n\t\t/* jshint newcap: false */\n\t\tvar screen = this.screens[path];\n\t\tif (!screen) {\n\t\t\tvar handler = route.getHandler();\n\t\t\tif (handler === Screen || Screen.isImplementedBy(handler.prototype)) {\n\t\t\t\tscreen = new handler();\n\t\t\t} else {\n\t\t\t\tscreen = handler(route) || new Screen();\n\t\t\t}\n\t\t\tconsole.log('Create screen for [' + path + '] [' + screen + ']');\n\t\t}\n\t\treturn screen;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tdisposeInternal() {\n\t\tif (this.activeScreen) {\n\t\t\tthis.removeScreen(this.activePath);\n\t\t}\n\t\tthis.clearScreensCache();\n\t\tthis.formEventHandler_.removeListener();\n\t\tthis.linkEventHandler_.removeListener();\n\t\tthis.appEventHandlers_.removeAllListeners();\n\t\tsuper.disposeInternal();\n\t}\n\n\t/**\n\t * Dispatches to the first route handler that matches the current path, if\n\t * any.\n\t * @return {CancellablePromise} Returns a pending request cancellable promise.\n\t */\n\tdispatch() {\n\t\treturn this.navigate(utils.getCurrentBrowserPath(), true);\n\t}\n\n\t/**\n\t * Starts navigation to a path.\n\t * @param {!string} path Path containing the querystring part.\n\t * @param {boolean=} opt_replaceHistory Replaces browser history.\n\t * @return {CancellablePromise} Returns a pending request cancellable promise.\n\t */\n\tdoNavigate_(path, opt_replaceHistory) {\n\t\tif (this.activeScreen && this.activeScreen.beforeDeactivate()) {\n\t\t\tthis.pendingNavigate = CancellablePromise.reject(new CancellablePromise.CancellationError('Cancelled by active screen'));\n\t\t\treturn this.pendingNavigate;\n\t\t}\n\n\t\tvar route = this.findRoute(path);\n\t\tif (!route) {\n\t\t\tthis.pendingNavigate = CancellablePromise.reject(new CancellablePromise.CancellationError('No route for ' + path));\n\t\t\treturn this.pendingNavigate;\n\t\t}\n\n\t\tconsole.log('Navigate to [' + path + ']');\n\n\t\tthis.stopPendingNavigate_();\n\t\tthis.isNavigationPending = true;\n\n\t\tvar nextScreen = this.createScreenInstance(path, route);\n\n\t\treturn nextScreen.load(path)\n\t\t\t.then(() => {\n\t\t\t\tif (this.activeScreen) {\n\t\t\t\t\tthis.activeScreen.deactivate();\n\t\t\t\t}\n\t\t\t\tthis.prepareNavigateHistory_(path, nextScreen, opt_replaceHistory);\n\t\t\t\tthis.prepareNavigateSurfaces_(\n\t\t\t\t\tnextScreen,\n\t\t\t\t\tthis.surfaces,\n\t\t\t\t\tthis.extractParams(route, path)\n\t\t\t\t);\n\t\t\t})\n\t\t\t.then(() => nextScreen.evaluateStyles(this.surfaces))\n\t\t\t.then(() => nextScreen.flip(this.surfaces))\n\t\t\t.then(() => nextScreen.evaluateScripts(this.surfaces))\n\t\t\t.then(() => this.maybeUpdateScrollPositionState_())\n\t\t\t.then(() => this.syncScrollPositionSyncThenAsync_())\n\t\t\t.then(() => this.finalizeNavigate_(path, nextScreen))\n\t\t\t.then(() => this.maybeOverloadBeforeUnload_())\n\t\t\t.catch((reason) => {\n\t\t\t\tthis.isNavigationPending = false;\n\t\t\t\tthis.handleNavigateError_(path, nextScreen, reason);\n\t\t\t\tthrow reason;\n\t\t\t});\n\t}\n\n\t/**\n\t * Extracts params according to the given path and route.\n\t * @param {!Route} route\n\t * @param {string} path\n\t * @param {!Object}\n\t */\n\textractParams(route, path) {\n\t\treturn route.extractParams(this.getRoutePath(path));\n\t}\n\n\t/**\n\t * Finalizes a screen navigation.\n\t * @param {!string} path Path containing the querystring part.\n\t * @param {!Screen} nextScreen\n\t * @protected\n\t */\n\tfinalizeNavigate_(path, nextScreen) {\n\t\tnextScreen.activate();\n\n\t\tif (this.activeScreen && !this.activeScreen.isCacheable()) {\n\t\t\tif (this.activeScreen !== nextScreen) {\n\t\t\t\tthis.removeScreen(this.activePath);\n\t\t\t}\n\t\t}\n\n\t\tthis.activePath = path;\n\t\tthis.activeScreen = nextScreen;\n\t\tthis.browserPathBeforeNavigate = utils.getCurrentBrowserPathWithoutHash();\n\t\tthis.screens[path] = nextScreen;\n\t\tthis.isNavigationPending = false;\n\t\tthis.pendingNavigate = null;\n\t\tglobals.capturedFormElement = null;\n\t\tglobals.capturedFormButtonElement = null;\n\t\tconsole.log('Navigation done');\n\t}\n\n\t/**\n\t * Finds a route for the test path. Returns true if matches has a route,\n\t * otherwise returns null.\n\t * @param {!string} path Path containing the querystring part.\n\t * @return {?Object} Route handler if match any or <code>null</code> if the\n\t *     path is the same as the current url and the path contains a fragment.\n\t */\n\tfindRoute(path) {\n\t\tpath = this.getRoutePath(path);\n\t\tfor (var i = 0; i < this.routes.length; i++) {\n\t\t\tvar route = this.routes[i];\n\t\t\tif (route.matchesPath(path)) {\n\t\t\t\treturn route;\n\t\t\t}\n\t\t}\n\n\t\treturn null;\n\t}\n\n\t/**\n\t * Gets allow prevent navigate.\n\t * @return {boolean}\n\t */\n\tgetAllowPreventNavigate() {\n\t\treturn this.allowPreventNavigate;\n\t}\n\n\t/**\n\t * Gets link base path.\n\t * @return {!string}\n\t */\n\tgetBasePath() {\n\t\treturn this.basePath;\n\t}\n\n\t/**\n\t * Gets the default page title.\n\t * @return {string} defaultTitle\n\t */\n\tgetDefaultTitle() {\n\t\treturn this.defaultTitle;\n\t}\n\n\t/**\n\t * Gets the form selector.\n\t * @return {!string}\n\t */\n\tgetFormSelector() {\n\t\treturn this.formSelector;\n\t}\n\n\t/**\n\t * Check if route matching is ignoring query string from the route path.\n\t * @return {boolean}\n\t */\n\tgetIgnoreQueryStringFromRoutePath() {\n\t\treturn this.ignoreQueryStringFromRoutePath;\n\t}\n\n\t/**\n\t * Gets the link selector.\n\t * @return {!string}\n\t */\n\tgetLinkSelector() {\n\t\treturn this.linkSelector;\n\t}\n\n\t/**\n\t * Gets the loading css class.\n\t * @return {!string}\n\t */\n\tgetLoadingCssClass() {\n\t\treturn this.loadingCssClass;\n\t}\n\n\t/**\n\t * Returns the given path formatted to be matched by a route. This will,\n\t * for example, remove the base path from it, but make sure it will end\n\t * with a '/'.\n\t * @param {string} path\n\t * @return {string}\n\t */\n\tgetRoutePath(path) {\n\t\tif (this.getIgnoreQueryStringFromRoutePath()) {\n\t\t\tpath = utils.getUrlPathWithoutHashAndSearch(path);\n\t\t\treturn utils.getUrlPathWithoutHashAndSearch(path.substr(this.basePath.length));\n\t\t}\n\n\t\tpath = utils.getUrlPathWithoutHash(path);\n\t\treturn utils.getUrlPathWithoutHash(path.substr(this.basePath.length));\n\t}\n\n\t/**\n\t * Gets the update scroll position value.\n\t * @return {boolean}\n\t */\n\tgetUpdateScrollPosition() {\n\t\treturn this.updateScrollPosition;\n\t}\n\n\t/**\n\t * Handle navigation error.\n\t * @param {!string} path Path containing the querystring part.\n\t * @param {!Screen} nextScreen\n\t * @param {!Error} error\n\t * @protected\n\t */\n\thandleNavigateError_(path, nextScreen, error) {\n\t\tconsole.log('Navigation error for [' + nextScreen + '] (' + error + ')');\n\t\tthis.emit('navigationError', {\n\t\t\terror,\n\t\t\tnextScreen,\n\t\t\tpath\n\t\t});\n\t\tif (!utils.isCurrentBrowserPath(path)) {\n\t\t\tif (this.isNavigationPending && this.pendingNavigate) {\n\t\t\t\tthis.pendingNavigate.thenAlways(() => this.removeScreen(path), this);\n\t\t\t} else {\n\t\t\t\tthis.removeScreen(path);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Checks if app has routes.\n\t * @return {boolean}\n\t */\n\thasRoutes() {\n\t\treturn this.routes.length > 0;\n\t}\n\n\t/**\n\t * Tests if hostname is an offsite link.\n\t * @param {!string} hostname Link hostname to compare with\n\t *     <code>globals.window.location.hostname</code>.\n\t * @return {boolean}\n\t * @protected\n\t */\n\tisLinkSameOrigin_(hostname) {\n\t\treturn hostname === globals.window.location.hostname;\n\t}\n\n\t/**\n\t * Tests if link element has the same app's base path.\n\t * @param {!string} path Link path containing the querystring part.\n\t * @return {boolean}\n\t * @protected\n\t */\n\tisSameBasePath_(path) {\n\t\treturn path.indexOf(this.basePath) === 0;\n\t}\n\n\t/**\n\t * Lock the document scroll in order to avoid the browser native back and\n\t * forward navigation to change the scroll position. In the end of\n\t * navigation lifecycle scroll is repositioned.\n\t * @protected\n\t */\n\tlockHistoryScrollPosition_() {\n\t\tvar state = globals.window.history.state;\n\t\tif (!state) {\n\t\t\treturn;\n\t\t}\n\t\t// Browsers are inconsistent when re-positioning the scroll history on\n\t\t// popstate. At some browsers, history scroll happens before popstate, then\n\t\t// lock the scroll on the last known position as soon as possible after the\n\t\t// current JS execution context and capture the current value. Some others,\n\t\t// history scroll happens after popstate, in this case, we bind an once\n\t\t// scroll event to lock the las known position. Lastly, the previous two\n\t\t// behaviors can happen even on the same browser, hence the race will decide\n\t\t// the winner.\n\t\tvar winner = false;\n\t\tvar switchScrollPositionRace = function() {\n\t\t\tglobals.document.removeEventListener('scroll', switchScrollPositionRace, false);\n\t\t\tif (!winner) {\n\t\t\t\tglobals.window.scrollTo(state.scrollLeft, state.scrollTop);\n\t\t\t\twinner = true;\n\t\t\t}\n\t\t};\n\t\tasync.nextTick(switchScrollPositionRace);\n\t\tglobals.document.addEventListener('scroll', switchScrollPositionRace, false);\n\t}\n\n\t/**\n\t * If supported by the browser, disables native scroll restoration and\n\t * stores current value.\n\t */\n\tmaybeDisableNativeScrollRestoration() {\n\t\tif (this.nativeScrollRestorationSupported) {\n\t\t\tthis.nativeScrollRestoration_ = globals.window.history.scrollRestoration;\n\t\t\tglobals.window.history.scrollRestoration = 'manual';\n\t\t}\n\t}\n\n\t/**\n\t * Maybe navigate to a path.\n\t * @param {string} href Information about the link's href.\n\t * @param {Event} event Dom event that initiated the navigation.\n\t */\n\tmaybeNavigate_(href, event) {\n\t\tif (!this.canNavigate(href)) {\n\t\t\treturn;\n\t\t}\n\n\t\tglobals.capturedFormElement = event.capturedFormElement;\n\t\tglobals.capturedFormButtonElement = event.capturedFormButtonElement;\n\n\t\tvar navigateFailed = false;\n\t\ttry {\n\t\t\tthis.navigate(utils.getUrlPath(href), false, event);\n\t\t} catch (err) {\n\t\t\t// Do not prevent link navigation in case some synchronous error occurs\n\t\t\tnavigateFailed = true;\n\t\t}\n\n\t\tif (!navigateFailed) {\n\t\t\tevent.preventDefault();\n\t\t}\n\t}\n\n\t/**\n\t * Checks whether the onbeforeunload global event handler is overloaded\n\t * by client code. If so, it replaces with a function that halts the normal\n\t * event flow in relation with the client onbeforeunload function.\n\t * This can be in most part used to prematurely terminate navigation to other pages\n\t * according to the given constrait(s). \n\t * @protected \n\t */\n\tmaybeOverloadBeforeUnload_() {\n\t\tif ('function' === typeof window.onbeforeunload) {\n\t\t\twindow._onbeforeunload = window.onbeforeunload;\n\n\t\t\twindow.onbeforeunload = event => {\n\t\t\t\tthis.emit('beforeUnload', event);\n\t\t\t\tif (event && event.defaultPrevented) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t};\n\n\t\t\t// mark the updated handler due unwanted recursion \n\t\t\twindow.onbeforeunload._overloaded = true;\n\t\t}\n\t}\n\n\t/**\n\t * Maybe reposition scroll to hashed anchor.\n\t */\n\tmaybeRepositionScrollToHashedAnchor() {\n\t\tconst hash = globals.window.location.hash;\n\t\tif (hash) {\n\t\t\tlet anchorElement = globals.document.getElementById(hash.substring(1));\n\t\t\tif (anchorElement) {\n\t\t\t\tconst {offsetLeft, offsetTop} = utils.getNodeOffset(anchorElement);\n\t\t\t\tglobals.window.scrollTo(offsetLeft, offsetTop);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * If supported by the browser, restores native scroll restoration to the\n\t * value captured by `maybeDisableNativeScrollRestoration`.\n\t */\n\tmaybeRestoreNativeScrollRestoration() {\n\t\tif (this.nativeScrollRestorationSupported && this.nativeScrollRestoration_) {\n\t\t\tglobals.window.history.scrollRestoration = this.nativeScrollRestoration_;\n\t\t}\n\t}\n\n\t/**\n\t * Maybe restore redirected path hash in case both the current path and\n\t * the given path are the same.\n\t * @param {!string} path Path before navigation.\n\t * @param {!string} redirectPath Path after navigation.\n\t * @param {!string} hash Hash to be added to the path.\n\t * @return {!string} Returns the path with the hash restored.\n\t */\n\tmaybeRestoreRedirectPathHash_(path, redirectPath, hash) {\n\t\tif (redirectPath === utils.getUrlPathWithoutHash(path)) {\n\t\t\treturn redirectPath + hash;\n\t\t}\n\t\treturn redirectPath;\n\t}\n\n\t/**\n\t * Maybe update scroll position in history state to anchor on path.\n\t * @param {!string} path Path containing anchor\n\t */\n\tmaybeUpdateScrollPositionState_() {\n\t\tvar hash = globals.window.location.hash;\n\t\tvar anchorElement = globals.document.getElementById(hash.substring(1));\n\t\tif (anchorElement) {\n\t\t\tconst {offsetLeft, offsetTop} = utils.getNodeOffset(anchorElement);\n\t\t\tthis.saveHistoryCurrentPageScrollPosition_(offsetTop, offsetLeft);\n\t\t}\n\t}\n\n\t/**\n\t * Navigates to the specified path if there is a route handler that matches.\n\t * @param {!string} path Path to navigate containing the base path.\n\t * @param {boolean=} opt_replaceHistory Replaces browser history.\n\t * @param {Event=} event Optional event object that triggered the navigation.\n\t * @return {CancellablePromise} Returns a pending request cancellable promise.\n\t */\n\tnavigate(path, opt_replaceHistory, opt_event) {\n\t\tif (!utils.isHtml5HistorySupported()) {\n\t\t\tthrow new Error('HTML5 History is not supported. Senna will not intercept navigation.');\n\t\t}\n\n\t\t// When reloading the same path do replaceState instead of pushState to\n\t\t// avoid polluting history with states with the same path.\n\t\tif (path === this.activePath) {\n\t\t\topt_replaceHistory = true;\n\t\t}\n\n\t\tthis.emit('beforeNavigate', {\n\t\t\tevent: opt_event,\n\t\t\tpath: path,\n\t\t\treplaceHistory: !!opt_replaceHistory\n\t\t});\n\n\t\treturn this.pendingNavigate;\n\t}\n\n\t/**\n\t * Befores navigation to a path.\n\t * @param {!Event} event Event facade containing <code>path</code> and\n\t *     <code>replaceHistory</code>.\n\t * @protected\n\t */\n\tonBeforeNavigate_(event) {\n\t\tif (globals.capturedFormElement) {\n\t\t\tevent.form = globals.capturedFormElement;\n\t\t}\n\t}\n\n\t/**\n\t * Befores navigation to a path. Runs after external listeners.\n\t * @param {!Event} event Event facade containing <code>path</code> and\n\t *     <code>replaceHistory</code>.\n\t * @protected\n\t */\n\tonBeforeNavigateDefault_(event) {\n\t\tif (this.pendingNavigate) {\n\t\t\tif (this.pendingNavigate.path === event.path) {\n\t\t\t\tconsole.log('Waiting...');\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t\tthis.emit('beforeUnload', event);\n\n\t\tthis.emit('startNavigate', {\n\t\t\tform: event.form,\n\t\t\tpath: event.path,\n\t\t\treplaceHistory: event.replaceHistory\n\t\t});\n\t}\n\n\t/**\n\t * Custom event handler that executes the original listener that has been\n\t * added by the client code and terminates the navigation accordingly.\n\t * @param {!Event} event original Event facade.\n\t * @protected\n\t */\n\tonBeforeUnloadDefault_(event) {\n\t\tvar func = window._onbeforeunload;\n\t\tif (func && !func._overloaded && func()) {\n\t\t\tevent.preventDefault();\n\t\t}\n\t}\n\n\t/**\n\t * Intercepts document clicks and test link elements in order to decide\n\t * whether Surface app can navigate.\n\t * @param {!Event} event Event facade\n\t * @protected\n\t */\n\tonDocClickDelegate_(event) {\n\t\tif (event.altKey || event.ctrlKey || event.metaKey || event.shiftKey || event.button) {\n\t\t\tconsole.log('Navigate aborted, invalid mouse button or modifier key pressed.');\n\t\t\treturn;\n\t\t}\n\t\tthis.maybeNavigate_(event.delegateTarget.href, event);\n\t}\n\n\t/**\n\t * Intercepts document form submits and test action path in order to decide\n\t * whether Surface app can navigate.\n\t * @param {!Event} event Event facade\n\t * @protected\n\t */\n\tonDocSubmitDelegate_(event) {\n\t\tvar form = event.delegateTarget;\n\t\tif (form.method === 'get') {\n\t\t\tconsole.log('GET method not supported');\n\t\t\treturn;\n\t\t}\n\t\tevent.capturedFormElement = form;\n\t\tconst buttonSelector = 'button:not([type]),button[type=submit],input[type=submit]';\n\t\tif (match(globals.document.activeElement, buttonSelector)) {\n\t\t\tevent.capturedFormButtonElement = globals.document.activeElement;\n\t\t} else {\n\t\t\tevent.capturedFormButtonElement = form.querySelector(buttonSelector);\n\t\t}\n\t\tthis.maybeNavigate_(form.action, event);\n\t}\n\n\t/**\n\t * Listens to the window's load event in order to avoid issues with some browsers\n\t * that trigger popstate calls on the first load. For more information see\n\t * http://stackoverflow.com/questions/6421769/popstate-on-pages-load-in-chrome.\n\t * @protected\n\t */\n\tonLoad_() {\n\t\tthis.skipLoadPopstate = true;\n\t\tsetTimeout(() => {\n\t\t\t// The timeout ensures that popstate events will be unblocked right\n\t\t\t// after the load event occured, but not in the same event-loop cycle.\n\t\t\tthis.skipLoadPopstate = false;\n\t\t}, 0);\n\t\t// Try to reposition scroll to the hashed anchor when page loads.\n\t\tthis.maybeRepositionScrollToHashedAnchor();\n\t}\n\n\t/**\n\t * Handles browser history changes and fires app's navigation if the state\n\t * belows to us. If we detect a popstate and the state is <code>null</code>,\n\t * assume it is navigating to an external page or to a page we don't have\n\t * route, then <code>globals.window.location.reload()</code> is invoked in order to\n\t * reload the content to the current url.\n\t * @param {!Event} event Event facade\n\t * @protected\n\t */\n\tonPopstate_(event) {\n\t\tif (this.skipLoadPopstate) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Do not navigate if the popstate was triggered by a hash change.\n\t\tif (utils.isCurrentBrowserPath(this.browserPathBeforeNavigate)) {\n\t\t\tthis.maybeRepositionScrollToHashedAnchor();\n\t\t\treturn;\n\t\t}\n\n\t\tvar state = event.state;\n\n\t\tif (!state) {\n\t\t\tif (globals.window.location.hash) {\n\t\t\t\t// If senna is on an redirect path and a hash popstate happens\n\t\t\t\t// to a different url, reload the browser. This behavior doesn't\n\t\t\t\t// require senna to route hashed links and is closer to native\n\t\t\t\t// browser behavior.\n\t\t\t\tif (this.redirectPath && !utils.isCurrentBrowserPath(this.redirectPath)) {\n\t\t\t\t\tthis.reloadPage();\n\t\t\t\t}\n\t\t\t\t// Always try to reposition scroll to the hashed anchor when\n\t\t\t\t// hash popstate happens.\n\t\t\t\tthis.maybeRepositionScrollToHashedAnchor();\n\t\t\t} else {\n\t\t\t\tthis.reloadPage();\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\n\t\tif (state.senna) {\n\t\t\tconsole.log('History navigation to [' + state.path + ']');\n\t\t\tthis.popstateScrollTop = state.scrollTop;\n\t\t\tthis.popstateScrollLeft = state.scrollLeft;\n\t\t\tif (!this.nativeScrollRestorationSupported) {\n\t\t\t\tthis.lockHistoryScrollPosition_();\n\t\t\t}\n\t\t\tthis.navigate(state.path, true);\n\t\t}\n\t}\n\n\t/**\n\t * Listens document scroll changes in order to capture the possible lock\n\t * scroll position for history scrolling.\n\t * @protected\n\t */\n\tonScroll_() {\n\t\tif (this.captureScrollPositionFromScrollEvent) {\n\t\t\tthis.saveHistoryCurrentPageScrollPosition_(globals.window.pageYOffset, globals.window.pageXOffset);\n\t\t}\n\t}\n\n\t/**\n\t * Starts navigation to a path.\n\t * @param {!Event} event Event facade containing <code>path</code> and\n\t *     <code>replaceHistory</code>.\n\t * @protected\n\t */\n\tonStartNavigate_(event) {\n\t\tthis.maybeDisableNativeScrollRestoration();\n\t\tthis.captureScrollPositionFromScrollEvent = false;\n\t\taddClasses(globals.document.documentElement, this.loadingCssClass);\n\n\t\tvar endNavigatePayload = {\n\t\t\tform: event.form,\n\t\t\tpath: event.path\n\t\t};\n\n\t\tthis.pendingNavigate = this.doNavigate_(event.path, event.replaceHistory)\n\t\t\t.catch((reason) => {\n\t\t\t\tendNavigatePayload.error = reason;\n\t\t\t\tthrow reason;\n\t\t\t})\n\t\t\t.thenAlways(() => {\n\t\t\t\tif (!this.pendingNavigate) {\n\t\t\t\t\tremoveClasses(globals.document.documentElement, this.loadingCssClass);\n\t\t\t\t\tthis.maybeRestoreNativeScrollRestoration();\n\t\t\t\t\tthis.captureScrollPositionFromScrollEvent = true;\n\t\t\t\t}\n\t\t\t\tthis.emit('endNavigate', endNavigatePayload);\n\t\t\t});\n\n\t\tthis.pendingNavigate.path = event.path;\n\t}\n\n\t/**\n\t * Prefetches the specified path if there is a route handler that matches.\n\t * @param {!string} path Path to navigate containing the base path.\n\t * @return {CancellablePromise} Returns a pending request cancellable promise.\n\t */\n\tprefetch(path) {\n\t\tvar route = this.findRoute(path);\n\t\tif (!route) {\n\t\t\treturn CancellablePromise.reject(new CancellablePromise.CancellationError('No route for ' + path));\n\t\t}\n\n\t\tconsole.log('Prefetching [' + path + ']');\n\n\t\tvar nextScreen = this.createScreenInstance(path, route);\n\n\t\treturn nextScreen.load(path)\n\t\t\t.then(() => this.screens[path] = nextScreen)\n\t\t\t.catch((reason) => {\n\t\t\t\tthis.handleNavigateError_(path, nextScreen, reason);\n\t\t\t\tthrow reason;\n\t\t\t});\n\t}\n\n\t/**\n\t * Prepares screen flip. Updates history state and surfaces content.\n\t * @param {!string} path Path containing the querystring part.\n\t * @param {!Screen} nextScreen\n\t * @param {boolean=} opt_replaceHistory Replaces browser history.\n\t */\n\tprepareNavigateHistory_(path, nextScreen, opt_replaceHistory) {\n\t\tlet title = nextScreen.getTitle();\n\t\tif (!isString(title)) {\n\t\t\ttitle = this.getDefaultTitle();\n\t\t}\n\t\tlet redirectPath = nextScreen.beforeUpdateHistoryPath(path);\n\t\tconst historyState = {\n\t\t\tform: isDefAndNotNull(globals.capturedFormElement),\n\t\t\tpath,\n\t\t\tredirectPath,\n\t\t\tscrollLeft: 0,\n\t\t\tscrollTop: 0,\n\t\t\tsenna: true\n\t\t};\n\t\tif (opt_replaceHistory) {\n\t\t\thistoryState.scrollTop = this.popstateScrollTop;\n\t\t\thistoryState.scrollLeft = this.popstateScrollLeft;\n\t\t}\n\t\tconst hash = new Uri(path).getHash();\n\t\tredirectPath = this.maybeRestoreRedirectPathHash_(path, redirectPath, hash);\n\t\tthis.updateHistory_(title, redirectPath, nextScreen.beforeUpdateHistoryState(historyState), opt_replaceHistory);\n\t\tthis.redirectPath = redirectPath;\n\t}\n\n\t/**\n\t * Prepares screen flip. Updates history state and surfaces content.\n\t * @param {!Screen} nextScreen\n\t * @param {!Object} surfaces Map of surfaces to flip keyed by surface id.\n\t * @param {!Object} params Params extracted from the current path.\n\t */\n\tprepareNavigateSurfaces_(nextScreen, surfaces, params) {\n\t\tObject.keys(surfaces).forEach((id) => {\n\t\t\tvar surfaceContent = nextScreen.getSurfaceContent(id, params);\n\t\t\tsurfaces[id].addContent(nextScreen.getId(), surfaceContent);\n\t\t\tconsole.log('Screen [' + nextScreen.getId() + '] add content to surface ' +\n\t\t\t\t'[' + surfaces[id] + '] [' + (isDefAndNotNull(surfaceContent) ? '...' : 'empty') + ']');\n\t\t});\n\t}\n\n\t/**\n\t * Reloads the page by performing `window.location.reload()`.\n\t */\n\treloadPage() {\n\t\tglobals.window.location.reload();\n\t}\n\n\t/**\n\t * Removes route instance from app routes.\n\t * @param {Route} route\n\t * @return {boolean} True if an element was removed.\n\t */\n\tremoveRoute(route) {\n\t\treturn array.remove(this.routes, route);\n\t}\n\n\t/**\n\t * Removes a screen.\n\t * @param {!string} path Path containing the querystring part.\n\t */\n\tremoveScreen(path) {\n\t\tvar screen = this.screens[path];\n\t\tif (screen) {\n\t\t\tObject.keys(this.surfaces).forEach((surfaceId) => this.surfaces[surfaceId].remove(screen.getId()));\n\t\t\tscreen.dispose();\n\t\t\tdelete this.screens[path];\n\t\t}\n\t}\n\n\t/**\n\t * Saves given scroll position into history state.\n\t * @param {!number} scrollTop Number containing the top scroll position to be saved.\n\t * @param {!number} scrollLeft Number containing the left scroll position to be saved.\n\t */\n\tsaveHistoryCurrentPageScrollPosition_(scrollTop, scrollLeft) {\n\t\tvar state = globals.window.history.state;\n\t\tif (state && state.senna) {\n\t\t\t[state.scrollTop, state.scrollLeft] = [scrollTop, scrollLeft];\n\t\t\tglobals.window.history.replaceState(state, null, null);\n\t\t}\n\t}\n\n\t/**\n\t * Sets allow prevent navigate.\n\t * @param {boolean} allowPreventNavigate\n\t */\n\tsetAllowPreventNavigate(allowPreventNavigate) {\n\t\tthis.allowPreventNavigate = allowPreventNavigate;\n\t}\n\n\t/**\n\t * Sets link base path.\n\t * @param {!string} path\n\t */\n\tsetBasePath(basePath) {\n\t\tthis.basePath = utils.removePathTrailingSlash(basePath);\n\t}\n\n\t/**\n\t * Sets the default page title.\n\t * @param {string} defaultTitle\n\t */\n\tsetDefaultTitle(defaultTitle) {\n\t\tthis.defaultTitle = defaultTitle;\n\t}\n\n\t/**\n\t * Sets the form selector.\n\t * @param {!string} formSelector\n\t */\n\tsetFormSelector(formSelector) {\n\t\tthis.formSelector = formSelector;\n\t\tif (this.formEventHandler_) {\n\t\t\tthis.formEventHandler_.removeListener();\n\t\t}\n\t\tthis.formEventHandler_ = delegate(document, 'submit', this.formSelector, this.onDocSubmitDelegate_.bind(this), this.allowPreventNavigate);\n\t}\n\n\t/**\n\t * Sets if route matching should ignore query string from the route path.\n\t * @param {boolean} ignoreQueryStringFromRoutePath\n\t */\n\tsetIgnoreQueryStringFromRoutePath(ignoreQueryStringFromRoutePath) {\n\t\tthis.ignoreQueryStringFromRoutePath = ignoreQueryStringFromRoutePath;\n\t}\n\n\t/**\n\t * Sets the link selector.\n\t * @param {!string} linkSelector\n\t */\n\tsetLinkSelector(linkSelector) {\n\t\tthis.linkSelector = linkSelector;\n\t\tif (this.linkEventHandler_) {\n\t\t\tthis.linkEventHandler_.removeListener();\n\t\t}\n\t\tthis.linkEventHandler_ = delegate(document, 'click', this.linkSelector, this.onDocClickDelegate_.bind(this), this.allowPreventNavigate);\n\t}\n\n\t/**\n\t * Sets the loading css class.\n\t * @param {!string} loadingCssClass\n\t */\n\tsetLoadingCssClass(loadingCssClass) {\n\t\tthis.loadingCssClass = loadingCssClass;\n\t}\n\n\t/**\n\t * Sets the update scroll position value.\n\t * @param {boolean} updateScrollPosition\n\t */\n\tsetUpdateScrollPosition(updateScrollPosition) {\n\t\tthis.updateScrollPosition = updateScrollPosition;\n\t}\n\n\t/**\n\t * Cancels pending navigate with <code>Cancel pending navigation</code> error.\n\t * @protected\n\t */\n\tstopPendingNavigate_() {\n\t\tif (this.pendingNavigate) {\n\t\t\tthis.pendingNavigate.cancel('Cancel pending navigation');\n\t\t\tthis.pendingNavigate = null;\n\t\t}\n\t}\n\n\t/**\n\t * Sync document scroll position twice, the first one synchronous and then\n\t * one inside <code>async.nextTick</code>. Relevant to browsers that fires\n\t * scroll restoration asynchronously after popstate.\n\t * @protected\n\t * @return {?CancellablePromise=}\n\t */\n\tsyncScrollPositionSyncThenAsync_() {\n\t\tvar state = globals.window.history.state;\n\t\tif (!state) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar scrollTop = state.scrollTop;\n\t\tvar scrollLeft = state.scrollLeft;\n\n\t\tvar sync = () => {\n\t\t\tif (this.updateScrollPosition) {\n\t\t\t\tglobals.window.scrollTo(scrollLeft, scrollTop);\n\t\t\t}\n\t\t};\n\n\t\treturn new CancellablePromise((resolve) => sync() & async.nextTick(() => sync() & resolve()));\n\t}\n\n\t/**\n\t * Updates or replace browser history.\n\t * @param {?string} title Document title.\n\t * @param {!string} path Path containing the querystring part.\n\t * @param {!object} state\n\t * @param {boolean=} opt_replaceHistory Replaces browser history.\n\t * @protected\n\t */\n\tupdateHistory_(title, path, state, opt_replaceHistory) {\n\t\tif (opt_replaceHistory) {\n\t\t\tglobals.window.history.replaceState(state, title, path);\n\t\t} else {\n\t\t\tglobals.window.history.pushState(state, title, path);\n\t\t}\n\n\t\tlet titleNode = globals.document.querySelector('title');\n\t\tif (titleNode) {\n\t\t\ttitleNode.innerHTML = title;\n\t\t} else {\n\t\t\tglobals.document.title = title;\n\t\t}\n\t}\n\n}\n\nexport default App;\n"
            },
            {
              "id": 9,
              "identifier": "/Users/Liferay/trampo/senna.js/src/surface/Surface.js",
              "name": "./src/surface/Surface.js",
              "index": 17,
              "index2": 13,
              "size": 7376,
              "cacheable": true,
              "built": true,
              "optional": false,
              "prefetched": false,
              "chunks": [
                0
              ],
              "assets": [],
              "issuer": "/Users/Liferay/trampo/senna.js/src/app/App.js",
              "issuerId": 8,
              "issuerName": "./src/app/App.js",
              "profile": {
                "factory": 408,
                "building": 11,
                "dependencies": 1
              },
              "failed": false,
              "errors": 0,
              "warnings": 0,
              "reasons": [
                {
                  "moduleId": 8,
                  "moduleIdentifier": "/Users/Liferay/trampo/senna.js/src/app/App.js",
                  "module": "./src/app/App.js",
                  "moduleName": "./src/app/App.js",
                  "type": "harmony import",
                  "userRequest": "../surface/Surface",
                  "loc": "11:0-41"
                },
                {
                  "moduleId": 10,
                  "moduleIdentifier": "/Users/Liferay/trampo/senna.js/src/screen/HtmlScreen.js",
                  "module": "./src/screen/HtmlScreen.js",
                  "moduleName": "./src/screen/HtmlScreen.js",
                  "type": "harmony import",
                  "userRequest": "../surface/Surface",
                  "loc": "8:0-41"
                }
              ],
              "usedExports": [
                "default"
              ],
              "providedExports": [
                "default"
              ],
              "optimizationBailout": [],
              "depth": 2,
              "source": "'use strict';\n\nimport globals from '../globals/globals';\nimport { Disposable, isDefAndNotNull } from 'metal';\nimport { append, removeChildren, exitDocument } from 'metal-dom';\nimport CancellablePromise from 'metal-promise';\n\nclass Surface extends Disposable {\n\n\t/**\n\t * Surface class representing the references to elements on the page that\n\t * can potentially be updated by <code>App</code>.\n\t * @param {string} id\n\t * @constructor\n\t */\n\tconstructor(id) {\n\t\tsuper();\n\n\t\tif (!id) {\n\t\t\tthrow new Error('Surface element id not specified. A surface element requires a valid id.');\n\t\t}\n\n\t\t/**\n\t\t * Holds the active child element.\n\t\t * @type {Element}\n\t\t * @default null\n\t\t * @protected\n\t\t */\n\t\tthis.activeChild = null;\n\n\t\t/**\n\t\t * Holds the default child element.\n\t\t * @type {Element}\n\t\t * @default null\n\t\t * @protected\n\t\t */\n\t\tthis.defaultChild = null;\n\n\t\t/**\n\t\t * Holds the element with the specified surface id, if not found creates a\n\t\t * new element with the specified id.\n\t\t * @type {Element}\n\t\t * @default null\n\t\t * @protected\n\t\t */\n\t\tthis.element = null;\n\n\t\t/**\n\t\t * Holds the surface id.\n\t\t * @type {String}\n\t\t * @default null\n\t\t * @protected\n\t\t */\n\t\tthis.id = id;\n\n\t\t/**\n\t\t * Holds the default transitionFn for the surfaces.\n\t\t * @param {?Element=} from The visible surface element.\n\t\t * @param {?Element=} to The surface element to be flipped.\n\t\t * @default null\n\t\t */\n\t\tthis.transitionFn = null;\n\n\t\tthis.defaultChild = this.getChild(Surface.DEFAULT);\n\t\tthis.maybeWrapContentAsDefault_();\n\t\tthis.activeChild = this.defaultChild;\n\t}\n\n\t/**\n\t * Adds screen content to a surface. If content hasn't been passed, see if\n\t * an element exists in the DOM that matches the id. By convention, the\n\t * element should already be nested in the right element and should have an\n\t * id that is a concatentation of the surface id + '-' + the screen id.\n\t * @param {!string} screenId The screen id the content belongs too.\n\t * @param {?string|Element=} opt_content The string content or element to\n\t *     add be added as surface content.\n\t * @return {Element}\n\t */\n\taddContent(screenId, opt_content) {\n\t\tvar child = this.defaultChild;\n\n\t\tif (isDefAndNotNull(opt_content)) {\n\t\t\tchild = this.getChild(screenId);\n\t\t\tif (child) {\n\t\t\t\tremoveChildren(child);\n\t\t\t} else {\n\t\t\t\tchild = this.createChild(screenId);\n\t\t\t\tthis.transition(child, null);\n\t\t\t}\n\t\t\tappend(child, opt_content);\n\t\t}\n\n\t\tvar element = this.getElement();\n\n\t\tif (element && child) {\n\t\t\tappend(element, child);\n\t\t}\n\n\t\treturn child;\n\t}\n\n\t/**\n\t * Creates child node for the surface.\n\t * @param {!string} screenId The screen id.\n\t * @return {Element}\n\t */\n\tcreateChild(screenId) {\n\t\tvar child = globals.document.createElement('div');\n\t\tchild.setAttribute('id', this.makeId_(screenId));\n\t\treturn child;\n\t}\n\n\t/**\n\t * Gets child node of the surface.\n\t * @param {!string} screenId The screen id.\n\t * @return {?Element}\n\t */\n\tgetChild(screenId) {\n\t\treturn globals.document.getElementById(this.makeId_(screenId));\n\t}\n\n\t/**\n\t * Gets the surface element from element, and sets it to the el property of\n\t * the current instance.\n\t * <code>this.element</code> will be used.\n\t * @return {?Element} The current surface element.\n\t */\n\tgetElement() {\n\t\tif (this.element) {\n\t\t\treturn this.element;\n\t\t}\n\t\tthis.element = globals.document.getElementById(this.id);\n\t\treturn this.element;\n\t}\n\n\t/**\n\t * Gets the surface id.\n\t * @return {String}\n\t */\n\tgetId() {\n\t\treturn this.id;\n\t}\n\n\t/**\n\t * Gets the surface transition function.\n\t * See <code>Surface.defaultTransition</code>.\n\t * @return {?Function=} The transition function.\n\t */\n\tgetTransitionFn() {\n\t\treturn this.transitionFn;\n\t}\n\n\t/**\n\t * Makes the id for the element that holds content for a screen.\n\t * @param {!string} screenId The screen id the content belongs too.\n\t * @return {String}\n\t * @private\n\t */\n\tmakeId_(screenId) {\n\t\treturn this.id + '-' + screenId;\n\t}\n\n\t/**\n\t * If default child is missing, wraps surface content as default child. If\n\t * surface have static content, make sure to place a\n\t * <code>surfaceId-default</code> element inside surface, only contents\n\t * inside the default child will be replaced by navigation.\n\t */\n\tmaybeWrapContentAsDefault_() {\n\t\tvar element = this.getElement();\n\t\tif (element && !this.defaultChild) {\n\t\t\tvar fragment = globals.document.createDocumentFragment();\n\t\t\twhile (element.firstChild) {\n\t\t\t\tfragment.appendChild(element.firstChild);\n\t\t\t}\n\t\t\tthis.defaultChild = this.addContent(Surface.DEFAULT, fragment);\n\t\t\tthis.transition(null, this.defaultChild);\n\t\t}\n\t}\n\n\t/**\n\t * Sets the surface id.\n\t * @param {!string} id\n\t */\n\tsetId(id) {\n\t\tthis.id = id;\n\t}\n\n\t/**\n\t * Sets the surface transition function.\n\t * See <code>Surface.defaultTransition</code>.\n\t * @param {?Function=} transitionFn The transition function.\n\t */\n\tsetTransitionFn(transitionFn) {\n\t\tthis.transitionFn = transitionFn;\n\t}\n\n\t/**\n\t * Shows screen content from a surface.\n\t * @param {String} screenId The screen id to show.\n\t * @return {CancellablePromise} Pauses the navigation until it is resolved.\n\t */\n\tshow(screenId) {\n\t\tvar from = this.activeChild;\n\t\tvar to = this.getChild(screenId);\n\t\tif (!to) {\n\t\t\tto = this.defaultChild;\n\t\t}\n\t\tthis.activeChild = to;\n\t\treturn this.transition(from, to).thenAlways(() => {\n\t\t\tif (from && from !== to) {\n\t\t\t\texitDocument(from);\n\t\t\t}\n\t\t});\n\t}\n\n\t/**\n\t * Removes screen content from a surface.\n\t * @param {!string} screenId The screen id to remove.\n\t */\n\tremove(screenId) {\n\t\tvar child = this.getChild(screenId);\n\t\tif (child) {\n\t\t\texitDocument(child);\n\t\t}\n\t}\n\n\t/**\n\t * @return {String}\n\t */\n\ttoString() {\n\t\treturn this.id;\n\t}\n\n\t/**\n\t * Invokes the transition function specified on <code>transition</code> attribute.\n\t * @param {?Element=} from\n\t * @param {?Element=} to\n\t * @return {?CancellablePromise=} This can return a promise, which will pause the\n\t *     navigation until it is resolved.\n\t */\n\ttransition(from, to) {\n\t\tvar transitionFn = this.transitionFn || Surface.defaultTransition;\n\t\treturn CancellablePromise.resolve(transitionFn.call(this, from, to));\n\t}\n\n}\n\n/**\n   * Holds the default surface name. Elements on the page must contain a child\n   * element containing the default content, this element must be as following:\n   *\n   * Example:\n   * <code>\n   *   <div id=\"mysurface\">\n   *     <div id=\"mysurface-default\">Default surface content.</div>\n   *   </div>\n   * </code>\n   *\n   * The default content is relevant for the initial page content. When a\n   * screen doesn't provide content for the surface the default content is\n   * restored into the page.\n   *\n   * @type {!String}\n   * @default default\n   * @static\n   */\nSurface.DEFAULT = 'default';\n\n/**\n * Holds the default transition for all surfaces. Each surface could have its\n * own transition.\n *\n * Example:\n *\n * <code>\n * surface.setTransitionFn(function(from, to) {\n *   if (from) {\n *     from.style.display = 'none';\n *     from.classList.remove('flipped');\n *   }\n *   if (to) {\n *     to.style.display = 'block';\n *     to.classList.add('flipped');\n *   }\n *   return null;\n * });\n * </code>\n *\n * @param {?Element=} from The visible surface element.\n * @param {?Element=} to The surface element to be flipped.\n * @static\n */\nSurface.defaultTransition = function(from, to) {\n\tif (from) {\n\t\tfrom.style.display = 'none';\n\t\tfrom.classList.remove('flipped');\n\t}\n\tif (to) {\n\t\tto.style.display = 'block';\n\t\tto.classList.add('flipped');\n\t}\n};\n\nexport default Surface;\n"
            },
            {
              "id": 10,
              "identifier": "/Users/Liferay/trampo/senna.js/src/screen/HtmlScreen.js",
              "name": "./src/screen/HtmlScreen.js",
              "index": 18,
              "index2": 20,
              "size": 9941,
              "cacheable": true,
              "built": true,
              "optional": false,
              "prefetched": false,
              "chunks": [
                0
              ],
              "assets": [],
              "issuer": "/Users/Liferay/trampo/senna.js/src/senna.js",
              "issuerId": 13,
              "issuerName": "./src/senna.js",
              "profile": {
                "factory": 6,
                "building": 57,
                "dependencies": 399
              },
              "failed": false,
              "errors": 0,
              "warnings": 0,
              "reasons": [
                {
                  "moduleId": 13,
                  "moduleIdentifier": "/Users/Liferay/trampo/senna.js/src/senna.js",
                  "module": "./src/senna.js",
                  "moduleName": "./src/senna.js",
                  "type": "harmony import",
                  "userRequest": "./screen/HtmlScreen",
                  "loc": "6:0-45"
                },
                {
                  "moduleId": 15,
                  "moduleIdentifier": "/Users/Liferay/trampo/senna.js/src/app/AppDataAttributeHandler.js",
                  "module": "./src/app/AppDataAttributeHandler.js",
                  "moduleName": "./src/app/AppDataAttributeHandler.js",
                  "type": "harmony import",
                  "userRequest": "../screen/HtmlScreen",
                  "loc": "7:0-46"
                }
              ],
              "usedExports": [
                "default"
              ],
              "providedExports": [
                "default"
              ],
              "optimizationBailout": [],
              "depth": 1,
              "source": "'use strict';\n\nimport { getUid } from 'metal';\nimport { buildFragment, exitDocument, globalEval, globalEvalStyles, match } from 'metal-dom';\nimport CancellablePromise from 'metal-promise';\nimport globals from '../globals/globals';\nimport RequestScreen from './RequestScreen';\nimport Surface from '../surface/Surface';\nimport UA from 'metal-useragent';\nimport Uri from 'metal-uri';\nimport utils from '../utils/utils';\n\nclass HtmlScreen extends RequestScreen {\n\n\t/**\n\t * Screen class that perform a request and extracts surface contents from\n\t * the response content.\n\t * @constructor\n\t * @extends {RequestScreen}\n\t */\n\tconstructor() {\n\t\tsuper();\n\n\t\t/**\n\t\t * Holds the title selector. Relevant to extract the <code><title></code>\n\t\t * element from request fragments to use as the screen title.\n\t\t * @type {!string}\n\t\t * @default title\n\t\t * @protected\n\t\t */\n\t\tthis.titleSelector = 'title';\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tactivate() {\n\t\tsuper.activate();\n\t\tthis.releaseVirtualDocument();\n\t\tthis.pendingStyles = null;\n\t}\n\n\t/**\n\t * Allocates virtual document for content. After allocated virtual document\n\t * can be accessed by <code>this.virtualDocument</code>.\n\t * @param {!string} htmlString\n\t */\n\tallocateVirtualDocumentForContent(htmlString) {\n\t\tif (!this.virtualDocument) {\n\t\t\tthis.virtualDocument = globals.document.createElement('html');\n\t\t}\n\n\t\tthis.copyNodeAttributesFromContent_(htmlString, this.virtualDocument);\n\n\t\tthis.virtualDocument.innerHTML = htmlString;\n\t}\n\n\t/**\n\t * Customizes logic to append styles into document. Relevant to when\n\t * tracking a style by id make sure to re-positions the new style in the\n\t * same dom order.\n\t * @param {Element} newStyle\n\t */\n\tappendStyleIntoDocument_(newStyle) {\n\t\tvar isTemporaryStyle = match(newStyle, HtmlScreen.selectors.stylesTemporary);\n\t\tif (isTemporaryStyle) {\n\t\t\tthis.pendingStyles.push(newStyle);\n\t\t}\n\t\tif (newStyle.id) {\n\t\t\tvar styleInDoc = globals.document.getElementById(newStyle.id);\n\t\t\tif (styleInDoc) {\n\t\t\t\tstyleInDoc.parentNode.insertBefore(newStyle, styleInDoc.nextSibling);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\tglobals.document.head.appendChild(newStyle);\n\t}\n\n\t/**\n\t * If body is used as surface forces the requested documents to have same id\n\t * of the initial page.\n\t */\n\tassertSameBodyIdInVirtualDocument() {\n\t\tvar bodySurface = this.virtualDocument.querySelector('body');\n\t\tif (!globals.document.body.id) {\n\t\t\tglobals.document.body.id = 'senna_surface_' + getUid();\n\t\t}\n\t\tif (bodySurface) {\n\t\t\tbodySurface.id = globals.document.body.id;\n\t\t}\n\t}\n\n\t/**\n\t * Copies attributes from the <html> tag of content to the given node.\n\t */\n\tcopyNodeAttributesFromContent_(content, node) {\n\t\tcontent = content.replace(/[<]\\s*html/ig, '<senna');\n\t\tcontent = content.replace(/\\/html\\s*\\>/ig, '/senna>');\n\t\tnode.innerHTML = content;\n\t\tvar placeholder = node.querySelector('senna');\n\t\tif (placeholder) {\n\t\t\tutils.clearNodeAttributes(node);\n\t\t\tutils.copyNodeAttributes(placeholder, node);\n\t\t}\n\t}\n\n\t/**\n\t * @Override\n\t */\n\tdisposeInternal() {\n\t\tthis.disposePendingStyles();\n\t\tsuper.disposeInternal();\n\t}\n\n\t/**\n\t * Disposes pending styles if screen get disposed prior to its loading.\n\t */\n\tdisposePendingStyles() {\n\t\tif (this.pendingStyles) {\n\t\t\tthis.pendingStyles.forEach((style) => exitDocument(style));\n\t\t}\n\t}\n\n\t/**\n\t * @Override\n\t */\n\tevaluateScripts(surfaces) {\n\t\tvar evaluateTrackedScripts = this.evaluateTrackedResources_(\n\t\t\tglobalEval.runScriptsInElement, HtmlScreen.selectors.scripts,\n\t\t\tHtmlScreen.selectors.scriptsTemporary, HtmlScreen.selectors.scriptsPermanent);\n\n\t\treturn evaluateTrackedScripts.then(() => super.evaluateScripts(surfaces));\n\t}\n\n\t/**\n\t * @Override\n\t */\n\tevaluateStyles(surfaces) {\n\t\tthis.pendingStyles = [];\n\t\tvar evaluateTrackedStyles = this.evaluateTrackedResources_(\n\t\t\tglobalEvalStyles.runStylesInElement, HtmlScreen.selectors.styles,\n\t\t\tHtmlScreen.selectors.stylesTemporary, HtmlScreen.selectors.stylesPermanent,\n\t\t\tthis.appendStyleIntoDocument_.bind(this));\n\n\t\treturn evaluateTrackedStyles.then(() => super.evaluateStyles(surfaces));\n\t}\n\n\t/**\n\t * Evaluates tracked resources inside incoming fragment and remove existing\n\t * temporary resources.\n\t * @param {?function()} appendFn Function to append the node into document.\n\t * @param {!string} selector Selector used to find resources to track.\n\t * @param {!string} selectorTemporary Selector used to find temporary\n\t *     resources to track.\n\t * @param {!string} selectorPermanent Selector used to find permanent\n\t *     resources to track.\n\t * @param {!function} opt_appendResourceFn Optional function used to\n\t *     evaluate fragment containing resources.\n\t * @return {CancellablePromise} Deferred that waits resources evaluation to\n\t *     complete.\n\t * @private\n\t */\n\tevaluateTrackedResources_(evaluatorFn, selector, selectorTemporary, selectorPermanent, opt_appendResourceFn) {\n\t\tvar tracked = this.virtualQuerySelectorAll_(selector);\n\t\tvar temporariesInDoc = this.querySelectorAll_(selectorTemporary);\n\t\tvar permanentsInDoc = this.querySelectorAll_(selectorPermanent);\n\n\t\t// Adds permanent resources in document to cache.\n\t\tpermanentsInDoc.forEach((resource) => {\n\t\t\tvar resourceKey = this.getResourceKey_(resource);\n\t\t\tif (resourceKey) {\n\t\t\t\tHtmlScreen.permanentResourcesInDoc[resourceKey] = true;\n\t\t\t}\n\t\t});\n\n\t\tvar frag = buildFragment();\n\t\ttracked.forEach((resource) => {\n\t\t\tvar resourceKey = this.getResourceKey_(resource);\n\t\t\t// Do not load permanent resources if already in document.\n\t\t\tif (!HtmlScreen.permanentResourcesInDoc[resourceKey]) {\n\t\t\t\tfrag.appendChild(resource);\n\t\t\t}\n\t\t\t// If resource has key and is permanent add to cache.\n\t\t\tif (resourceKey && match(resource, selectorPermanent)) {\n\t\t\t\tHtmlScreen.permanentResourcesInDoc[resourceKey] = true;\n\t\t\t}\n\t\t});\n\n\t\treturn new CancellablePromise((resolve) => {\n\t\t\tevaluatorFn(frag, () => {\n\t\t\t\ttemporariesInDoc.forEach((resource) => exitDocument(resource));\n\t\t\t\tresolve();\n\t\t\t}, opt_appendResourceFn);\n\t\t});\n\t}\n\n\t/**\n\t * @Override\n\t */\n\tflip(surfaces) {\n\t\treturn super.flip(surfaces).then(() => {\n\t\t\tutils.clearNodeAttributes(document.documentElement);\n\t\t\tutils.copyNodeAttributes(this.virtualDocument, document.documentElement);\n\t\t});\n\t}\n\n\t/**\n\t * Extracts a key to identify the resource based on its attributes.\n\t * @param {Element} resource\n\t * @return {string} Extracted key based on resource attributes in order of\n\t *     preference: id, href, src.\n\t */\n\tgetResourceKey_(resource) {\n\t\treturn resource.id || resource.href || resource.src || '';\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tgetSurfaceContent(surfaceId) {\n\t\tvar surface = this.virtualDocument.querySelector('#' + surfaceId);\n\t\tif (surface) {\n\t\t\tvar defaultChild = surface.querySelector('#' + surfaceId + '-' + Surface.DEFAULT);\n\t\t\tif (defaultChild) {\n\t\t\t\treturn defaultChild.innerHTML;\n\t\t\t}\n\t\t\treturn surface.innerHTML; // If default content not found, use surface content\n\t\t}\n\t}\n\n\t/**\n\t * Gets the title selector.\n\t * @return {!string}\n\t */\n\tgetTitleSelector() {\n\t\treturn this.titleSelector;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tload(path) {\n\t\treturn super.load(path)\n\t\t\t.then(content => {\n\t\t\t\tthis.allocateVirtualDocumentForContent(content);\n\t\t\t\tthis.resolveTitleFromVirtualDocument();\n\t\t\t\tthis.assertSameBodyIdInVirtualDocument();\n\t\t\t\tif (UA.isIe) {\n\t\t\t\t\tthis.makeTemporaryStylesHrefsUnique_();\n\t\t\t\t}\n\t\t\t\treturn content;\n\t\t\t});\n\t}\n\n\t/**\n\t * Queries temporary styles from virtual document, and makes them unique.\n\t * This is necessary for caching and load event firing issues specific to\n\t * IE11. https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/7940171/\n\t */\n\tmakeTemporaryStylesHrefsUnique_() {\n\t\tvar temporariesInDoc = this.virtualQuerySelectorAll_(HtmlScreen.selectors.stylesTemporary);\n\t\ttemporariesInDoc.forEach((style) => this.replaceStyleAndMakeUnique_(style));\n\t}\n\n\t/**\n\t * Creates a new element from given, copies attributes, mutates href to be\n\t * unique to prevent caching and more than one load/error event from firing.\n\t */\n\treplaceStyleAndMakeUnique_(style) {\n\t\tif (style.href) {\n\t\t\tvar newStyle = globals.document.createElement(style.tagName);\n\t\t\tstyle.href = new Uri(style.href).makeUnique().toString();\n\t\t\tutils.copyNodeAttributes(style, newStyle);\n\t\t\tstyle.parentNode.replaceChild(newStyle, style);\n\t\t\tstyle.disabled = true;\n\t\t}\n\t}\n\n\t/**\n\t * Queries elements from virtual document and returns an array of elements.\n\t * @param {!string} selector\n\t * @return {array.<Element>}\n\t */\n\tvirtualQuerySelectorAll_(selector) {\n\t\treturn Array.prototype.slice.call(this.virtualDocument.querySelectorAll(selector));\n\t}\n\n\t/**\n\t * Queries elements from document and returns an array of elements.\n\t * @param {!string} selector\n\t * @return {array.<Element>}\n\t */\n\tquerySelectorAll_(selector) {\n\t\treturn Array.prototype.slice.call(globals.document.querySelectorAll(selector));\n\t}\n\n\t/**\n\t * Releases virtual document allocated for content.\n\t */\n\treleaseVirtualDocument() {\n\t\tthis.virtualDocument = null;\n\t}\n\n\t/**\n\t * Resolves title from allocated virtual document.\n\t */\n\tresolveTitleFromVirtualDocument() {\n\t\tvar title = this.virtualDocument.querySelector(this.titleSelector);\n\t\tif (title) {\n\t\t\tthis.setTitle(title.textContent.trim());\n\t\t}\n\t}\n\n\t/**\n\t * Sets the title selector.\n\t * @param {!string} titleSelector\n\t */\n\tsetTitleSelector(titleSelector) {\n\t\tthis.titleSelector = titleSelector;\n\t}\n\n}\n\n/**\n * Helper selectors for tracking resources.\n * @type {object}\n * @protected\n * @static\n */\nHtmlScreen.selectors = {\n\tscripts: 'script[data-senna-track]',\n\tscriptsPermanent: 'script[data-senna-track=\"permanent\"]',\n\tscriptsTemporary: 'script[data-senna-track=\"temporary\"]',\n\tstyles: 'style[data-senna-track],link[data-senna-track]',\n\tstylesPermanent: 'style[data-senna-track=\"permanent\"],link[data-senna-track=\"permanent\"]',\n\tstylesTemporary: 'style[data-senna-track=\"temporary\"],link[data-senna-track=\"temporary\"]'\n};\n\n/**\n * Caches permanent resource keys.\n * @type {object}\n * @protected\n * @static\n */\nHtmlScreen.permanentResourcesInDoc = {};\n\nexport default HtmlScreen;\n"
            },
            {
              "id": 11,
              "identifier": "/Users/Liferay/trampo/senna.js/src/screen/RequestScreen.js",
              "name": "./src/screen/RequestScreen.js",
              "index": 19,
              "index2": 19,
              "size": 7532,
              "cacheable": true,
              "built": true,
              "optional": false,
              "prefetched": false,
              "chunks": [
                0
              ],
              "assets": [],
              "issuer": "/Users/Liferay/trampo/senna.js/src/senna.js",
              "issuerId": 13,
              "issuerName": "./src/senna.js",
              "profile": {
                "factory": 6,
                "building": 63,
                "dependencies": 392
              },
              "failed": false,
              "errors": 0,
              "warnings": 0,
              "reasons": [
                {
                  "moduleId": 10,
                  "moduleIdentifier": "/Users/Liferay/trampo/senna.js/src/screen/HtmlScreen.js",
                  "module": "./src/screen/HtmlScreen.js",
                  "moduleName": "./src/screen/HtmlScreen.js",
                  "type": "harmony import",
                  "userRequest": "./RequestScreen",
                  "loc": "7:0-44"
                },
                {
                  "moduleId": 13,
                  "moduleIdentifier": "/Users/Liferay/trampo/senna.js/src/senna.js",
                  "module": "./src/senna.js",
                  "moduleName": "./src/senna.js",
                  "type": "harmony import",
                  "userRequest": "./screen/RequestScreen",
                  "loc": "7:0-51"
                }
              ],
              "usedExports": [
                "default"
              ],
              "providedExports": [
                "default"
              ],
              "optimizationBailout": [],
              "depth": 1,
              "source": "'use strict';\n\nimport { isDefAndNotNull } from 'metal';\nimport Ajax from 'metal-ajax';\nimport { MultiMap } from 'metal-structs';\nimport CancellablePromise from 'metal-promise';\nimport errors from '../errors/errors';\nimport utils from '../utils/utils';\nimport globals from '../globals/globals';\nimport Screen from './Screen';\nimport Uri from 'metal-uri';\nimport UA from 'metal-useragent';\n\nclass RequestScreen extends Screen {\n\n\t/**\n\t * Request screen abstract class to perform io operations on descendant\n\t * screens.\n\t * @constructor\n\t * @extends {Screen}\n\t */\n\tconstructor() {\n\t\tsuper();\n\n\t\t/**\n\t\t * @inheritDoc\n\t\t * @default true\n\t\t */\n\t\tthis.cacheable = true;\n\n\t\t/**\n\t\t * Holds default http headers to set on request.\n\t\t * @type {?Object=}\n\t\t * @default {\n\t\t *   'X-PJAX': 'true',\n\t\t *   'X-Requested-With': 'XMLHttpRequest'\n\t\t * }\n\t\t * @protected\n\t\t */\n\t\tthis.httpHeaders = {\n\t\t\t'X-PJAX': 'true',\n\t\t\t'X-Requested-With': 'XMLHttpRequest'\n\t\t};\n\n\t\t/**\n\t\t * Holds default http method to perform the request.\n\t\t * @type {!string}\n\t\t * @default RequestScreen.GET\n\t\t * @protected\n\t\t */\n\t\tthis.httpMethod = RequestScreen.GET;\n\n\t\t/**\n\t\t * Holds the XHR object responsible for the request.\n\t\t * @type {XMLHttpRequest}\n\t\t * @default null\n\t\t * @protected\n\t\t */\n\t\tthis.request = null;\n\n\t\t/**\n\t\t * Holds the request timeout in milliseconds.\n\t\t * @type {!number}\n\t\t * @default 30000\n\t\t * @protected\n\t\t */\n\t\tthis.timeout = 30000;\n\t}\n\n\t/**\n\t * Asserts that response status code is valid.\n\t * @param {number} status\n\t * @protected\n\t */\n\tassertValidResponseStatusCode(status) {\n\t\tif (!this.isValidResponseStatusCode(status)) {\n\t\t\tvar error = new Error(errors.INVALID_STATUS);\n\t\t\terror.invalidStatus = true;\n\t\t\terror.statusCode = status;\n\t\t\tthrow error;\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tbeforeUpdateHistoryPath(path) {\n\t\tvar redirectPath = this.getRequestPath();\n\t\tif (redirectPath && redirectPath !== path) {\n\t\t\treturn redirectPath;\n\t\t}\n\t\treturn path;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tbeforeUpdateHistoryState(state) {\n\t\t// If state is ours and navigate to post-without-redirect-get set\n\t\t// history state to null, that way Senna will reload the page on\n\t\t// popstate since it cannot predict post data.\n\t\tif (state.senna && state.form && state.redirectPath === state.path) {\n\t\t\treturn null;\n\t\t}\n\t\treturn state;\n\t}\n\n\t/**\n\t * Formats load path before invoking ajax call.\n\t * @param {string} path\n\t * @return {string} Formatted path;\n\t * @protected\n\t */\n\tformatLoadPath(path) {\n\t\tvar uri = new Uri(path);\n\n\t\turi.setHostname(globals.window.location.hostname);\n\t\turi.setProtocol(globals.window.location.protocol);\n\n\t\tif (globals.window.location.port) {\n\t\t\turi.setPort(globals.window.location.port);\n\t\t}\n\n\t\tif (UA.isIeOrEdge && this.httpMethod === RequestScreen.GET) {\n\t\t\treturn uri.makeUnique().toString();\n\t\t}\n\n\t\treturn uri.toString();\n\t}\n\n\t/**\n\t * Gets the http headers.\n\t * @return {?Object=}\n\t */\n\tgetHttpHeaders() {\n\t\treturn this.httpHeaders;\n\t}\n\n\t/**\n\t * Gets the http method.\n\t * @return {!string}\n\t */\n\tgetHttpMethod() {\n\t\treturn this.httpMethod;\n\t}\n\n\t/**\n\t * Gets request path.\n\t * @return {string=}\n\t */\n\tgetRequestPath() {\n\t\tvar request = this.getRequest();\n\t\tif (request) {\n\t\t\tvar requestPath = request.requestPath;\n\t\t\tvar responseUrl = this.maybeExtractResponseUrlFromRequest(request);\n\t\t\tif (responseUrl) {\n\t\t\t\trequestPath = responseUrl;\n\t\t\t}\n\t\t\tif (UA.isIeOrEdge && this.httpMethod === RequestScreen.GET) {\n\t\t\t\trequestPath = new Uri(requestPath).removeUnique().toString();\n\t\t\t}\n\t\t\treturn utils.getUrlPath(requestPath);\n\t\t}\n\t\treturn null;\n\t}\n\n\t/**\n\t * Gets the request object.\n\t * @return {?Object}\n\t */\n\tgetRequest() {\n\t\treturn this.request;\n\t}\n\n\t/**\n\t * Gets the request timeout.\n\t * @return {!number}\n\t */\n\tgetTimeout() {\n\t\treturn this.timeout;\n\t}\n\n\t/**\n\t * Checks if response succeeded. Any status code 2xx or 3xx is considered\n\t * valid.\n\t * @param {number} statusCode\n\t */\n\tisValidResponseStatusCode(statusCode) {\n\t\treturn statusCode >= 200 && statusCode <= 399;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tload(path) {\n\t\tconst cache = this.getCache();\n\t\tif (isDefAndNotNull(cache)) {\n\t\t\treturn CancellablePromise.resolve(cache);\n\t\t}\n\t\tlet body = null;\n\t\tlet httpMethod = this.httpMethod;\n\t\tconst headers = new MultiMap();\n\t\tObject.keys(this.httpHeaders).forEach(header => headers.add(header, this.httpHeaders[header]));\n\t\tif (globals.capturedFormElement) {\n\t\t\tbody = new FormData(globals.capturedFormElement);\n\t\t\tthis.maybeAppendSubmitButtonValue_(body);\n\t\t\thttpMethod = RequestScreen.POST;\n\t\t\tif (UA.isIeOrEdge) {\n\t\t\t\theaders.add('If-None-Match', '\"0\"');\n\t\t\t}\n\t\t}\n\t\tconst requestPath = this.formatLoadPath(path);\n\t\treturn Ajax\n\t\t\t.request(requestPath, httpMethod, body, headers, null, this.timeout)\n\t\t\t.then(xhr => {\n\t\t\t\tthis.setRequest(xhr);\n\t\t\t\tthis.assertValidResponseStatusCode(xhr.status);\n\t\t\t\tif (httpMethod === RequestScreen.GET && this.isCacheable()) {\n\t\t\t\t\tthis.addCache(xhr.responseText);\n\t\t\t\t}\n\t\t\t\txhr.requestPath = requestPath;\n\t\t\t\treturn xhr.responseText;\n\t\t\t})\n\t\t\t.catch((reason) => {\n\t\t\t\tswitch (reason.message) {\n\t\t\t\t\tcase errors.REQUEST_TIMEOUT:\n\t\t\t\t\t\treason.timeout = true;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase errors.REQUEST_ERROR:\n\t\t\t\t\t\treason.requestError = true;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase errors.REQUEST_PREMATURE_TERMINATION:\n\t\t\t\t\t\treason.requestError = true;\n\t\t\t\t\t\treason.requestPrematureTermination = true;\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tthrow reason;\n\t\t\t});\n\t}\n\n\t/**\n\t * Adds aditional data to the body of the request in case a submit button\n\t * is captured during form submission.\n\t * @param {!FormData} body The FormData containing the request body.\n\t * @protected\n\t */\n\tmaybeAppendSubmitButtonValue_(body) {\n\t\tconst button = globals.capturedFormButtonElement;\n\t\tif (button && button.name) {\n\t\t\tbody.append(button.name, button.value);\n\t\t}\n\t}\n\n\t/**\n\t * The following method tries to extract the response url value by checking\n\t * the custom response header 'X-Request-URL' if proper value is not present\n\t * in XMLHttpRequest. The value of responseURL will be the final URL\n\t * obtained after any redirects. Internet Explorer, Edge and Safari <= 7\n\t * does not yet support the feature. For more information see:\n\t * https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/responseURL\n\t * https://xhr.spec.whatwg.org/#the-responseurl-attribute\n\t * @param {XMLHttpRequest} request\n\t * @return {?string} Response url best match.\n\t */\n\tmaybeExtractResponseUrlFromRequest(request) {\n\t\tvar responseUrl = request.responseURL;\n\t\tif (responseUrl) {\n\t\t\treturn responseUrl;\n\t\t}\n\t\treturn request.getResponseHeader(RequestScreen.X_REQUEST_URL_HEADER);\n\t}\n\n\t/**\n\t * Sets the http headers.\n\t * @param {?Object=} httpHeaders\n\t */\n\tsetHttpHeaders(httpHeaders) {\n\t\tthis.httpHeaders = httpHeaders;\n\t}\n\n\t/**\n\t * Sets the http method.\n\t * @param {!string} httpMethod\n\t */\n\tsetHttpMethod(httpMethod) {\n\t\tthis.httpMethod = httpMethod.toLowerCase();\n\t}\n\n\t/**\n\t * Sets the request object.\n\t * @param {?Object} request\n\t */\n\tsetRequest(request) {\n\t\tthis.request = request;\n\t}\n\n\t/**\n\t * Sets the request timeout in milliseconds.\n\t * @param {!number} timeout\n\t */\n\tsetTimeout(timeout) {\n\t\tthis.timeout = timeout;\n\t}\n\n}\n\n/**\n * Holds value for method get.\n * @type {string}\n * @default 'get'\n * @static\n */\nRequestScreen.GET = 'get';\n\n/**\n * Holds value for method post.\n * @type {string}\n * @default 'post'\n * @static\n */\nRequestScreen.POST = 'post';\n\n/**\n * Fallback http header to retrieve response request url.\n * @type {string}\n * @default 'X-Request-URL'\n * @static\n */\nRequestScreen.X_REQUEST_URL_HEADER = 'X-Request-URL';\n\nexport default RequestScreen;\n"
            },
            {
              "id": 12,
              "identifier": "external \"metal-useragent\"",
              "name": "external \"metal-useragent\"",
              "index": 23,
              "index2": 18,
              "size": 42,
              "cacheable": false,
              "built": false,
              "optional": false,
              "prefetched": false,
              "chunks": [
                0
              ],
              "assets": [],
              "issuer": "/Users/Liferay/trampo/senna.js/src/screen/HtmlScreen.js",
              "issuerId": 10,
              "issuerName": "./src/screen/HtmlScreen.js",
              "profile": {
                "factory": 0,
                "building": 0
              },
              "failed": false,
              "errors": 0,
              "warnings": 0,
              "reasons": [
                {
                  "moduleId": 10,
                  "moduleIdentifier": "/Users/Liferay/trampo/senna.js/src/screen/HtmlScreen.js",
                  "module": "./src/screen/HtmlScreen.js",
                  "moduleName": "./src/screen/HtmlScreen.js",
                  "type": "harmony import",
                  "userRequest": "metal-useragent",
                  "loc": "9:0-33"
                },
                {
                  "moduleId": 11,
                  "moduleIdentifier": "/Users/Liferay/trampo/senna.js/src/screen/RequestScreen.js",
                  "module": "./src/screen/RequestScreen.js",
                  "moduleName": "./src/screen/RequestScreen.js",
                  "type": "harmony import",
                  "userRequest": "metal-useragent",
                  "loc": "12:0-33"
                }
              ],
              "usedExports": [
                "default"
              ],
              "providedExports": null,
              "optimizationBailout": [],
              "depth": 2
            },
            {
              "id": 13,
              "identifier": "/Users/Liferay/trampo/senna.js/src/senna.js",
              "name": "./src/senna.js",
              "index": 0,
              "index2": 23,
              "size": 420,
              "cacheable": true,
              "built": true,
              "optional": false,
              "prefetched": false,
              "chunks": [
                0
              ],
              "assets": [],
              "issuer": null,
              "issuerId": null,
              "issuerName": null,
              "profile": {
                "factory": 13,
                "building": 11
              },
              "failed": false,
              "errors": 0,
              "warnings": 0,
              "reasons": [],
              "usedExports": true,
              "providedExports": [
                "default",
                "dataAttributeHandler",
                "utils",
                "App",
                "HtmlScreen",
                "Route",
                "RequestScreen",
                "Screen"
              ],
              "optimizationBailout": [],
              "depth": 0,
              "source": "'use strict';\n\nimport utils from './utils/utils';\nimport dataAttributeHandler from './app/dataAttributeHandler';\nimport App from './app/App';\nimport HtmlScreen from './screen/HtmlScreen';\nimport RequestScreen from './screen/RequestScreen';\nimport Route from './route/Route';\nimport Screen from './screen/Screen';\n\nexport default App;\nexport { dataAttributeHandler, utils, App, HtmlScreen, Route, RequestScreen, Screen };"
            },
            {
              "id": 14,
              "identifier": "/Users/Liferay/trampo/senna.js/src/app/dataAttributeHandler.js",
              "name": "./src/app/dataAttributeHandler.js",
              "index": 4,
              "index2": 22,
              "size": 453,
              "cacheable": true,
              "built": true,
              "optional": false,
              "prefetched": false,
              "chunks": [
                0
              ],
              "assets": [],
              "issuer": "/Users/Liferay/trampo/senna.js/src/senna.js",
              "issuerId": 13,
              "issuerName": "./src/senna.js",
              "profile": {
                "factory": 5,
                "building": 17,
                "dependencies": 439
              },
              "failed": false,
              "errors": 0,
              "warnings": 0,
              "reasons": [
                {
                  "moduleId": 13,
                  "moduleIdentifier": "/Users/Liferay/trampo/senna.js/src/senna.js",
                  "module": "./src/senna.js",
                  "moduleName": "./src/senna.js",
                  "type": "harmony import",
                  "userRequest": "./app/dataAttributeHandler",
                  "loc": "4:0-62"
                }
              ],
              "usedExports": [
                "default"
              ],
              "providedExports": [
                "default"
              ],
              "optimizationBailout": [],
              "depth": 1,
              "source": "'use strict';\n\nimport globals from '../globals/globals';\nimport AppDataAttributeHandler from './AppDataAttributeHandler';\n\n/**\n * Data attribute handler.\n * @type {AppDataAttributeHandler}\n */\nvar dataAttributeHandler = new AppDataAttributeHandler();\n\nglobals.document.addEventListener('DOMContentLoaded', function() {\n\tdataAttributeHandler.setBaseElement(globals.document.body);\n\tdataAttributeHandler.handle();\n});\n\nexport default dataAttributeHandler;"
            },
            {
              "id": 15,
              "identifier": "/Users/Liferay/trampo/senna.js/src/app/AppDataAttributeHandler.js",
              "name": "./src/app/AppDataAttributeHandler.js",
              "index": 5,
              "index2": 21,
              "size": 6509,
              "cacheable": true,
              "built": true,
              "optional": false,
              "prefetched": false,
              "chunks": [
                0
              ],
              "assets": [],
              "issuer": "/Users/Liferay/trampo/senna.js/src/app/dataAttributeHandler.js",
              "issuerId": 14,
              "issuerName": "./src/app/dataAttributeHandler.js",
              "profile": {
                "factory": 234,
                "building": 212,
                "dependencies": 1
              },
              "failed": false,
              "errors": 0,
              "warnings": 0,
              "reasons": [
                {
                  "moduleId": 14,
                  "moduleIdentifier": "/Users/Liferay/trampo/senna.js/src/app/dataAttributeHandler.js",
                  "module": "./src/app/dataAttributeHandler.js",
                  "moduleName": "./src/app/dataAttributeHandler.js",
                  "type": "harmony import",
                  "userRequest": "./AppDataAttributeHandler",
                  "loc": "4:0-64"
                }
              ],
              "usedExports": [
                "default"
              ],
              "providedExports": [
                "default"
              ],
              "optimizationBailout": [],
              "depth": 2,
              "source": "'use strict';\n\nimport { Disposable, getUid, isDefAndNotNull, isElement, object } from 'metal';\nimport dataAttributes from './dataAttributes';\nimport globals from '../globals/globals';\nimport App from './App';\nimport HtmlScreen from '../screen/HtmlScreen';\nimport Route from '../route/Route';\n\nclass AppDataAttributeHandler extends Disposable {\n\n\t/**\n\t * Initilizes App, register surfaces and routes from data attributes.\n\t * @constructor\n\t */\n\tconstructor() {\n\t\tsuper();\n\n\t\t/**\n\t\t * Holds the app reference initialized by data attributes.\n\t\t * @type {App}\n\t\t * @default null\n\t\t */\n\t\tthis.app = null;\n\n\t\t/**\n\t\t * Holds the base element to search initialization data attributes. This\n\t\t * element is the container used to enable initialization based on the\n\t\t * presence of `data-senna` attribute.\n\t\t * @type {Element}\n\t\t * @default null\n\t\t */\n\t\tthis.baseElement = null;\n\t}\n\n\t/**\n\t * Inits application based on information scanned from document.\n\t */\n\thandle() {\n\t\tif (!isElement(this.baseElement)) {\n\t\t\tthrow new Error('Senna data attribute handler base element ' +\n\t\t\t\t'not set or invalid, try setting a valid element that ' +\n\t\t\t\t'contains a `data-senna` attribute.');\n\t\t}\n\n\t\tif (!this.baseElement.hasAttribute(dataAttributes.senna)) {\n\t\t\tconsole.log('Senna was not initialized from data attributes. ' +\n\t\t\t\t'In order to enable its usage from data attributes try setting ' +\n\t\t\t\t'in the base element, e.g. `<body data-senna>`.');\n\t\t\treturn;\n\t\t}\n\n\t\tif (this.app) {\n\t\t\tthrow new Error('Senna app was already initialized.');\n\t\t}\n\n\t\tconsole.log('Senna initialized from data attribute.');\n\n\t\tthis.app = new App();\n\t\tthis.maybeAddRoutes_();\n\t\tthis.maybeAddSurfaces_();\n\t\tthis.maybeSetBasePath_();\n\t\tthis.maybeSetLinkSelector_();\n\t\tthis.maybeSetLoadingCssClass_();\n\t\tthis.maybeSetUpdateScrollPosition_();\n\t\tthis.maybeDispatch_();\n\t}\n\n\t/**\n\t * Disposes of this instance's object references.\n\t * @override\n\t */\n\tdisposeInternal() {\n\t\tif (this.app) {\n\t\t\tthis.app.dispose();\n\t\t}\n\t}\n\n\t/**\n\t * Gets the app reference.\n\t * @return {App}\n\t */\n\tgetApp() {\n\t\treturn this.app;\n\t}\n\n\t/**\n\t * Gets the base element.\n\t * @return {Element} baseElement\n\t */\n\tgetBaseElement() {\n\t\treturn this.baseElement;\n\t}\n\n\t/**\n\t * Maybe adds app routes from link elements that are `senna-route`.\n\t */\n\tmaybeAddRoutes_() {\n\t\tvar routesSelector = 'link[rel=\"senna-route\"]';\n\t\tthis.querySelectorAllAsArray_(routesSelector).forEach((link) => this.maybeParseLinkRoute_(link));\n\t\tif (!this.app.hasRoutes()) {\n\t\t\tthis.app.addRoutes(new Route(/.*/, HtmlScreen));\n\t\t\tconsole.log('Senna can\\'t find route elements, adding default.');\n\t\t}\n\t}\n\n\t/**\n\t * Maybe adds app surfaces by scanning `data-senna-surface` data attribute.\n\t */\n\tmaybeAddSurfaces_() {\n\t\tvar surfacesSelector = '[' + dataAttributes.surface + ']';\n\t\tthis.querySelectorAllAsArray_(surfacesSelector).forEach((surfaceElement) => {\n\t\t\tthis.updateElementIdIfSpecialSurface_(surfaceElement);\n\t\t\tthis.app.addSurfaces(surfaceElement.id);\n\t\t});\n\t}\n\n\t/**\n\t * Dispatches app navigation to the current path when initializes.\n\t */\n\tmaybeDispatch_() {\n\t\tif (this.baseElement.hasAttribute(dataAttributes.dispatch)) {\n\t\t\tthis.app.dispatch();\n\t\t}\n\t}\n\n\t/**\n\t * Adds app route by parsing valid link elements. A valid link element is of\n\t * the kind `rel=\"senna-route\"`.\n\t * @param {Element} link\n\t */\n\tmaybeParseLinkRoute_(link) {\n\t\tvar route = new Route(this.maybeParseLinkRoutePath_(link), this.maybeParseLinkRouteHandler_(link));\n\t\tthis.app.addRoutes(route);\n\t\tconsole.log('Senna scanned route ' + route.getPath());\n\t}\n\n\t/**\n\t * Maybe parse link route handler.\n\t * @param {Element} link\n\t * @return {?string}\n\t */\n\tmaybeParseLinkRouteHandler_(link) {\n\t\tvar handler = link.getAttribute('type');\n\t\tif (isDefAndNotNull(handler)) {\n\t\t\thandler = object.getObjectByName(handler);\n\t\t}\n\t\treturn handler;\n\t}\n\n\t/**\n\t * Maybe parse link route path.\n\t * @param {Element} link\n\t * @return {?string}\n\t */\n\tmaybeParseLinkRoutePath_(link) {\n\t\tvar path = link.getAttribute('href');\n\t\tif (isDefAndNotNull(path)) {\n\t\t\tif (path.indexOf('regex:') === 0) {\n\t\t\t\tpath = new RegExp(path.substring(6));\n\t\t\t}\n\t\t}\n\t\treturn path;\n\t}\n\n\t/**\n\t * Maybe sets app base path from `data-senna-base-path` data attribute.\n\t */\n\tmaybeSetBasePath_() {\n\t\tvar basePath = this.baseElement.getAttribute(dataAttributes.basePath);\n\t\tif (isDefAndNotNull(basePath)) {\n\t\t\tthis.app.setBasePath(basePath);\n\t\t\tconsole.log('Senna scanned base path ' + basePath);\n\t\t}\n\t}\n\n\t/**\n\t * Maybe sets app link selector from `data-senna-link-selector` data\n\t * attribute.\n\t */\n\tmaybeSetLinkSelector_() {\n\t\tvar linkSelector = this.baseElement.getAttribute(dataAttributes.linkSelector);\n\t\tif (isDefAndNotNull(linkSelector)) {\n\t\t\tthis.app.setLinkSelector(linkSelector);\n\t\t\tconsole.log('Senna scanned link selector ' + linkSelector);\n\t\t}\n\t}\n\n\t/**\n\t * Maybe sets app link loading css class from `data-senna-loading-css-class`\n\t * data attribute.\n\t */\n\tmaybeSetLoadingCssClass_() {\n\t\tvar loadingCssClass = this.baseElement.getAttribute(dataAttributes.loadingCssClass);\n\t\tif (isDefAndNotNull(loadingCssClass)) {\n\t\t\tthis.app.setLoadingCssClass(loadingCssClass);\n\t\t\tconsole.log('Senna scanned loading css class ' + loadingCssClass);\n\t\t}\n\t}\n\n\t/**\n\t * Maybe sets app update scroll position from\n\t * `data-senna-update-scroll-position` data attribute.\n\t */\n\tmaybeSetUpdateScrollPosition_() {\n\t\tvar updateScrollPosition = this.baseElement.getAttribute(dataAttributes.updateScrollPosition);\n\t\tif (isDefAndNotNull(updateScrollPosition)) {\n\t\t\tif (updateScrollPosition === 'false') {\n\t\t\t\tthis.app.setUpdateScrollPosition(false);\n\t\t\t} else {\n\t\t\t\tthis.app.setUpdateScrollPosition(true);\n\t\t\t}\n\t\t\tconsole.log('Senna scanned update scroll position ' + updateScrollPosition);\n\t\t}\n\t}\n\n\t/**\n\t * Queries elements from document and returns an array of elements.\n\t * @param {!string} selector\n\t * @return {array.<Element>}\n\t */\n\tquerySelectorAllAsArray_(selector) {\n\t\treturn Array.prototype.slice.call(globals.document.querySelectorAll(selector));\n\t}\n\n\t/**\n\t * Updates element id if handled as special surface element. Some surfaces\n\t * are slightly different from others, like when threating <code>body</code>\n\t * as surface.\n\t * @param {Element} element\n\t */\n\tupdateElementIdIfSpecialSurface_(element) {\n\t\tif (!element.id && element === globals.document.body) {\n\t\t\telement.id = 'senna_surface_' + getUid();\n\t\t}\n\t}\n\n\t/**\n\t * Sets the base element.\n\t * @param {Element} baseElement\n\t */\n\tsetBaseElement(baseElement) {\n\t\tthis.baseElement = baseElement;\n\t}\n\n}\n\nexport default AppDataAttributeHandler;\n"
            },
            {
              "id": 16,
              "identifier": "/Users/Liferay/trampo/senna.js/src/app/dataAttributes.js",
              "name": "./src/app/dataAttributes.js",
              "index": 7,
              "index2": 4,
              "size": 309,
              "cacheable": true,
              "built": true,
              "optional": false,
              "prefetched": false,
              "chunks": [
                0
              ],
              "assets": [],
              "issuer": "/Users/Liferay/trampo/senna.js/src/app/AppDataAttributeHandler.js",
              "issuerId": 15,
              "issuerName": "./src/app/AppDataAttributeHandler.js",
              "profile": {
                "factory": 10,
                "building": 711
              },
              "failed": false,
              "errors": 0,
              "warnings": 0,
              "reasons": [
                {
                  "moduleId": 15,
                  "moduleIdentifier": "/Users/Liferay/trampo/senna.js/src/app/AppDataAttributeHandler.js",
                  "module": "./src/app/AppDataAttributeHandler.js",
                  "moduleName": "./src/app/AppDataAttributeHandler.js",
                  "type": "harmony import",
                  "userRequest": "./dataAttributes",
                  "loc": "4:0-46"
                }
              ],
              "usedExports": [
                "default"
              ],
              "providedExports": [
                "default"
              ],
              "optimizationBailout": [],
              "depth": 3,
              "source": "'use strict';\n\nexport default {\n\tbasePath: 'data-senna-base-path',\n\tlinkSelector: 'data-senna-link-selector',\n\tloadingCssClass: 'data-senna-loading-css-class',\n\tsenna: 'data-senna',\n\tdispatch: 'data-senna-dispatch',\n\tsurface: 'data-senna-surface',\n\tupdateScrollPosition: 'data-senna-update-scroll-position'\n};"
            },
            {
              "id": 17,
              "identifier": "external \"metal-events\"",
              "name": "external \"metal-events\"",
              "index": 10,
              "index2": 6,
              "size": 42,
              "cacheable": false,
              "built": false,
              "optional": false,
              "prefetched": false,
              "chunks": [
                0
              ],
              "assets": [],
              "issuer": "/Users/Liferay/trampo/senna.js/src/app/App.js",
              "issuerId": 8,
              "issuerName": "./src/app/App.js",
              "profile": {
                "factory": 0,
                "building": 0
              },
              "failed": false,
              "errors": 0,
              "warnings": 0,
              "reasons": [
                {
                  "moduleId": 8,
                  "moduleIdentifier": "/Users/Liferay/trampo/senna.js/src/app/App.js",
                  "module": "./src/app/App.js",
                  "moduleName": "./src/app/App.js",
                  "type": "harmony import",
                  "userRequest": "metal-events",
                  "loc": "5:0-58"
                }
              ],
              "usedExports": [
                "EventEmitter",
                "EventHandler"
              ],
              "providedExports": null,
              "optimizationBailout": [],
              "depth": 2
            },
            {
              "id": 18,
              "identifier": "external \"metal-debounce\"",
              "name": "external \"metal-debounce\"",
              "index": 12,
              "index2": 8,
              "size": 42,
              "cacheable": false,
              "built": false,
              "optional": false,
              "prefetched": false,
              "chunks": [
                0
              ],
              "assets": [],
              "issuer": "/Users/Liferay/trampo/senna.js/src/app/App.js",
              "issuerId": 8,
              "issuerName": "./src/app/App.js",
              "profile": {
                "factory": 0,
                "building": 0
              },
              "failed": false,
              "errors": 0,
              "warnings": 0,
              "reasons": [
                {
                  "moduleId": 8,
                  "moduleIdentifier": "/Users/Liferay/trampo/senna.js/src/app/App.js",
                  "module": "./src/app/App.js",
                  "moduleName": "./src/app/App.js",
                  "type": "harmony import",
                  "userRequest": "metal-debounce",
                  "loc": "7:0-38"
                }
              ],
              "usedExports": [
                "default"
              ],
              "providedExports": null,
              "optimizationBailout": [],
              "depth": 2
            },
            {
              "id": 19,
              "identifier": "external \"metal-path-parser\"",
              "name": "external \"metal-path-parser\"",
              "index": 14,
              "index2": 9,
              "size": 42,
              "cacheable": false,
              "built": false,
              "optional": false,
              "prefetched": false,
              "chunks": [
                0
              ],
              "assets": [],
              "issuer": "/Users/Liferay/trampo/senna.js/src/route/Route.js",
              "issuerId": 6,
              "issuerName": "./src/route/Route.js",
              "profile": {
                "factory": 0,
                "building": 0
              },
              "failed": false,
              "errors": 0,
              "warnings": 0,
              "reasons": [
                {
                  "moduleId": 6,
                  "moduleIdentifier": "/Users/Liferay/trampo/senna.js/src/route/Route.js",
                  "module": "./src/route/Route.js",
                  "moduleName": "./src/route/Route.js",
                  "type": "harmony import",
                  "userRequest": "metal-path-parser",
                  "loc": "4:0-64"
                }
              ],
              "usedExports": [
                "extractData",
                "parse",
                "toRegex"
              ],
              "providedExports": null,
              "optimizationBailout": [],
              "depth": 2
            },
            {
              "id": 20,
              "identifier": "/Users/Liferay/trampo/senna.js/src/cacheable/Cacheable.js",
              "name": "./src/cacheable/Cacheable.js",
              "index": 16,
              "index2": 11,
              "size": 1394,
              "cacheable": true,
              "built": true,
              "optional": false,
              "prefetched": false,
              "chunks": [
                0
              ],
              "assets": [],
              "issuer": "/Users/Liferay/trampo/senna.js/src/screen/Screen.js",
              "issuerId": 7,
              "issuerName": "./src/screen/Screen.js",
              "profile": {
                "factory": 390,
                "building": 13,
                "dependencies": 0
              },
              "failed": false,
              "errors": 0,
              "warnings": 0,
              "reasons": [
                {
                  "moduleId": 7,
                  "moduleIdentifier": "/Users/Liferay/trampo/senna.js/src/screen/Screen.js",
                  "module": "./src/screen/Screen.js",
                  "moduleName": "./src/screen/Screen.js",
                  "type": "harmony import",
                  "userRequest": "../cacheable/Cacheable",
                  "loc": "5:0-47"
                }
              ],
              "usedExports": [
                "default"
              ],
              "providedExports": [
                "default"
              ],
              "optimizationBailout": [],
              "depth": 2,
              "source": "'use strict';\n\nimport { Disposable } from 'metal';\n\nclass Cacheable extends Disposable {\n\n\t/**\n\t * Abstract class for defining cacheable behavior.\n\t * @constructor\n\t */\n\tconstructor() {\n\t\tsuper();\n\n\t\t/**\n\t\t * Holds the cached data.\n\t\t * @type {!Object}\n\t\t * @default null\n\t\t * @protected\n\t\t */\n\t\tthis.cache = null;\n\n\t\t/**\n\t\t * Holds whether class is cacheable.\n\t\t * @type {boolean}\n\t\t * @default false\n\t\t * @protected\n\t\t */\n\t\tthis.cacheable = false;\n\t}\n\n\t/**\n\t * Adds content to the cache.\n\t * @param {string} content Content to be cached.\n\t * @chainable\n\t */\n\taddCache(content) {\n\t\tif (this.cacheable) {\n\t\t\tthis.cache = content;\n\t\t}\n\t\treturn this;\n\t}\n\n\t/**\n\t * Clears the cache.\n\t * @chainable\n\t */\n\tclearCache() {\n\t\tthis.cache = null;\n\t\treturn this;\n\t}\n\n\t/**\n\t * Disposes of this instance's object references.\n\t * @override\n\t */\n\tdisposeInternal() {\n\t\tthis.clearCache();\n\t}\n\n\t/**\n\t * Gets the cached content.\n\t * @return {Object} Cached content.\n\t * @protected\n\t */\n\tgetCache() {\n\t\treturn this.cache;\n\t}\n\n\t/**\n\t * Whether the class is cacheable.\n\t * @return {boolean} Returns true when class is cacheable, false otherwise.\n\t */\n\tisCacheable() {\n\t\treturn this.cacheable;\n\t}\n\n\t/**\n\t * Sets whether the class is cacheable.\n\t * @param {boolean} cacheable\n\t */\n\tsetCacheable(cacheable) {\n\t\tif (!cacheable) {\n\t\t\tthis.clearCache();\n\t\t}\n\t\tthis.cacheable = cacheable;\n\t}\n\n}\n\nexport default Cacheable;\n"
            },
            {
              "id": 21,
              "identifier": "external \"metal-ajax\"",
              "name": "external \"metal-ajax\"",
              "index": 20,
              "index2": 15,
              "size": 42,
              "cacheable": false,
              "built": false,
              "optional": false,
              "prefetched": false,
              "chunks": [
                0
              ],
              "assets": [],
              "issuer": "/Users/Liferay/trampo/senna.js/src/screen/RequestScreen.js",
              "issuerId": 11,
              "issuerName": "./src/screen/RequestScreen.js",
              "profile": {
                "factory": 0,
                "building": 0
              },
              "failed": false,
              "errors": 0,
              "warnings": 0,
              "reasons": [
                {
                  "moduleId": 11,
                  "moduleIdentifier": "/Users/Liferay/trampo/senna.js/src/screen/RequestScreen.js",
                  "module": "./src/screen/RequestScreen.js",
                  "moduleName": "./src/screen/RequestScreen.js",
                  "type": "harmony import",
                  "userRequest": "metal-ajax",
                  "loc": "4:0-30"
                }
              ],
              "usedExports": [
                "default"
              ],
              "providedExports": null,
              "optimizationBailout": [],
              "depth": 2
            },
            {
              "id": 22,
              "identifier": "external \"metal-structs\"",
              "name": "external \"metal-structs\"",
              "index": 21,
              "index2": 16,
              "size": 42,
              "cacheable": false,
              "built": false,
              "optional": false,
              "prefetched": false,
              "chunks": [
                0
              ],
              "assets": [],
              "issuer": "/Users/Liferay/trampo/senna.js/src/screen/RequestScreen.js",
              "issuerId": 11,
              "issuerName": "./src/screen/RequestScreen.js",
              "profile": {
                "factory": 0,
                "building": 0
              },
              "failed": false,
              "errors": 0,
              "warnings": 0,
              "reasons": [
                {
                  "moduleId": 11,
                  "moduleIdentifier": "/Users/Liferay/trampo/senna.js/src/screen/RequestScreen.js",
                  "module": "./src/screen/RequestScreen.js",
                  "moduleName": "./src/screen/RequestScreen.js",
                  "type": "harmony import",
                  "userRequest": "metal-structs",
                  "loc": "5:0-41"
                }
              ],
              "usedExports": [
                "MultiMap"
              ],
              "providedExports": null,
              "optimizationBailout": [],
              "depth": 2
            },
            {
              "id": 23,
              "identifier": "/Users/Liferay/trampo/senna.js/src/errors/errors.js",
              "name": "./src/errors/errors.js",
              "index": 22,
              "index2": 17,
              "size": 599,
              "cacheable": true,
              "built": true,
              "optional": false,
              "prefetched": false,
              "chunks": [
                0
              ],
              "assets": [],
              "issuer": "/Users/Liferay/trampo/senna.js/src/screen/RequestScreen.js",
              "issuerId": 11,
              "issuerName": "./src/screen/RequestScreen.js",
              "profile": {
                "factory": 393,
                "building": 12
              },
              "failed": false,
              "errors": 0,
              "warnings": 0,
              "reasons": [
                {
                  "moduleId": 11,
                  "moduleIdentifier": "/Users/Liferay/trampo/senna.js/src/screen/RequestScreen.js",
                  "module": "./src/screen/RequestScreen.js",
                  "moduleName": "./src/screen/RequestScreen.js",
                  "type": "harmony import",
                  "userRequest": "../errors/errors",
                  "loc": "7:0-38"
                }
              ],
              "usedExports": [
                "default"
              ],
              "providedExports": [
                "default"
              ],
              "optimizationBailout": [],
              "depth": 2,
              "source": "'use strict';\n\n/**\n * Holds value error messages.\n * @const\n */\nclass errors {\n}\n\n/**\n * Invalid status error message.\n * @type {string}\n * @static\n */\nerrors.INVALID_STATUS = 'Invalid status code';\n\n/**\n * Request error message.\n * @type {string}\n * @static\n */\nerrors.REQUEST_ERROR = 'Request error';\n\n/**\n * Request timeout error message.\n * @type {string}\n * @static\n */\nerrors.REQUEST_TIMEOUT = 'Request timeout';\n\n/**\n * Request is blocked by CORS issue message.\n * @type {string}\n * @static\n */\nerrors.REQUEST_PREMATURE_TERMINATION = 'Request terminated prematurely';\n\nexport default errors;\n"
            }
          ],
          "filteredModules": 0,
          "origins": [
            {
              "moduleId": 13,
              "module": "/Users/Liferay/trampo/senna.js/src/senna.js",
              "moduleIdentifier": "/Users/Liferay/trampo/senna.js/src/senna.js",
              "moduleName": "./src/senna.js",
              "loc": "",
              "name": "main",
              "reasons": []
            }
          ]
        }
      ],
      "modules": [
        {
          "id": 0,
          "identifier": "external \"metal\"",
          "name": "external \"metal\"",
          "index": 6,
          "index2": 3,
          "size": 42,
          "cacheable": false,
          "built": false,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0
          ],
          "assets": [],
          "issuer": "/Users/Liferay/trampo/senna.js/src/app/App.js",
          "issuerId": 8,
          "issuerName": "./src/app/App.js",
          "profile": {
            "factory": 0,
            "building": 0
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "reasons": [
            {
              "moduleId": 6,
              "moduleIdentifier": "/Users/Liferay/trampo/senna.js/src/route/Route.js",
              "module": "./src/route/Route.js",
              "moduleName": "./src/route/Route.js",
              "type": "harmony import",
              "userRequest": "metal",
              "loc": "3:0-62"
            },
            {
              "moduleId": 7,
              "moduleIdentifier": "/Users/Liferay/trampo/senna.js/src/screen/Screen.js",
              "module": "./src/screen/Screen.js",
              "moduleName": "./src/screen/Screen.js",
              "type": "harmony import",
              "userRequest": "metal",
              "loc": "3:0-31"
            },
            {
              "moduleId": 8,
              "moduleIdentifier": "/Users/Liferay/trampo/senna.js/src/app/App.js",
              "module": "./src/app/App.js",
              "moduleName": "./src/app/App.js",
              "type": "harmony import",
              "userRequest": "metal",
              "loc": "4:0-64"
            },
            {
              "moduleId": 9,
              "moduleIdentifier": "/Users/Liferay/trampo/senna.js/src/surface/Surface.js",
              "module": "./src/surface/Surface.js",
              "moduleName": "./src/surface/Surface.js",
              "type": "harmony import",
              "userRequest": "metal",
              "loc": "4:0-52"
            },
            {
              "moduleId": 10,
              "moduleIdentifier": "/Users/Liferay/trampo/senna.js/src/screen/HtmlScreen.js",
              "module": "./src/screen/HtmlScreen.js",
              "moduleName": "./src/screen/HtmlScreen.js",
              "type": "harmony import",
              "userRequest": "metal",
              "loc": "3:0-31"
            },
            {
              "moduleId": 11,
              "moduleIdentifier": "/Users/Liferay/trampo/senna.js/src/screen/RequestScreen.js",
              "module": "./src/screen/RequestScreen.js",
              "moduleName": "./src/screen/RequestScreen.js",
              "type": "harmony import",
              "userRequest": "metal",
              "loc": "3:0-40"
            },
            {
              "moduleId": 15,
              "moduleIdentifier": "/Users/Liferay/trampo/senna.js/src/app/AppDataAttributeHandler.js",
              "module": "./src/app/AppDataAttributeHandler.js",
              "moduleName": "./src/app/AppDataAttributeHandler.js",
              "type": "harmony import",
              "userRequest": "metal",
              "loc": "3:0-79"
            },
            {
              "moduleId": 20,
              "moduleIdentifier": "/Users/Liferay/trampo/senna.js/src/cacheable/Cacheable.js",
              "module": "./src/cacheable/Cacheable.js",
              "moduleName": "./src/cacheable/Cacheable.js",
              "type": "harmony import",
              "userRequest": "metal",
              "loc": "3:0-35"
            }
          ],
          "usedExports": [
            "Disposable",
            "array",
            "async",
            "getUid",
            "isDefAndNotNull",
            "isElement",
            "isFunction",
            "isString",
            "object"
          ],
          "providedExports": null,
          "optimizationBailout": [],
          "depth": 2
        },
        {
          "id": 1,
          "identifier": "/Users/Liferay/trampo/senna.js/src/globals/globals.js",
          "name": "./src/globals/globals.js",
          "index": 2,
          "index2": 0,
          "size": 192,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0
          ],
          "assets": [],
          "issuer": "/Users/Liferay/trampo/senna.js/src/utils/utils.js",
          "issuerId": 3,
          "issuerName": "./src/utils/utils.js",
          "profile": {
            "factory": 441,
            "building": 9
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "reasons": [
            {
              "moduleId": 3,
              "moduleIdentifier": "/Users/Liferay/trampo/senna.js/src/utils/utils.js",
              "module": "./src/utils/utils.js",
              "moduleName": "./src/utils/utils.js",
              "type": "harmony import",
              "userRequest": "../globals/globals",
              "loc": "3:0-41"
            },
            {
              "moduleId": 8,
              "moduleIdentifier": "/Users/Liferay/trampo/senna.js/src/app/App.js",
              "module": "./src/app/App.js",
              "moduleName": "./src/app/App.js",
              "type": "harmony import",
              "userRequest": "../globals/globals",
              "loc": "8:0-41"
            },
            {
              "moduleId": 9,
              "moduleIdentifier": "/Users/Liferay/trampo/senna.js/src/surface/Surface.js",
              "module": "./src/surface/Surface.js",
              "moduleName": "./src/surface/Surface.js",
              "type": "harmony import",
              "userRequest": "../globals/globals",
              "loc": "3:0-41"
            },
            {
              "moduleId": 10,
              "moduleIdentifier": "/Users/Liferay/trampo/senna.js/src/screen/HtmlScreen.js",
              "module": "./src/screen/HtmlScreen.js",
              "moduleName": "./src/screen/HtmlScreen.js",
              "type": "harmony import",
              "userRequest": "../globals/globals",
              "loc": "6:0-41"
            },
            {
              "moduleId": 11,
              "moduleIdentifier": "/Users/Liferay/trampo/senna.js/src/screen/RequestScreen.js",
              "module": "./src/screen/RequestScreen.js",
              "moduleName": "./src/screen/RequestScreen.js",
              "type": "harmony import",
              "userRequest": "../globals/globals",
              "loc": "9:0-41"
            },
            {
              "moduleId": 14,
              "moduleIdentifier": "/Users/Liferay/trampo/senna.js/src/app/dataAttributeHandler.js",
              "module": "./src/app/dataAttributeHandler.js",
              "moduleName": "./src/app/dataAttributeHandler.js",
              "type": "harmony import",
              "userRequest": "../globals/globals",
              "loc": "3:0-41"
            },
            {
              "moduleId": 15,
              "moduleIdentifier": "/Users/Liferay/trampo/senna.js/src/app/AppDataAttributeHandler.js",
              "module": "./src/app/AppDataAttributeHandler.js",
              "moduleName": "./src/app/AppDataAttributeHandler.js",
              "type": "harmony import",
              "userRequest": "../globals/globals",
              "loc": "5:0-41"
            }
          ],
          "usedExports": [
            "default"
          ],
          "providedExports": [
            "default"
          ],
          "optimizationBailout": [],
          "depth": 2,
          "source": "var globals = globals || {};\n\nif (typeof window !== 'undefined') {\n\tglobals.window = window;\n}\n\nif (typeof document !== 'undefined') {\n\tglobals.document = document;\n}\n\nexport default globals;\n"
        },
        {
          "id": 2,
          "identifier": "external \"metal-promise\"",
          "name": "external \"metal-promise\"",
          "index": 11,
          "index2": 7,
          "size": 42,
          "cacheable": false,
          "built": false,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0
          ],
          "assets": [],
          "issuer": "/Users/Liferay/trampo/senna.js/src/app/App.js",
          "issuerId": 8,
          "issuerName": "./src/app/App.js",
          "profile": {
            "factory": 0,
            "building": 0
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "reasons": [
            {
              "moduleId": 7,
              "moduleIdentifier": "/Users/Liferay/trampo/senna.js/src/screen/Screen.js",
              "module": "./src/screen/Screen.js",
              "moduleName": "./src/screen/Screen.js",
              "type": "harmony import",
              "userRequest": "metal-promise",
              "loc": "6:0-47"
            },
            {
              "moduleId": 8,
              "moduleIdentifier": "/Users/Liferay/trampo/senna.js/src/app/App.js",
              "module": "./src/app/App.js",
              "moduleName": "./src/app/App.js",
              "type": "harmony import",
              "userRequest": "metal-promise",
              "loc": "6:0-47"
            },
            {
              "moduleId": 9,
              "moduleIdentifier": "/Users/Liferay/trampo/senna.js/src/surface/Surface.js",
              "module": "./src/surface/Surface.js",
              "moduleName": "./src/surface/Surface.js",
              "type": "harmony import",
              "userRequest": "metal-promise",
              "loc": "6:0-47"
            },
            {
              "moduleId": 10,
              "moduleIdentifier": "/Users/Liferay/trampo/senna.js/src/screen/HtmlScreen.js",
              "module": "./src/screen/HtmlScreen.js",
              "moduleName": "./src/screen/HtmlScreen.js",
              "type": "harmony import",
              "userRequest": "metal-promise",
              "loc": "5:0-47"
            },
            {
              "moduleId": 11,
              "moduleIdentifier": "/Users/Liferay/trampo/senna.js/src/screen/RequestScreen.js",
              "module": "./src/screen/RequestScreen.js",
              "moduleName": "./src/screen/RequestScreen.js",
              "type": "harmony import",
              "userRequest": "metal-promise",
              "loc": "6:0-47"
            }
          ],
          "usedExports": [
            "default"
          ],
          "providedExports": null,
          "optimizationBailout": [],
          "depth": 2
        },
        {
          "id": 3,
          "identifier": "/Users/Liferay/trampo/senna.js/src/utils/utils.js",
          "name": "./src/utils/utils.js",
          "index": 1,
          "index2": 2,
          "size": 3374,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0
          ],
          "assets": [],
          "issuer": "/Users/Liferay/trampo/senna.js/src/senna.js",
          "issuerId": 13,
          "issuerName": "./src/senna.js",
          "profile": {
            "factory": 5,
            "building": 15
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "reasons": [
            {
              "moduleId": 8,
              "moduleIdentifier": "/Users/Liferay/trampo/senna.js/src/app/App.js",
              "module": "./src/app/App.js",
              "moduleName": "./src/app/App.js",
              "type": "harmony import",
              "userRequest": "../utils/utils",
              "loc": "13:0-35"
            },
            {
              "moduleId": 10,
              "moduleIdentifier": "/Users/Liferay/trampo/senna.js/src/screen/HtmlScreen.js",
              "module": "./src/screen/HtmlScreen.js",
              "moduleName": "./src/screen/HtmlScreen.js",
              "type": "harmony import",
              "userRequest": "../utils/utils",
              "loc": "11:0-35"
            },
            {
              "moduleId": 11,
              "moduleIdentifier": "/Users/Liferay/trampo/senna.js/src/screen/RequestScreen.js",
              "module": "./src/screen/RequestScreen.js",
              "moduleName": "./src/screen/RequestScreen.js",
              "type": "harmony import",
              "userRequest": "../utils/utils",
              "loc": "8:0-35"
            },
            {
              "moduleId": 13,
              "moduleIdentifier": "/Users/Liferay/trampo/senna.js/src/senna.js",
              "module": "./src/senna.js",
              "moduleName": "./src/senna.js",
              "type": "harmony import",
              "userRequest": "./utils/utils",
              "loc": "3:0-34"
            }
          ],
          "usedExports": [
            "default"
          ],
          "providedExports": [
            "default"
          ],
          "optimizationBailout": [],
          "depth": 1,
          "source": "'use strict';\n\nimport globals from '../globals/globals';\nimport Uri from 'metal-uri';\n\n/**\n * A collection of static utility functions.\n * @const\n */\nclass utils {\n\n\t/**\n\t * Copies attributes form source node to target node.\n\t * @return {void}\n\t * @static\n\t */\n\tstatic copyNodeAttributes(source, target) {\n\t\tArray.prototype.slice.call(source.attributes).forEach((attribute) => target.setAttribute(attribute.name, attribute.value));\n\t}\n\n\t/**\n\t * Gets the current browser path including hashbang.\n\t * @return {!string}\n\t * @static\n\t */\n\tstatic getCurrentBrowserPath() {\n\t\treturn this.getCurrentBrowserPathWithoutHash() + globals.window.location.hash;\n\t}\n\n\t/**\n\t * Gets the current browser path excluding hashbang.\n\t * @return {!string}\n\t * @static\n\t */\n\tstatic getCurrentBrowserPathWithoutHash() {\n\t\treturn globals.window.location.pathname + globals.window.location.search;\n\t}\n\n\t/**\n\t * Gets the given node offset coordinates.\n\t * @return {!object}\n\t * @static\n\t */\n\tstatic getNodeOffset(node) {\n\t\tlet [offsetLeft, offsetTop] = [0, 0];\n\t\tdo {\n\t\t\toffsetLeft += node.offsetLeft;\n\t\t\toffsetTop += node.offsetTop;\n\t\t\tnode = node.offsetParent;\n\t\t} while (node);\n\t\treturn {\n\t\t\toffsetLeft,\n\t\t\toffsetTop\n\t\t};\n\t}\n\n\t/**\n\t * Extracts the path part of an url.\n\t * @return {!string}\n\t * @static\n\t */\n\tstatic getUrlPath(url) {\n\t\tvar uri = new Uri(url);\n\t\treturn uri.getPathname() + uri.getSearch() + uri.getHash();\n\t}\n\n\t/**\n\t * Extracts the path part of an url without hashbang.\n\t * @return {!string}\n\t * @static\n\t */\n\tstatic getUrlPathWithoutHash(url) {\n\t\tvar uri = new Uri(url);\n\t\treturn uri.getPathname() + uri.getSearch();\n\t}\n\n\t/**\n\t * Extracts the path part of an url without hashbang and query search.\n\t * @return {!string}\n\t * @static\n\t */\n\tstatic getUrlPathWithoutHashAndSearch(url) {\n\t\tvar uri = new Uri(url);\n\t\treturn uri.getPathname();\n\t}\n\n\t/**\n\t * Checks if url is in the same browser current url excluding the hashbang.\n\t * @param  {!string} url\n\t * @return {boolean}\n\t * @static\n\t */\n\tstatic isCurrentBrowserPath(url) {\n\t\tif (url) {\n\t\t\tconst currentBrowserPath = this.getCurrentBrowserPathWithoutHash();\n\t\t\t// the getUrlPath will create a Uri and will normalize the path and\n\t\t\t// remove the trailling '/' for properly comparing paths.\n\t\t\treturn utils.getUrlPathWithoutHash(url) === this.getUrlPath(currentBrowserPath);\n\t\t}\n\t\treturn false;\n\t}\n\n\t/**\n\t * Returns true if HTML5 History api is supported.\n\t * @return {boolean}\n\t * @static\n\t */\n\tstatic isHtml5HistorySupported() {\n\t\treturn !!(globals.window.history && globals.window.history.pushState);\n\t}\n\n\t/**\n\t * Checks if a given url is a valid http(s) uri and returns the formed Uri\n\t * or false if the parsing failed\n\t * @return {Uri|boolean}\n\t * @static\n\t */\n\tstatic isWebUri(url) {\n\t\ttry {\n\t\t\treturn new Uri(url);\n\t\t} catch (err) {\n\t\t\tconsole.error(`${err.message} ${url}`);\n\t\t\treturn false;\n\t\t}\n\t}\n\n\t/**\n\t * Removes all attributes form node.\n\t * @return {void}\n\t * @static\n\t */\n\tstatic clearNodeAttributes(node) {\n\t\tArray.prototype.slice.call(node.attributes).forEach((attribute) => node.removeAttribute(attribute.name));\n\t}\n\n\t/**\n\t* Removes trailing slash in path.\n\t* @param {!string}\n\t* @return {string}\n\t*/\n\tstatic removePathTrailingSlash(path) {\n\t\tvar length = path ? path.length : 0;\n\t\tif (length > 1 && path[length - 1] === '/') {\n\t\t\tpath = path.substr(0, length - 1);\n\t\t}\n\t\treturn path;\n\t}\n}\n\nexport default utils;\n"
        },
        {
          "id": 4,
          "identifier": "external \"metal-uri\"",
          "name": "external \"metal-uri\"",
          "index": 3,
          "index2": 1,
          "size": 42,
          "cacheable": false,
          "built": false,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0
          ],
          "assets": [],
          "issuer": "/Users/Liferay/trampo/senna.js/src/utils/utils.js",
          "issuerId": 3,
          "issuerName": "./src/utils/utils.js",
          "profile": {
            "factory": 0,
            "building": 1
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "reasons": [
            {
              "moduleId": 3,
              "moduleIdentifier": "/Users/Liferay/trampo/senna.js/src/utils/utils.js",
              "module": "./src/utils/utils.js",
              "moduleName": "./src/utils/utils.js",
              "type": "harmony import",
              "userRequest": "metal-uri",
              "loc": "4:0-28"
            },
            {
              "moduleId": 8,
              "moduleIdentifier": "/Users/Liferay/trampo/senna.js/src/app/App.js",
              "module": "./src/app/App.js",
              "moduleName": "./src/app/App.js",
              "type": "harmony import",
              "userRequest": "metal-uri",
              "loc": "12:0-28"
            },
            {
              "moduleId": 10,
              "moduleIdentifier": "/Users/Liferay/trampo/senna.js/src/screen/HtmlScreen.js",
              "module": "./src/screen/HtmlScreen.js",
              "moduleName": "./src/screen/HtmlScreen.js",
              "type": "harmony import",
              "userRequest": "metal-uri",
              "loc": "10:0-28"
            },
            {
              "moduleId": 11,
              "moduleIdentifier": "/Users/Liferay/trampo/senna.js/src/screen/RequestScreen.js",
              "module": "./src/screen/RequestScreen.js",
              "moduleName": "./src/screen/RequestScreen.js",
              "type": "harmony import",
              "userRequest": "metal-uri",
              "loc": "11:0-28"
            }
          ],
          "usedExports": [
            "default"
          ],
          "providedExports": null,
          "optimizationBailout": [],
          "depth": 2
        },
        {
          "id": 5,
          "identifier": "external \"metal-dom\"",
          "name": "external \"metal-dom\"",
          "index": 9,
          "index2": 5,
          "size": 42,
          "cacheable": false,
          "built": false,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0
          ],
          "assets": [],
          "issuer": "/Users/Liferay/trampo/senna.js/src/app/App.js",
          "issuerId": 8,
          "issuerName": "./src/app/App.js",
          "profile": {
            "factory": 0,
            "building": 0
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "reasons": [
            {
              "moduleId": 7,
              "moduleIdentifier": "/Users/Liferay/trampo/senna.js/src/screen/Screen.js",
              "module": "./src/screen/Screen.js",
              "moduleName": "./src/screen/Screen.js",
              "type": "harmony import",
              "userRequest": "metal-dom",
              "loc": "4:0-39"
            },
            {
              "moduleId": 8,
              "moduleIdentifier": "/Users/Liferay/trampo/senna.js/src/app/App.js",
              "module": "./src/app/App.js",
              "moduleName": "./src/app/App.js",
              "type": "harmony import",
              "userRequest": "metal-dom",
              "loc": "3:0-75"
            },
            {
              "moduleId": 9,
              "moduleIdentifier": "/Users/Liferay/trampo/senna.js/src/surface/Surface.js",
              "module": "./src/surface/Surface.js",
              "moduleName": "./src/surface/Surface.js",
              "type": "harmony import",
              "userRequest": "metal-dom",
              "loc": "5:0-65"
            },
            {
              "moduleId": 10,
              "moduleIdentifier": "/Users/Liferay/trampo/senna.js/src/screen/HtmlScreen.js",
              "module": "./src/screen/HtmlScreen.js",
              "moduleName": "./src/screen/HtmlScreen.js",
              "type": "harmony import",
              "userRequest": "metal-dom",
              "loc": "4:0-93"
            }
          ],
          "usedExports": [
            "addClasses",
            "append",
            "buildFragment",
            "delegate",
            "exitDocument",
            "globalEval",
            "globalEvalStyles",
            "match",
            "on",
            "removeChildren",
            "removeClasses"
          ],
          "providedExports": null,
          "optimizationBailout": [],
          "depth": 2
        },
        {
          "id": 6,
          "identifier": "/Users/Liferay/trampo/senna.js/src/route/Route.js",
          "name": "./src/route/Route.js",
          "index": 13,
          "index2": 10,
          "size": 2185,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0
          ],
          "assets": [],
          "issuer": "/Users/Liferay/trampo/senna.js/src/senna.js",
          "issuerId": 13,
          "issuerName": "./src/senna.js",
          "profile": {
            "factory": 6,
            "building": 68,
            "dependencies": 0
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "reasons": [
            {
              "moduleId": 8,
              "moduleIdentifier": "/Users/Liferay/trampo/senna.js/src/app/App.js",
              "module": "./src/app/App.js",
              "moduleName": "./src/app/App.js",
              "type": "harmony import",
              "userRequest": "../route/Route",
              "loc": "9:0-35"
            },
            {
              "moduleId": 13,
              "moduleIdentifier": "/Users/Liferay/trampo/senna.js/src/senna.js",
              "module": "./src/senna.js",
              "moduleName": "./src/senna.js",
              "type": "harmony import",
              "userRequest": "./route/Route",
              "loc": "8:0-34"
            },
            {
              "moduleId": 15,
              "moduleIdentifier": "/Users/Liferay/trampo/senna.js/src/app/AppDataAttributeHandler.js",
              "module": "./src/app/AppDataAttributeHandler.js",
              "moduleName": "./src/app/AppDataAttributeHandler.js",
              "type": "harmony import",
              "userRequest": "../route/Route",
              "loc": "8:0-35"
            }
          ],
          "usedExports": [
            "default"
          ],
          "providedExports": [
            "default"
          ],
          "optimizationBailout": [],
          "depth": 1,
          "source": "'use strict';\n\nimport { isDefAndNotNull, isFunction, isString } from 'metal';\nimport { extractData, parse, toRegex } from 'metal-path-parser';\n\nclass Route {\n\n\t/**\n\t * Route class.\n\t * @param {!string|RegExp|Function} path\n\t * @param {!Function} handler\n\t * @constructor\n\t */\n\tconstructor(path, handler) {\n\t\tif (!isDefAndNotNull(path)) {\n\t\t\tthrow new Error('Route path not specified.');\n\t\t}\n\t\tif (!isFunction(handler)) {\n\t\t\tthrow new Error('Route handler is not a function.');\n\t\t}\n\n\t\t/**\n\t\t * Defines the handler which will execute once a URL in the application\n\t\t * matches the path.\n\t\t * @type {!Function}\n\t\t * @protected\n\t\t */\n\t\tthis.handler = handler;\n\n\t\t/**\n\t\t * Defines the path which will trigger the route handler.\n\t\t * @type {!string|RegExp|Function}\n\t\t * @protected\n\t\t */\n\t\tthis.path = path;\n\t}\n\n\t/**\n\t* Builds parsed data (regex and tokens) for this route.\n\t* @return {!Object}\n\t* @protected\n\t*/\n\tbuildParsedData_() {\n\t\tif (!this.parsedData_) {\n\t\t\tvar tokens = parse(this.path);\n\t\t\tvar regex = toRegex(tokens);\n\t\t\tthis.parsedData_ = {\n\t\t\t\tregex,\n\t\t\t\ttokens\n\t\t\t};\n\t\t}\n\t\treturn this.parsedData_;\n\t}\n\n\t/**\n\t * Extracts param data from the given path, according to this route.\n\t * @param {string} path The url path to extract params from.\n\t * @return {Object} The extracted data, if the path matches this route, or\n\t *     null otherwise.\n\t */\n\textractParams(path) {\n\t\tif (isString(this.path)) {\n\t\t\treturn extractData(this.buildParsedData_().tokens, path);\n\t\t}\n\t\treturn {};\n\t}\n\n\t/**\n\t * Gets the route handler.\n\t * @return {!Function}\n\t */\n\tgetHandler() {\n\t\treturn this.handler;\n\t}\n\n\t/**\n\t * Gets the route path.\n\t * @return {!string|RegExp|Function}\n\t */\n\tgetPath() {\n\t\treturn this.path;\n\t}\n\n\t/**\n \t * Matches if the router can handle the tested path.\n \t * @param {!string} value Path to test (may contain the querystring part).\n\t * @return {boolean} Returns true if matches any route.\n\t */\n\tmatchesPath(value) {\n\t\tvar path = this.path;\n\n\t\tif (isFunction(path)) {\n\t\t\treturn path(value);\n\t\t}\n\t\tif (isString(path)) {\n\t\t\tpath = this.buildParsedData_().regex;\n\t\t}\n\t\tif (path instanceof RegExp) {\n\t\t\treturn value.search(path) > -1;\n\t\t}\n\n\t\treturn false;\n\t}\n\n}\n\nexport default Route;\n"
        },
        {
          "id": 7,
          "identifier": "/Users/Liferay/trampo/senna.js/src/screen/Screen.js",
          "name": "./src/screen/Screen.js",
          "index": 15,
          "index2": 12,
          "size": 5991,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0
          ],
          "assets": [],
          "issuer": "/Users/Liferay/trampo/senna.js/src/senna.js",
          "issuerId": 13,
          "issuerName": "./src/senna.js",
          "profile": {
            "factory": 6,
            "building": 66,
            "dependencies": 0
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "reasons": [
            {
              "moduleId": 8,
              "moduleIdentifier": "/Users/Liferay/trampo/senna.js/src/app/App.js",
              "module": "./src/app/App.js",
              "moduleName": "./src/app/App.js",
              "type": "harmony import",
              "userRequest": "../screen/Screen",
              "loc": "10:0-38"
            },
            {
              "moduleId": 11,
              "moduleIdentifier": "/Users/Liferay/trampo/senna.js/src/screen/RequestScreen.js",
              "module": "./src/screen/RequestScreen.js",
              "moduleName": "./src/screen/RequestScreen.js",
              "type": "harmony import",
              "userRequest": "./Screen",
              "loc": "10:0-30"
            },
            {
              "moduleId": 13,
              "moduleIdentifier": "/Users/Liferay/trampo/senna.js/src/senna.js",
              "module": "./src/senna.js",
              "moduleName": "./src/senna.js",
              "type": "harmony import",
              "userRequest": "./screen/Screen",
              "loc": "9:0-37"
            }
          ],
          "usedExports": [
            "default"
          ],
          "providedExports": [
            "default"
          ],
          "optimizationBailout": [],
          "depth": 1,
          "source": "'use strict';\n\nimport { getUid } from 'metal';\nimport { globalEval } from 'metal-dom';\nimport Cacheable from '../cacheable/Cacheable';\nimport CancellablePromise from 'metal-promise';\n\nclass Screen extends Cacheable {\n\n\t/**\n\t * Screen class is a special type of route handler that provides helper\n\t * utilities that adds lifecycle and methods to provide content to each\n\t * registered surface.\n\t * @constructor\n\t * @extends {Cacheable}\n\t */\n\tconstructor() {\n\t\tsuper();\n\n\t\t/**\n\t\t * Holds the screen id.\n\t\t * @type {string}\n\t\t * @protected\n\t\t */\n\t\tthis.id = this.makeId_(getUid());\n\n\t\t/**\n\t\t * Holds the screen title. Relevant when the page title should be\n\t\t * upadated when screen is rendered.\n\t\t * @type {?string=}\n\t\t * @default null\n\t\t * @protected\n\t\t */\n\t\tthis.title = null;\n\t}\n\n\t/**\n\t * Fires when the screen is active. Allows a screen to perform any setup\n\t * that requires its DOM to be visible. Lifecycle.\n\t */\n\tactivate() {\n\t\tconsole.log('Screen [' + this + '] activate');\n\t}\n\n\t/**\n\t * Gives the Screen a chance to cancel the navigation and stop itself from\n\t * being deactivated. Can be used, for example, if the screen has unsaved\n\t * state. Lifecycle. Clean-up should not be preformed here, since the\n\t * navigation may still be cancelled. Do clean-up in deactivate.\n\t * @return {boolean=} If returns true, the current screen is locked and the\n\t *     next nagivation interrupted.\n\t */\n\tbeforeDeactivate() {\n\t\tconsole.log('Screen [' + this + '] beforeDeactivate');\n\t}\n\n\t/**\n\t * Gives the Screen a chance format the path before history update.\n\t * @path {!string} path Navigation path.\n\t * @return {!string} Navigation path to use on history.\n\t */\n\tbeforeUpdateHistoryPath(path) {\n\t\treturn path;\n\t}\n\n\t/**\n\t * Gives the Screen a chance format the state before history update.\n\t * @path {!object} state History state.\n\t * @return {!object} History state to use on history.\n\t */\n\tbeforeUpdateHistoryState(state) {\n\t\treturn state;\n\t}\n\n\t/**\n\t * Allows a screen to do any cleanup necessary after it has been\n\t * deactivated, for example cancelling outstanding requests or stopping\n\t * timers. Lifecycle.\n\t */\n\tdeactivate() {\n\t\tconsole.log('Screen [' + this + '] deactivate');\n\t}\n\n\t/**\n\t * Dispose a screen, either after it is deactivated (in the case of a\n\t * non-cacheable view) or when the App is itself disposed for whatever\n\t * reason. Lifecycle.\n\t */\n\tdisposeInternal() {\n\t\tsuper.disposeInternal();\n\t\tconsole.log('Screen [' + this + '] dispose');\n\t}\n\n\t/**\n\t * Allows a screen to evaluate scripts before the element is made visible.\n\t * Lifecycle.\n\t * @param {!object} surfaces Map of surfaces to flip keyed by surface id.\n\t * @return {?CancellablePromise=} This can return a promise, which will\n\t *     pause the navigation until it is resolved.\n\t */\n\tevaluateScripts(surfaces) {\n\t\tObject.keys(surfaces).forEach(sId => {\n\t\t\tif (surfaces[sId].activeChild) {\n\t\t\t\tglobalEval.runScriptsInElement(surfaces[sId].activeChild);\n\t\t\t}\n\t\t});\n\t\treturn CancellablePromise.resolve();\n\t}\n\n\t/**\n\t * Allows a screen to evaluate styles before the element is made visible.\n\t * Lifecycle.\n\t * @param {!object} surfaces Map of surfaces to flip keyed by surface id.\n\t * @return {?CancellablePromise=} This can return a promise, which will\n\t *     pause the navigation until it is resolved.\n\t */\n\tevaluateStyles() {\n\t\treturn CancellablePromise.resolve();\n\t}\n\n\t/**\n\t * Allows a screen to perform any setup immediately before the element is\n\t * made visible. Lifecycle.\n\t * @param {!object} surfaces Map of surfaces to flip keyed by surface id.\n\t * @return {?CancellablePromise=} This can return a promise, which will pause the\n\t *     navigation until it is resolved.\n\t */\n\tflip(surfaces) {\n\t\tconsole.log('Screen [' + this + '] flip');\n\n\t\tvar transitions = [];\n\n\t\tObject.keys(surfaces).forEach(sId => {\n\t\t\tvar surface = surfaces[sId];\n\t\t\tvar deferred = surface.show(this.id);\n\t\t\ttransitions.push(deferred);\n\t\t});\n\n\t\treturn CancellablePromise.all(transitions);\n\t}\n\n\t/**\n\t * Gets the screen id.\n\t * @return {string}\n\t */\n\tgetId() {\n\t\treturn this.id;\n\t}\n\n\t/**\n\t * Returns the content for the given surface, or null if the surface isn't\n\t * used by this screen. This will be called when a screen is initially\n\t * constructed or, if a screen is non-cacheable, when navigated.\n\t * @param {!string} surfaceId The id of the surface DOM element.\n\t * @param {!Object} params Params extracted from the current path.\n\t * @return {?string|Element=} This can return a string or node representing\n\t *     the content of the surface. If returns falsy values surface default\n\t *     content is restored.\n\t */\n\tgetSurfaceContent() {\n\t\tconsole.log('Screen [' + this + '] getSurfaceContent');\n\t}\n\n\t/**\n\t * Gets the screen title.\n\t * @return {?string=}\n\t */\n\tgetTitle() {\n\t\treturn this.title;\n\t}\n\n\t/**\n\t * Returns all contents for the surfaces. This will pass the loaded content\n\t * to <code>Screen.load</code> with all information you\n\t * need to fulfill the surfaces. Lifecycle.\n\t * @param {!string=} path The requested path.\n\t * @return {!CancellablePromise} This can return a string representing the\n\t *     contents of the surfaces or a promise, which will pause the navigation\n\t *     until it is resolved. This is useful for loading async content.\n\t */\n\tload() {\n\t\tconsole.log('Screen [' + this + '] load');\n\t\treturn CancellablePromise.resolve();\n\t}\n\n\t/**\n\t * Makes the id for the screen.\n\t * @param {!string} id The screen id the content belongs too.\n\t * @return {string}\n\t * @private\n\t */\n\tmakeId_(id) {\n\t\treturn 'screen_' + id;\n\t}\n\n\t/**\n\t * Sets the screen id.\n\t * @param {!string} id\n\t */\n\tsetId(id) {\n\t\tthis.id = id;\n\t}\n\n\t/**\n\t * Sets the screen title.\n\t * @param {?string=} title\n\t */\n\tsetTitle(title) {\n\t\tthis.title = title;\n\t}\n\n\t/**\n\t * @return {string}\n\t */\n\ttoString() {\n\t\treturn this.id;\n\t}\n\n}\n\n/**\n * @param {*} object\n * @return {boolean} Whether a given instance implements\n * <code>Screen</code>.\n */\nScreen.isImplementedBy = function(object) {\n\treturn object instanceof Screen;\n};\n\nexport default Screen;\n"
        },
        {
          "id": 8,
          "identifier": "/Users/Liferay/trampo/senna.js/src/app/App.js",
          "name": "./src/app/App.js",
          "index": 8,
          "index2": 14,
          "size": 34624,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0
          ],
          "assets": [],
          "issuer": "/Users/Liferay/trampo/senna.js/src/senna.js",
          "issuerId": 13,
          "issuerName": "./src/senna.js",
          "profile": {
            "factory": 6,
            "building": 47,
            "dependencies": 407
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "reasons": [
            {
              "moduleId": 13,
              "moduleIdentifier": "/Users/Liferay/trampo/senna.js/src/senna.js",
              "module": "./src/senna.js",
              "moduleName": "./src/senna.js",
              "type": "harmony import",
              "userRequest": "./app/App",
              "loc": "5:0-28"
            },
            {
              "moduleId": 15,
              "moduleIdentifier": "/Users/Liferay/trampo/senna.js/src/app/AppDataAttributeHandler.js",
              "module": "./src/app/AppDataAttributeHandler.js",
              "moduleName": "./src/app/AppDataAttributeHandler.js",
              "type": "harmony import",
              "userRequest": "./App",
              "loc": "6:0-24"
            }
          ],
          "usedExports": [
            "default"
          ],
          "providedExports": [
            "default"
          ],
          "optimizationBailout": [],
          "depth": 1,
          "source": "'use strict';\n\nimport { addClasses, delegate, match, on, removeClasses } from 'metal-dom';\nimport { array, async, isDefAndNotNull, isString } from 'metal';\nimport { EventEmitter, EventHandler } from 'metal-events';\nimport CancellablePromise from 'metal-promise';\nimport debounce from 'metal-debounce';\nimport globals from '../globals/globals';\nimport Route from '../route/Route';\nimport Screen from '../screen/Screen';\nimport Surface from '../surface/Surface';\nimport Uri from 'metal-uri';\nimport utils from '../utils/utils';\n\nclass App extends EventEmitter {\n\n\t/**\n\t * App class that handle routes and screens lifecycle.\n\t * @constructor\n\t * @extends {EventEmitter}\n\t */\n\tconstructor() {\n\t\tsuper();\n\n\t\t/**\n\t\t * Holds the active screen.\n\t\t * @type {?Screen}\n\t\t * @protected\n\t\t */\n\t\tthis.activeScreen = null;\n\n\t\t/**\n\t\t * Holds the active path containing the query parameters.\n\t\t * @type {?string}\n\t\t * @protected\n\t\t */\n\t\tthis.activePath = null;\n\n\t\t/**\n\t\t * Allows prevent navigate from dom prevented event.\n\t\t * @type {boolean}\n\t\t * @default true\n\t\t * @protected\n\t\t */\n\t\tthis.allowPreventNavigate = true;\n\n\t\t/**\n\t\t * Holds link base path.\n\t\t * @type {!string}\n\t\t * @default ''\n\t\t * @protected\n\t\t */\n\t\tthis.basePath = '';\n\n\t\t/**\n\t\t * Holds the value of the browser path before a navigation is performed.\n\t\t * @type {!string}\n\t\t * @default the current browser path.\n\t\t * @protected\n\t\t */\n\t\tthis.browserPathBeforeNavigate = utils.getCurrentBrowserPathWithoutHash();\n\n\t\t/**\n\t\t * Captures scroll position from scroll event.\n\t\t * @type {!boolean}\n\t\t * @default true\n\t\t * @protected\n\t\t */\n\t\tthis.captureScrollPositionFromScrollEvent = true;\n\n\t\t/**\n\t\t * Holds the default page title.\n\t\t * @type {string}\n\t\t * @default null\n\t\t * @protected\n\t\t */\n\t\tthis.defaultTitle = globals.document.title;\n\n\t\t/**\n\t\t * Holds the form selector to define forms that are routed.\n\t\t * @type {!string}\n\t\t * @default form[enctype=\"multipart/form-data\"]:not([data-senna-off])\n\t\t * @protected\n\t\t */\n\t\tthis.formSelector = 'form[enctype=\"multipart/form-data\"]:not([data-senna-off])';\n\n\t\t/**\n\t\t * When enabled, the route matching ignores query string from the path.\n\t\t * @type {boolean}\n\t\t * @default false\n\t\t * @protected\n\t\t */\n\t\tthis.ignoreQueryStringFromRoutePath = false;\n\n\t\t/**\n\t\t * Holds the link selector to define links that are routed.\n\t\t * @type {!string}\n\t\t * @default a:not([data-senna-off])\n\t\t * @protected\n\t\t */\n\t\tthis.linkSelector = 'a:not([data-senna-off]):not([target=\"_blank\"])';\n\n\t\t/**\n\t\t * Holds the loading css class.\n\t\t * @type {!string}\n\t\t * @default senna-loading\n\t\t * @protected\n\t\t */\n\t\tthis.loadingCssClass = 'senna-loading';\n\n\t\t/**\n\t\t * Using the History API to manage your URLs is awesome and, as it happens,\n\t\t * a crucial feature of good web apps. One of its downsides, however, is\n\t\t * that scroll positions are stored and then, more importantly, restored\n\t\t * whenever you traverse the history. This often means unsightly jumps as\n\t\t * the scroll position changes automatically, and especially so if your app\n\t\t * does transitions, or changes the contents of the page in any way.\n\t\t * Ultimately this leads to an horrible user experience. The good news is,\n\t\t * however, that there’s a potential fix: history.scrollRestoration.\n\t\t * https://developers.google.com/web/updates/2015/09/history-api-scroll-restoration\n\t\t * @type {boolean}\n\t\t * @protected\n\t\t */\n\t\tthis.nativeScrollRestorationSupported = ('scrollRestoration' in globals.window.history);\n\n\t\t/**\n\t\t * When set to true there is a pendingNavigate that has not yet been\n\t\t * resolved or rejected.\n\t\t * @type {boolean}\n\t\t * @default false\n\t\t * @protected\n\t\t */\n\t\tthis.isNavigationPending = false;\n\n\t\t/**\n\t\t * Holds a deferred with the current navigation.\n\t\t * @type {?CancellablePromise}\n\t\t * @default null\n\t\t * @protected\n\t\t */\n\t\tthis.pendingNavigate = null;\n\n\t\t/**\n\t\t * Holds the window horizontal scroll position when the navigation using\n\t\t * back or forward happens to be restored after the surfaces are updated.\n\t\t * @type {!Number}\n\t\t * @default 0\n\t\t * @protected\n\t\t */\n\t\tthis.popstateScrollLeft = 0;\n\n\t\t/**\n\t\t * Holds the window vertical scroll position when the navigation using\n\t\t * back or forward happens to be restored after the surfaces are updated.\n\t\t * @type {!Number}\n\t\t * @default 0\n\t\t * @protected\n\t\t */\n\t\tthis.popstateScrollTop = 0;\n\n\t\t/**\n\t\t * Holds the redirect path containing the query parameters.\n\t\t * @type {?string}\n\t\t * @protected\n\t\t */\n\t\tthis.redirectPath = null;\n\n\t\t/**\n\t\t * Holds the screen routes configuration.\n\t\t * @type {?Array}\n\t\t * @default []\n\t\t * @protected\n\t\t */\n\t\tthis.routes = [];\n\n\t\t/**\n\t\t * Maps the screen instances by the url containing the parameters.\n\t\t * @type {?Object}\n\t\t * @default {}\n\t\t * @protected\n\t\t */\n\t\tthis.screens = {};\n\n\t\t/**\n\t\t * When set to true the first erroneous popstate fired on page load will be\n\t\t * ignored, only if <code>globals.window.history.state</code> is also\n\t\t * <code>null</code>.\n\t\t * @type {boolean}\n\t\t * @default false\n\t\t * @protected\n\t\t */\n\t\tthis.skipLoadPopstate = false;\n\n\t\t/**\n\t\t * Maps that index the surfaces instances by the surface id.\n\t\t * @type {?Object}\n\t\t * @default {}\n\t\t * @protected\n\t\t */\n\t\tthis.surfaces = {};\n\n\t\t/**\n\t\t * When set to true, moves the scroll position after popstate, or to the\n\t\t * top of the viewport for new navigation. If false, the browser will\n\t\t * take care of scroll restoration.\n\t\t * @type {!boolean}\n\t\t * @default true\n\t\t * @protected\n\t\t */\n\t\tthis.updateScrollPosition = true;\n\n\t\tthis.appEventHandlers_ = new EventHandler();\n\n\t\tthis.appEventHandlers_.add(\n\t\t\ton(globals.window, 'scroll', debounce(this.onScroll_.bind(this), 100)),\n\t\t\ton(globals.window, 'load', this.onLoad_.bind(this)),\n\t\t\ton(globals.window, 'popstate', this.onPopstate_.bind(this))\n\t\t);\n\n\t\tthis.on('startNavigate', this.onStartNavigate_);\n\t\tthis.on('beforeNavigate', this.onBeforeNavigate_);\n\t\tthis.on('beforeNavigate', this.onBeforeNavigateDefault_, true);\n\t\tthis.on('beforeUnload', this.onBeforeUnloadDefault_);\n\n\t\tthis.setLinkSelector(this.linkSelector);\n\t\tthis.setFormSelector(this.formSelector);\n\n\t\tthis.maybeOverloadBeforeUnload_();\n\t}\n\n\t/**\n\t * Adds one or more screens to the application.\n\t *\n\t * Example:\n\t *\n\t * <code>\n\t *   app.addRoutes({ path: '/foo', handler: FooScreen });\n\t *   or\n\t *   app.addRoutes([{ path: '/foo', handler: function(route) { return new FooScreen(); } }]);\n\t * </code>\n\t *\n\t * @param {Object} or {Array} routes Single object or an array of object.\n\t *     Each object should contain <code>path</code> and <code>screen</code>.\n\t *     The <code>path</code> should be a string or a regex that maps the\n\t *     navigation route to a screen class definition (not an instance), e.g:\n\t *         <code>{ path: \"/home:param1\", handler: MyScreen }</code>\n\t *         <code>{ path: /foo.+/, handler: MyScreen }</code>\n\t * @chainable\n\t */\n\taddRoutes(routes) {\n\t\tif (!Array.isArray(routes)) {\n\t\t\troutes = [routes];\n\t\t}\n\t\troutes.forEach((route) => {\n\t\t\tif (!(route instanceof Route)) {\n\t\t\t\troute = new Route(route.path, route.handler);\n\t\t\t}\n\t\t\tthis.routes.push(route);\n\t\t});\n\t\treturn this;\n\t}\n\n\t/**\n\t * Adds one or more surfaces to the application.\n\t * @param {Surface|String|Array.<Surface|String>} surfaces\n\t *     Surface element id or surface instance. You can also pass an Array\n\t *     whichcontains surface instances or id. In case of ID, these should be\n\t *     the id of surface element.\n\t * @chainable\n\t */\n\taddSurfaces(surfaces) {\n\t\tif (!Array.isArray(surfaces)) {\n\t\t\tsurfaces = [surfaces];\n\t\t}\n\t\tsurfaces.forEach((surface) => {\n\t\t\tif (isString(surface)) {\n\t\t\t\tsurface = new Surface(surface);\n\t\t\t}\n\t\t\tthis.surfaces[surface.getId()] = surface;\n\t\t});\n\t\treturn this;\n\t}\n\n\t/**\n\t * Returns if can navigate to path.\n\t * @param {!string} url\n\t * @return {boolean}\n\t */\n\tcanNavigate(url) {\n\t\tconst uri = utils.isWebUri(url);\n\n\t\tif (!uri) {\n\t\t\treturn false;\n\t\t}\n\n\t\tconst path = utils.getUrlPath(url);\n\n\t\tif (!this.isLinkSameOrigin_(uri.getHostname())) {\n\t\t\tconsole.log('Offsite link clicked');\n\t\t\treturn false;\n\t\t}\n\t\tif (!this.isSameBasePath_(path)) {\n\t\t\tconsole.log('Link clicked outside app\\'s base path');\n\t\t\treturn false;\n\t\t}\n\t\t// Prevents navigation if it's a hash change on the same url.\n\t\tif (uri.getHash() && utils.isCurrentBrowserPath(path)) {\n\t\t\treturn false;\n\t\t}\n\t\tif (!this.findRoute(path)) {\n\t\t\tconsole.log('No route for ' + path);\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t}\n\n\t/**\n\t * Clear screens cache.\n\t * @chainable\n\t */\n\tclearScreensCache() {\n\t\tObject.keys(this.screens).forEach((path) => {\n\t\t\tif (path === this.activePath) {\n\t\t\t\tthis.activeScreen.clearCache();\n\t\t\t} else {\n\t\t\t\tthis.removeScreen(path);\n\t\t\t}\n\t\t});\n\t}\n\n\t/**\n\t * Retrieves or create a screen instance to a path.\n\t * @param {!string} path Path containing the querystring part.\n\t * @return {Screen}\n\t */\n\tcreateScreenInstance(path, route) {\n\t\tif (!this.pendingNavigate && path === this.activePath) {\n\t\t\tconsole.log('Already at destination, refresh navigation');\n\t\t\treturn this.activeScreen;\n\t\t}\n\t\t/* jshint newcap: false */\n\t\tvar screen = this.screens[path];\n\t\tif (!screen) {\n\t\t\tvar handler = route.getHandler();\n\t\t\tif (handler === Screen || Screen.isImplementedBy(handler.prototype)) {\n\t\t\t\tscreen = new handler();\n\t\t\t} else {\n\t\t\t\tscreen = handler(route) || new Screen();\n\t\t\t}\n\t\t\tconsole.log('Create screen for [' + path + '] [' + screen + ']');\n\t\t}\n\t\treturn screen;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tdisposeInternal() {\n\t\tif (this.activeScreen) {\n\t\t\tthis.removeScreen(this.activePath);\n\t\t}\n\t\tthis.clearScreensCache();\n\t\tthis.formEventHandler_.removeListener();\n\t\tthis.linkEventHandler_.removeListener();\n\t\tthis.appEventHandlers_.removeAllListeners();\n\t\tsuper.disposeInternal();\n\t}\n\n\t/**\n\t * Dispatches to the first route handler that matches the current path, if\n\t * any.\n\t * @return {CancellablePromise} Returns a pending request cancellable promise.\n\t */\n\tdispatch() {\n\t\treturn this.navigate(utils.getCurrentBrowserPath(), true);\n\t}\n\n\t/**\n\t * Starts navigation to a path.\n\t * @param {!string} path Path containing the querystring part.\n\t * @param {boolean=} opt_replaceHistory Replaces browser history.\n\t * @return {CancellablePromise} Returns a pending request cancellable promise.\n\t */\n\tdoNavigate_(path, opt_replaceHistory) {\n\t\tif (this.activeScreen && this.activeScreen.beforeDeactivate()) {\n\t\t\tthis.pendingNavigate = CancellablePromise.reject(new CancellablePromise.CancellationError('Cancelled by active screen'));\n\t\t\treturn this.pendingNavigate;\n\t\t}\n\n\t\tvar route = this.findRoute(path);\n\t\tif (!route) {\n\t\t\tthis.pendingNavigate = CancellablePromise.reject(new CancellablePromise.CancellationError('No route for ' + path));\n\t\t\treturn this.pendingNavigate;\n\t\t}\n\n\t\tconsole.log('Navigate to [' + path + ']');\n\n\t\tthis.stopPendingNavigate_();\n\t\tthis.isNavigationPending = true;\n\n\t\tvar nextScreen = this.createScreenInstance(path, route);\n\n\t\treturn nextScreen.load(path)\n\t\t\t.then(() => {\n\t\t\t\tif (this.activeScreen) {\n\t\t\t\t\tthis.activeScreen.deactivate();\n\t\t\t\t}\n\t\t\t\tthis.prepareNavigateHistory_(path, nextScreen, opt_replaceHistory);\n\t\t\t\tthis.prepareNavigateSurfaces_(\n\t\t\t\t\tnextScreen,\n\t\t\t\t\tthis.surfaces,\n\t\t\t\t\tthis.extractParams(route, path)\n\t\t\t\t);\n\t\t\t})\n\t\t\t.then(() => nextScreen.evaluateStyles(this.surfaces))\n\t\t\t.then(() => nextScreen.flip(this.surfaces))\n\t\t\t.then(() => nextScreen.evaluateScripts(this.surfaces))\n\t\t\t.then(() => this.maybeUpdateScrollPositionState_())\n\t\t\t.then(() => this.syncScrollPositionSyncThenAsync_())\n\t\t\t.then(() => this.finalizeNavigate_(path, nextScreen))\n\t\t\t.then(() => this.maybeOverloadBeforeUnload_())\n\t\t\t.catch((reason) => {\n\t\t\t\tthis.isNavigationPending = false;\n\t\t\t\tthis.handleNavigateError_(path, nextScreen, reason);\n\t\t\t\tthrow reason;\n\t\t\t});\n\t}\n\n\t/**\n\t * Extracts params according to the given path and route.\n\t * @param {!Route} route\n\t * @param {string} path\n\t * @param {!Object}\n\t */\n\textractParams(route, path) {\n\t\treturn route.extractParams(this.getRoutePath(path));\n\t}\n\n\t/**\n\t * Finalizes a screen navigation.\n\t * @param {!string} path Path containing the querystring part.\n\t * @param {!Screen} nextScreen\n\t * @protected\n\t */\n\tfinalizeNavigate_(path, nextScreen) {\n\t\tnextScreen.activate();\n\n\t\tif (this.activeScreen && !this.activeScreen.isCacheable()) {\n\t\t\tif (this.activeScreen !== nextScreen) {\n\t\t\t\tthis.removeScreen(this.activePath);\n\t\t\t}\n\t\t}\n\n\t\tthis.activePath = path;\n\t\tthis.activeScreen = nextScreen;\n\t\tthis.browserPathBeforeNavigate = utils.getCurrentBrowserPathWithoutHash();\n\t\tthis.screens[path] = nextScreen;\n\t\tthis.isNavigationPending = false;\n\t\tthis.pendingNavigate = null;\n\t\tglobals.capturedFormElement = null;\n\t\tglobals.capturedFormButtonElement = null;\n\t\tconsole.log('Navigation done');\n\t}\n\n\t/**\n\t * Finds a route for the test path. Returns true if matches has a route,\n\t * otherwise returns null.\n\t * @param {!string} path Path containing the querystring part.\n\t * @return {?Object} Route handler if match any or <code>null</code> if the\n\t *     path is the same as the current url and the path contains a fragment.\n\t */\n\tfindRoute(path) {\n\t\tpath = this.getRoutePath(path);\n\t\tfor (var i = 0; i < this.routes.length; i++) {\n\t\t\tvar route = this.routes[i];\n\t\t\tif (route.matchesPath(path)) {\n\t\t\t\treturn route;\n\t\t\t}\n\t\t}\n\n\t\treturn null;\n\t}\n\n\t/**\n\t * Gets allow prevent navigate.\n\t * @return {boolean}\n\t */\n\tgetAllowPreventNavigate() {\n\t\treturn this.allowPreventNavigate;\n\t}\n\n\t/**\n\t * Gets link base path.\n\t * @return {!string}\n\t */\n\tgetBasePath() {\n\t\treturn this.basePath;\n\t}\n\n\t/**\n\t * Gets the default page title.\n\t * @return {string} defaultTitle\n\t */\n\tgetDefaultTitle() {\n\t\treturn this.defaultTitle;\n\t}\n\n\t/**\n\t * Gets the form selector.\n\t * @return {!string}\n\t */\n\tgetFormSelector() {\n\t\treturn this.formSelector;\n\t}\n\n\t/**\n\t * Check if route matching is ignoring query string from the route path.\n\t * @return {boolean}\n\t */\n\tgetIgnoreQueryStringFromRoutePath() {\n\t\treturn this.ignoreQueryStringFromRoutePath;\n\t}\n\n\t/**\n\t * Gets the link selector.\n\t * @return {!string}\n\t */\n\tgetLinkSelector() {\n\t\treturn this.linkSelector;\n\t}\n\n\t/**\n\t * Gets the loading css class.\n\t * @return {!string}\n\t */\n\tgetLoadingCssClass() {\n\t\treturn this.loadingCssClass;\n\t}\n\n\t/**\n\t * Returns the given path formatted to be matched by a route. This will,\n\t * for example, remove the base path from it, but make sure it will end\n\t * with a '/'.\n\t * @param {string} path\n\t * @return {string}\n\t */\n\tgetRoutePath(path) {\n\t\tif (this.getIgnoreQueryStringFromRoutePath()) {\n\t\t\tpath = utils.getUrlPathWithoutHashAndSearch(path);\n\t\t\treturn utils.getUrlPathWithoutHashAndSearch(path.substr(this.basePath.length));\n\t\t}\n\n\t\tpath = utils.getUrlPathWithoutHash(path);\n\t\treturn utils.getUrlPathWithoutHash(path.substr(this.basePath.length));\n\t}\n\n\t/**\n\t * Gets the update scroll position value.\n\t * @return {boolean}\n\t */\n\tgetUpdateScrollPosition() {\n\t\treturn this.updateScrollPosition;\n\t}\n\n\t/**\n\t * Handle navigation error.\n\t * @param {!string} path Path containing the querystring part.\n\t * @param {!Screen} nextScreen\n\t * @param {!Error} error\n\t * @protected\n\t */\n\thandleNavigateError_(path, nextScreen, error) {\n\t\tconsole.log('Navigation error for [' + nextScreen + '] (' + error + ')');\n\t\tthis.emit('navigationError', {\n\t\t\terror,\n\t\t\tnextScreen,\n\t\t\tpath\n\t\t});\n\t\tif (!utils.isCurrentBrowserPath(path)) {\n\t\t\tif (this.isNavigationPending && this.pendingNavigate) {\n\t\t\t\tthis.pendingNavigate.thenAlways(() => this.removeScreen(path), this);\n\t\t\t} else {\n\t\t\t\tthis.removeScreen(path);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Checks if app has routes.\n\t * @return {boolean}\n\t */\n\thasRoutes() {\n\t\treturn this.routes.length > 0;\n\t}\n\n\t/**\n\t * Tests if hostname is an offsite link.\n\t * @param {!string} hostname Link hostname to compare with\n\t *     <code>globals.window.location.hostname</code>.\n\t * @return {boolean}\n\t * @protected\n\t */\n\tisLinkSameOrigin_(hostname) {\n\t\treturn hostname === globals.window.location.hostname;\n\t}\n\n\t/**\n\t * Tests if link element has the same app's base path.\n\t * @param {!string} path Link path containing the querystring part.\n\t * @return {boolean}\n\t * @protected\n\t */\n\tisSameBasePath_(path) {\n\t\treturn path.indexOf(this.basePath) === 0;\n\t}\n\n\t/**\n\t * Lock the document scroll in order to avoid the browser native back and\n\t * forward navigation to change the scroll position. In the end of\n\t * navigation lifecycle scroll is repositioned.\n\t * @protected\n\t */\n\tlockHistoryScrollPosition_() {\n\t\tvar state = globals.window.history.state;\n\t\tif (!state) {\n\t\t\treturn;\n\t\t}\n\t\t// Browsers are inconsistent when re-positioning the scroll history on\n\t\t// popstate. At some browsers, history scroll happens before popstate, then\n\t\t// lock the scroll on the last known position as soon as possible after the\n\t\t// current JS execution context and capture the current value. Some others,\n\t\t// history scroll happens after popstate, in this case, we bind an once\n\t\t// scroll event to lock the las known position. Lastly, the previous two\n\t\t// behaviors can happen even on the same browser, hence the race will decide\n\t\t// the winner.\n\t\tvar winner = false;\n\t\tvar switchScrollPositionRace = function() {\n\t\t\tglobals.document.removeEventListener('scroll', switchScrollPositionRace, false);\n\t\t\tif (!winner) {\n\t\t\t\tglobals.window.scrollTo(state.scrollLeft, state.scrollTop);\n\t\t\t\twinner = true;\n\t\t\t}\n\t\t};\n\t\tasync.nextTick(switchScrollPositionRace);\n\t\tglobals.document.addEventListener('scroll', switchScrollPositionRace, false);\n\t}\n\n\t/**\n\t * If supported by the browser, disables native scroll restoration and\n\t * stores current value.\n\t */\n\tmaybeDisableNativeScrollRestoration() {\n\t\tif (this.nativeScrollRestorationSupported) {\n\t\t\tthis.nativeScrollRestoration_ = globals.window.history.scrollRestoration;\n\t\t\tglobals.window.history.scrollRestoration = 'manual';\n\t\t}\n\t}\n\n\t/**\n\t * Maybe navigate to a path.\n\t * @param {string} href Information about the link's href.\n\t * @param {Event} event Dom event that initiated the navigation.\n\t */\n\tmaybeNavigate_(href, event) {\n\t\tif (!this.canNavigate(href)) {\n\t\t\treturn;\n\t\t}\n\n\t\tglobals.capturedFormElement = event.capturedFormElement;\n\t\tglobals.capturedFormButtonElement = event.capturedFormButtonElement;\n\n\t\tvar navigateFailed = false;\n\t\ttry {\n\t\t\tthis.navigate(utils.getUrlPath(href), false, event);\n\t\t} catch (err) {\n\t\t\t// Do not prevent link navigation in case some synchronous error occurs\n\t\t\tnavigateFailed = true;\n\t\t}\n\n\t\tif (!navigateFailed) {\n\t\t\tevent.preventDefault();\n\t\t}\n\t}\n\n\t/**\n\t * Checks whether the onbeforeunload global event handler is overloaded\n\t * by client code. If so, it replaces with a function that halts the normal\n\t * event flow in relation with the client onbeforeunload function.\n\t * This can be in most part used to prematurely terminate navigation to other pages\n\t * according to the given constrait(s). \n\t * @protected \n\t */\n\tmaybeOverloadBeforeUnload_() {\n\t\tif ('function' === typeof window.onbeforeunload) {\n\t\t\twindow._onbeforeunload = window.onbeforeunload;\n\n\t\t\twindow.onbeforeunload = event => {\n\t\t\t\tthis.emit('beforeUnload', event);\n\t\t\t\tif (event && event.defaultPrevented) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t};\n\n\t\t\t// mark the updated handler due unwanted recursion \n\t\t\twindow.onbeforeunload._overloaded = true;\n\t\t}\n\t}\n\n\t/**\n\t * Maybe reposition scroll to hashed anchor.\n\t */\n\tmaybeRepositionScrollToHashedAnchor() {\n\t\tconst hash = globals.window.location.hash;\n\t\tif (hash) {\n\t\t\tlet anchorElement = globals.document.getElementById(hash.substring(1));\n\t\t\tif (anchorElement) {\n\t\t\t\tconst {offsetLeft, offsetTop} = utils.getNodeOffset(anchorElement);\n\t\t\t\tglobals.window.scrollTo(offsetLeft, offsetTop);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * If supported by the browser, restores native scroll restoration to the\n\t * value captured by `maybeDisableNativeScrollRestoration`.\n\t */\n\tmaybeRestoreNativeScrollRestoration() {\n\t\tif (this.nativeScrollRestorationSupported && this.nativeScrollRestoration_) {\n\t\t\tglobals.window.history.scrollRestoration = this.nativeScrollRestoration_;\n\t\t}\n\t}\n\n\t/**\n\t * Maybe restore redirected path hash in case both the current path and\n\t * the given path are the same.\n\t * @param {!string} path Path before navigation.\n\t * @param {!string} redirectPath Path after navigation.\n\t * @param {!string} hash Hash to be added to the path.\n\t * @return {!string} Returns the path with the hash restored.\n\t */\n\tmaybeRestoreRedirectPathHash_(path, redirectPath, hash) {\n\t\tif (redirectPath === utils.getUrlPathWithoutHash(path)) {\n\t\t\treturn redirectPath + hash;\n\t\t}\n\t\treturn redirectPath;\n\t}\n\n\t/**\n\t * Maybe update scroll position in history state to anchor on path.\n\t * @param {!string} path Path containing anchor\n\t */\n\tmaybeUpdateScrollPositionState_() {\n\t\tvar hash = globals.window.location.hash;\n\t\tvar anchorElement = globals.document.getElementById(hash.substring(1));\n\t\tif (anchorElement) {\n\t\t\tconst {offsetLeft, offsetTop} = utils.getNodeOffset(anchorElement);\n\t\t\tthis.saveHistoryCurrentPageScrollPosition_(offsetTop, offsetLeft);\n\t\t}\n\t}\n\n\t/**\n\t * Navigates to the specified path if there is a route handler that matches.\n\t * @param {!string} path Path to navigate containing the base path.\n\t * @param {boolean=} opt_replaceHistory Replaces browser history.\n\t * @param {Event=} event Optional event object that triggered the navigation.\n\t * @return {CancellablePromise} Returns a pending request cancellable promise.\n\t */\n\tnavigate(path, opt_replaceHistory, opt_event) {\n\t\tif (!utils.isHtml5HistorySupported()) {\n\t\t\tthrow new Error('HTML5 History is not supported. Senna will not intercept navigation.');\n\t\t}\n\n\t\t// When reloading the same path do replaceState instead of pushState to\n\t\t// avoid polluting history with states with the same path.\n\t\tif (path === this.activePath) {\n\t\t\topt_replaceHistory = true;\n\t\t}\n\n\t\tthis.emit('beforeNavigate', {\n\t\t\tevent: opt_event,\n\t\t\tpath: path,\n\t\t\treplaceHistory: !!opt_replaceHistory\n\t\t});\n\n\t\treturn this.pendingNavigate;\n\t}\n\n\t/**\n\t * Befores navigation to a path.\n\t * @param {!Event} event Event facade containing <code>path</code> and\n\t *     <code>replaceHistory</code>.\n\t * @protected\n\t */\n\tonBeforeNavigate_(event) {\n\t\tif (globals.capturedFormElement) {\n\t\t\tevent.form = globals.capturedFormElement;\n\t\t}\n\t}\n\n\t/**\n\t * Befores navigation to a path. Runs after external listeners.\n\t * @param {!Event} event Event facade containing <code>path</code> and\n\t *     <code>replaceHistory</code>.\n\t * @protected\n\t */\n\tonBeforeNavigateDefault_(event) {\n\t\tif (this.pendingNavigate) {\n\t\t\tif (this.pendingNavigate.path === event.path) {\n\t\t\t\tconsole.log('Waiting...');\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t\tthis.emit('beforeUnload', event);\n\n\t\tthis.emit('startNavigate', {\n\t\t\tform: event.form,\n\t\t\tpath: event.path,\n\t\t\treplaceHistory: event.replaceHistory\n\t\t});\n\t}\n\n\t/**\n\t * Custom event handler that executes the original listener that has been\n\t * added by the client code and terminates the navigation accordingly.\n\t * @param {!Event} event original Event facade.\n\t * @protected\n\t */\n\tonBeforeUnloadDefault_(event) {\n\t\tvar func = window._onbeforeunload;\n\t\tif (func && !func._overloaded && func()) {\n\t\t\tevent.preventDefault();\n\t\t}\n\t}\n\n\t/**\n\t * Intercepts document clicks and test link elements in order to decide\n\t * whether Surface app can navigate.\n\t * @param {!Event} event Event facade\n\t * @protected\n\t */\n\tonDocClickDelegate_(event) {\n\t\tif (event.altKey || event.ctrlKey || event.metaKey || event.shiftKey || event.button) {\n\t\t\tconsole.log('Navigate aborted, invalid mouse button or modifier key pressed.');\n\t\t\treturn;\n\t\t}\n\t\tthis.maybeNavigate_(event.delegateTarget.href, event);\n\t}\n\n\t/**\n\t * Intercepts document form submits and test action path in order to decide\n\t * whether Surface app can navigate.\n\t * @param {!Event} event Event facade\n\t * @protected\n\t */\n\tonDocSubmitDelegate_(event) {\n\t\tvar form = event.delegateTarget;\n\t\tif (form.method === 'get') {\n\t\t\tconsole.log('GET method not supported');\n\t\t\treturn;\n\t\t}\n\t\tevent.capturedFormElement = form;\n\t\tconst buttonSelector = 'button:not([type]),button[type=submit],input[type=submit]';\n\t\tif (match(globals.document.activeElement, buttonSelector)) {\n\t\t\tevent.capturedFormButtonElement = globals.document.activeElement;\n\t\t} else {\n\t\t\tevent.capturedFormButtonElement = form.querySelector(buttonSelector);\n\t\t}\n\t\tthis.maybeNavigate_(form.action, event);\n\t}\n\n\t/**\n\t * Listens to the window's load event in order to avoid issues with some browsers\n\t * that trigger popstate calls on the first load. For more information see\n\t * http://stackoverflow.com/questions/6421769/popstate-on-pages-load-in-chrome.\n\t * @protected\n\t */\n\tonLoad_() {\n\t\tthis.skipLoadPopstate = true;\n\t\tsetTimeout(() => {\n\t\t\t// The timeout ensures that popstate events will be unblocked right\n\t\t\t// after the load event occured, but not in the same event-loop cycle.\n\t\t\tthis.skipLoadPopstate = false;\n\t\t}, 0);\n\t\t// Try to reposition scroll to the hashed anchor when page loads.\n\t\tthis.maybeRepositionScrollToHashedAnchor();\n\t}\n\n\t/**\n\t * Handles browser history changes and fires app's navigation if the state\n\t * belows to us. If we detect a popstate and the state is <code>null</code>,\n\t * assume it is navigating to an external page or to a page we don't have\n\t * route, then <code>globals.window.location.reload()</code> is invoked in order to\n\t * reload the content to the current url.\n\t * @param {!Event} event Event facade\n\t * @protected\n\t */\n\tonPopstate_(event) {\n\t\tif (this.skipLoadPopstate) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Do not navigate if the popstate was triggered by a hash change.\n\t\tif (utils.isCurrentBrowserPath(this.browserPathBeforeNavigate)) {\n\t\t\tthis.maybeRepositionScrollToHashedAnchor();\n\t\t\treturn;\n\t\t}\n\n\t\tvar state = event.state;\n\n\t\tif (!state) {\n\t\t\tif (globals.window.location.hash) {\n\t\t\t\t// If senna is on an redirect path and a hash popstate happens\n\t\t\t\t// to a different url, reload the browser. This behavior doesn't\n\t\t\t\t// require senna to route hashed links and is closer to native\n\t\t\t\t// browser behavior.\n\t\t\t\tif (this.redirectPath && !utils.isCurrentBrowserPath(this.redirectPath)) {\n\t\t\t\t\tthis.reloadPage();\n\t\t\t\t}\n\t\t\t\t// Always try to reposition scroll to the hashed anchor when\n\t\t\t\t// hash popstate happens.\n\t\t\t\tthis.maybeRepositionScrollToHashedAnchor();\n\t\t\t} else {\n\t\t\t\tthis.reloadPage();\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\n\t\tif (state.senna) {\n\t\t\tconsole.log('History navigation to [' + state.path + ']');\n\t\t\tthis.popstateScrollTop = state.scrollTop;\n\t\t\tthis.popstateScrollLeft = state.scrollLeft;\n\t\t\tif (!this.nativeScrollRestorationSupported) {\n\t\t\t\tthis.lockHistoryScrollPosition_();\n\t\t\t}\n\t\t\tthis.navigate(state.path, true);\n\t\t}\n\t}\n\n\t/**\n\t * Listens document scroll changes in order to capture the possible lock\n\t * scroll position for history scrolling.\n\t * @protected\n\t */\n\tonScroll_() {\n\t\tif (this.captureScrollPositionFromScrollEvent) {\n\t\t\tthis.saveHistoryCurrentPageScrollPosition_(globals.window.pageYOffset, globals.window.pageXOffset);\n\t\t}\n\t}\n\n\t/**\n\t * Starts navigation to a path.\n\t * @param {!Event} event Event facade containing <code>path</code> and\n\t *     <code>replaceHistory</code>.\n\t * @protected\n\t */\n\tonStartNavigate_(event) {\n\t\tthis.maybeDisableNativeScrollRestoration();\n\t\tthis.captureScrollPositionFromScrollEvent = false;\n\t\taddClasses(globals.document.documentElement, this.loadingCssClass);\n\n\t\tvar endNavigatePayload = {\n\t\t\tform: event.form,\n\t\t\tpath: event.path\n\t\t};\n\n\t\tthis.pendingNavigate = this.doNavigate_(event.path, event.replaceHistory)\n\t\t\t.catch((reason) => {\n\t\t\t\tendNavigatePayload.error = reason;\n\t\t\t\tthrow reason;\n\t\t\t})\n\t\t\t.thenAlways(() => {\n\t\t\t\tif (!this.pendingNavigate) {\n\t\t\t\t\tremoveClasses(globals.document.documentElement, this.loadingCssClass);\n\t\t\t\t\tthis.maybeRestoreNativeScrollRestoration();\n\t\t\t\t\tthis.captureScrollPositionFromScrollEvent = true;\n\t\t\t\t}\n\t\t\t\tthis.emit('endNavigate', endNavigatePayload);\n\t\t\t});\n\n\t\tthis.pendingNavigate.path = event.path;\n\t}\n\n\t/**\n\t * Prefetches the specified path if there is a route handler that matches.\n\t * @param {!string} path Path to navigate containing the base path.\n\t * @return {CancellablePromise} Returns a pending request cancellable promise.\n\t */\n\tprefetch(path) {\n\t\tvar route = this.findRoute(path);\n\t\tif (!route) {\n\t\t\treturn CancellablePromise.reject(new CancellablePromise.CancellationError('No route for ' + path));\n\t\t}\n\n\t\tconsole.log('Prefetching [' + path + ']');\n\n\t\tvar nextScreen = this.createScreenInstance(path, route);\n\n\t\treturn nextScreen.load(path)\n\t\t\t.then(() => this.screens[path] = nextScreen)\n\t\t\t.catch((reason) => {\n\t\t\t\tthis.handleNavigateError_(path, nextScreen, reason);\n\t\t\t\tthrow reason;\n\t\t\t});\n\t}\n\n\t/**\n\t * Prepares screen flip. Updates history state and surfaces content.\n\t * @param {!string} path Path containing the querystring part.\n\t * @param {!Screen} nextScreen\n\t * @param {boolean=} opt_replaceHistory Replaces browser history.\n\t */\n\tprepareNavigateHistory_(path, nextScreen, opt_replaceHistory) {\n\t\tlet title = nextScreen.getTitle();\n\t\tif (!isString(title)) {\n\t\t\ttitle = this.getDefaultTitle();\n\t\t}\n\t\tlet redirectPath = nextScreen.beforeUpdateHistoryPath(path);\n\t\tconst historyState = {\n\t\t\tform: isDefAndNotNull(globals.capturedFormElement),\n\t\t\tpath,\n\t\t\tredirectPath,\n\t\t\tscrollLeft: 0,\n\t\t\tscrollTop: 0,\n\t\t\tsenna: true\n\t\t};\n\t\tif (opt_replaceHistory) {\n\t\t\thistoryState.scrollTop = this.popstateScrollTop;\n\t\t\thistoryState.scrollLeft = this.popstateScrollLeft;\n\t\t}\n\t\tconst hash = new Uri(path).getHash();\n\t\tredirectPath = this.maybeRestoreRedirectPathHash_(path, redirectPath, hash);\n\t\tthis.updateHistory_(title, redirectPath, nextScreen.beforeUpdateHistoryState(historyState), opt_replaceHistory);\n\t\tthis.redirectPath = redirectPath;\n\t}\n\n\t/**\n\t * Prepares screen flip. Updates history state and surfaces content.\n\t * @param {!Screen} nextScreen\n\t * @param {!Object} surfaces Map of surfaces to flip keyed by surface id.\n\t * @param {!Object} params Params extracted from the current path.\n\t */\n\tprepareNavigateSurfaces_(nextScreen, surfaces, params) {\n\t\tObject.keys(surfaces).forEach((id) => {\n\t\t\tvar surfaceContent = nextScreen.getSurfaceContent(id, params);\n\t\t\tsurfaces[id].addContent(nextScreen.getId(), surfaceContent);\n\t\t\tconsole.log('Screen [' + nextScreen.getId() + '] add content to surface ' +\n\t\t\t\t'[' + surfaces[id] + '] [' + (isDefAndNotNull(surfaceContent) ? '...' : 'empty') + ']');\n\t\t});\n\t}\n\n\t/**\n\t * Reloads the page by performing `window.location.reload()`.\n\t */\n\treloadPage() {\n\t\tglobals.window.location.reload();\n\t}\n\n\t/**\n\t * Removes route instance from app routes.\n\t * @param {Route} route\n\t * @return {boolean} True if an element was removed.\n\t */\n\tremoveRoute(route) {\n\t\treturn array.remove(this.routes, route);\n\t}\n\n\t/**\n\t * Removes a screen.\n\t * @param {!string} path Path containing the querystring part.\n\t */\n\tremoveScreen(path) {\n\t\tvar screen = this.screens[path];\n\t\tif (screen) {\n\t\t\tObject.keys(this.surfaces).forEach((surfaceId) => this.surfaces[surfaceId].remove(screen.getId()));\n\t\t\tscreen.dispose();\n\t\t\tdelete this.screens[path];\n\t\t}\n\t}\n\n\t/**\n\t * Saves given scroll position into history state.\n\t * @param {!number} scrollTop Number containing the top scroll position to be saved.\n\t * @param {!number} scrollLeft Number containing the left scroll position to be saved.\n\t */\n\tsaveHistoryCurrentPageScrollPosition_(scrollTop, scrollLeft) {\n\t\tvar state = globals.window.history.state;\n\t\tif (state && state.senna) {\n\t\t\t[state.scrollTop, state.scrollLeft] = [scrollTop, scrollLeft];\n\t\t\tglobals.window.history.replaceState(state, null, null);\n\t\t}\n\t}\n\n\t/**\n\t * Sets allow prevent navigate.\n\t * @param {boolean} allowPreventNavigate\n\t */\n\tsetAllowPreventNavigate(allowPreventNavigate) {\n\t\tthis.allowPreventNavigate = allowPreventNavigate;\n\t}\n\n\t/**\n\t * Sets link base path.\n\t * @param {!string} path\n\t */\n\tsetBasePath(basePath) {\n\t\tthis.basePath = utils.removePathTrailingSlash(basePath);\n\t}\n\n\t/**\n\t * Sets the default page title.\n\t * @param {string} defaultTitle\n\t */\n\tsetDefaultTitle(defaultTitle) {\n\t\tthis.defaultTitle = defaultTitle;\n\t}\n\n\t/**\n\t * Sets the form selector.\n\t * @param {!string} formSelector\n\t */\n\tsetFormSelector(formSelector) {\n\t\tthis.formSelector = formSelector;\n\t\tif (this.formEventHandler_) {\n\t\t\tthis.formEventHandler_.removeListener();\n\t\t}\n\t\tthis.formEventHandler_ = delegate(document, 'submit', this.formSelector, this.onDocSubmitDelegate_.bind(this), this.allowPreventNavigate);\n\t}\n\n\t/**\n\t * Sets if route matching should ignore query string from the route path.\n\t * @param {boolean} ignoreQueryStringFromRoutePath\n\t */\n\tsetIgnoreQueryStringFromRoutePath(ignoreQueryStringFromRoutePath) {\n\t\tthis.ignoreQueryStringFromRoutePath = ignoreQueryStringFromRoutePath;\n\t}\n\n\t/**\n\t * Sets the link selector.\n\t * @param {!string} linkSelector\n\t */\n\tsetLinkSelector(linkSelector) {\n\t\tthis.linkSelector = linkSelector;\n\t\tif (this.linkEventHandler_) {\n\t\t\tthis.linkEventHandler_.removeListener();\n\t\t}\n\t\tthis.linkEventHandler_ = delegate(document, 'click', this.linkSelector, this.onDocClickDelegate_.bind(this), this.allowPreventNavigate);\n\t}\n\n\t/**\n\t * Sets the loading css class.\n\t * @param {!string} loadingCssClass\n\t */\n\tsetLoadingCssClass(loadingCssClass) {\n\t\tthis.loadingCssClass = loadingCssClass;\n\t}\n\n\t/**\n\t * Sets the update scroll position value.\n\t * @param {boolean} updateScrollPosition\n\t */\n\tsetUpdateScrollPosition(updateScrollPosition) {\n\t\tthis.updateScrollPosition = updateScrollPosition;\n\t}\n\n\t/**\n\t * Cancels pending navigate with <code>Cancel pending navigation</code> error.\n\t * @protected\n\t */\n\tstopPendingNavigate_() {\n\t\tif (this.pendingNavigate) {\n\t\t\tthis.pendingNavigate.cancel('Cancel pending navigation');\n\t\t\tthis.pendingNavigate = null;\n\t\t}\n\t}\n\n\t/**\n\t * Sync document scroll position twice, the first one synchronous and then\n\t * one inside <code>async.nextTick</code>. Relevant to browsers that fires\n\t * scroll restoration asynchronously after popstate.\n\t * @protected\n\t * @return {?CancellablePromise=}\n\t */\n\tsyncScrollPositionSyncThenAsync_() {\n\t\tvar state = globals.window.history.state;\n\t\tif (!state) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar scrollTop = state.scrollTop;\n\t\tvar scrollLeft = state.scrollLeft;\n\n\t\tvar sync = () => {\n\t\t\tif (this.updateScrollPosition) {\n\t\t\t\tglobals.window.scrollTo(scrollLeft, scrollTop);\n\t\t\t}\n\t\t};\n\n\t\treturn new CancellablePromise((resolve) => sync() & async.nextTick(() => sync() & resolve()));\n\t}\n\n\t/**\n\t * Updates or replace browser history.\n\t * @param {?string} title Document title.\n\t * @param {!string} path Path containing the querystring part.\n\t * @param {!object} state\n\t * @param {boolean=} opt_replaceHistory Replaces browser history.\n\t * @protected\n\t */\n\tupdateHistory_(title, path, state, opt_replaceHistory) {\n\t\tif (opt_replaceHistory) {\n\t\t\tglobals.window.history.replaceState(state, title, path);\n\t\t} else {\n\t\t\tglobals.window.history.pushState(state, title, path);\n\t\t}\n\n\t\tlet titleNode = globals.document.querySelector('title');\n\t\tif (titleNode) {\n\t\t\ttitleNode.innerHTML = title;\n\t\t} else {\n\t\t\tglobals.document.title = title;\n\t\t}\n\t}\n\n}\n\nexport default App;\n"
        },
        {
          "id": 9,
          "identifier": "/Users/Liferay/trampo/senna.js/src/surface/Surface.js",
          "name": "./src/surface/Surface.js",
          "index": 17,
          "index2": 13,
          "size": 7376,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0
          ],
          "assets": [],
          "issuer": "/Users/Liferay/trampo/senna.js/src/app/App.js",
          "issuerId": 8,
          "issuerName": "./src/app/App.js",
          "profile": {
            "factory": 408,
            "building": 11,
            "dependencies": 1
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "reasons": [
            {
              "moduleId": 8,
              "moduleIdentifier": "/Users/Liferay/trampo/senna.js/src/app/App.js",
              "module": "./src/app/App.js",
              "moduleName": "./src/app/App.js",
              "type": "harmony import",
              "userRequest": "../surface/Surface",
              "loc": "11:0-41"
            },
            {
              "moduleId": 10,
              "moduleIdentifier": "/Users/Liferay/trampo/senna.js/src/screen/HtmlScreen.js",
              "module": "./src/screen/HtmlScreen.js",
              "moduleName": "./src/screen/HtmlScreen.js",
              "type": "harmony import",
              "userRequest": "../surface/Surface",
              "loc": "8:0-41"
            }
          ],
          "usedExports": [
            "default"
          ],
          "providedExports": [
            "default"
          ],
          "optimizationBailout": [],
          "depth": 2,
          "source": "'use strict';\n\nimport globals from '../globals/globals';\nimport { Disposable, isDefAndNotNull } from 'metal';\nimport { append, removeChildren, exitDocument } from 'metal-dom';\nimport CancellablePromise from 'metal-promise';\n\nclass Surface extends Disposable {\n\n\t/**\n\t * Surface class representing the references to elements on the page that\n\t * can potentially be updated by <code>App</code>.\n\t * @param {string} id\n\t * @constructor\n\t */\n\tconstructor(id) {\n\t\tsuper();\n\n\t\tif (!id) {\n\t\t\tthrow new Error('Surface element id not specified. A surface element requires a valid id.');\n\t\t}\n\n\t\t/**\n\t\t * Holds the active child element.\n\t\t * @type {Element}\n\t\t * @default null\n\t\t * @protected\n\t\t */\n\t\tthis.activeChild = null;\n\n\t\t/**\n\t\t * Holds the default child element.\n\t\t * @type {Element}\n\t\t * @default null\n\t\t * @protected\n\t\t */\n\t\tthis.defaultChild = null;\n\n\t\t/**\n\t\t * Holds the element with the specified surface id, if not found creates a\n\t\t * new element with the specified id.\n\t\t * @type {Element}\n\t\t * @default null\n\t\t * @protected\n\t\t */\n\t\tthis.element = null;\n\n\t\t/**\n\t\t * Holds the surface id.\n\t\t * @type {String}\n\t\t * @default null\n\t\t * @protected\n\t\t */\n\t\tthis.id = id;\n\n\t\t/**\n\t\t * Holds the default transitionFn for the surfaces.\n\t\t * @param {?Element=} from The visible surface element.\n\t\t * @param {?Element=} to The surface element to be flipped.\n\t\t * @default null\n\t\t */\n\t\tthis.transitionFn = null;\n\n\t\tthis.defaultChild = this.getChild(Surface.DEFAULT);\n\t\tthis.maybeWrapContentAsDefault_();\n\t\tthis.activeChild = this.defaultChild;\n\t}\n\n\t/**\n\t * Adds screen content to a surface. If content hasn't been passed, see if\n\t * an element exists in the DOM that matches the id. By convention, the\n\t * element should already be nested in the right element and should have an\n\t * id that is a concatentation of the surface id + '-' + the screen id.\n\t * @param {!string} screenId The screen id the content belongs too.\n\t * @param {?string|Element=} opt_content The string content or element to\n\t *     add be added as surface content.\n\t * @return {Element}\n\t */\n\taddContent(screenId, opt_content) {\n\t\tvar child = this.defaultChild;\n\n\t\tif (isDefAndNotNull(opt_content)) {\n\t\t\tchild = this.getChild(screenId);\n\t\t\tif (child) {\n\t\t\t\tremoveChildren(child);\n\t\t\t} else {\n\t\t\t\tchild = this.createChild(screenId);\n\t\t\t\tthis.transition(child, null);\n\t\t\t}\n\t\t\tappend(child, opt_content);\n\t\t}\n\n\t\tvar element = this.getElement();\n\n\t\tif (element && child) {\n\t\t\tappend(element, child);\n\t\t}\n\n\t\treturn child;\n\t}\n\n\t/**\n\t * Creates child node for the surface.\n\t * @param {!string} screenId The screen id.\n\t * @return {Element}\n\t */\n\tcreateChild(screenId) {\n\t\tvar child = globals.document.createElement('div');\n\t\tchild.setAttribute('id', this.makeId_(screenId));\n\t\treturn child;\n\t}\n\n\t/**\n\t * Gets child node of the surface.\n\t * @param {!string} screenId The screen id.\n\t * @return {?Element}\n\t */\n\tgetChild(screenId) {\n\t\treturn globals.document.getElementById(this.makeId_(screenId));\n\t}\n\n\t/**\n\t * Gets the surface element from element, and sets it to the el property of\n\t * the current instance.\n\t * <code>this.element</code> will be used.\n\t * @return {?Element} The current surface element.\n\t */\n\tgetElement() {\n\t\tif (this.element) {\n\t\t\treturn this.element;\n\t\t}\n\t\tthis.element = globals.document.getElementById(this.id);\n\t\treturn this.element;\n\t}\n\n\t/**\n\t * Gets the surface id.\n\t * @return {String}\n\t */\n\tgetId() {\n\t\treturn this.id;\n\t}\n\n\t/**\n\t * Gets the surface transition function.\n\t * See <code>Surface.defaultTransition</code>.\n\t * @return {?Function=} The transition function.\n\t */\n\tgetTransitionFn() {\n\t\treturn this.transitionFn;\n\t}\n\n\t/**\n\t * Makes the id for the element that holds content for a screen.\n\t * @param {!string} screenId The screen id the content belongs too.\n\t * @return {String}\n\t * @private\n\t */\n\tmakeId_(screenId) {\n\t\treturn this.id + '-' + screenId;\n\t}\n\n\t/**\n\t * If default child is missing, wraps surface content as default child. If\n\t * surface have static content, make sure to place a\n\t * <code>surfaceId-default</code> element inside surface, only contents\n\t * inside the default child will be replaced by navigation.\n\t */\n\tmaybeWrapContentAsDefault_() {\n\t\tvar element = this.getElement();\n\t\tif (element && !this.defaultChild) {\n\t\t\tvar fragment = globals.document.createDocumentFragment();\n\t\t\twhile (element.firstChild) {\n\t\t\t\tfragment.appendChild(element.firstChild);\n\t\t\t}\n\t\t\tthis.defaultChild = this.addContent(Surface.DEFAULT, fragment);\n\t\t\tthis.transition(null, this.defaultChild);\n\t\t}\n\t}\n\n\t/**\n\t * Sets the surface id.\n\t * @param {!string} id\n\t */\n\tsetId(id) {\n\t\tthis.id = id;\n\t}\n\n\t/**\n\t * Sets the surface transition function.\n\t * See <code>Surface.defaultTransition</code>.\n\t * @param {?Function=} transitionFn The transition function.\n\t */\n\tsetTransitionFn(transitionFn) {\n\t\tthis.transitionFn = transitionFn;\n\t}\n\n\t/**\n\t * Shows screen content from a surface.\n\t * @param {String} screenId The screen id to show.\n\t * @return {CancellablePromise} Pauses the navigation until it is resolved.\n\t */\n\tshow(screenId) {\n\t\tvar from = this.activeChild;\n\t\tvar to = this.getChild(screenId);\n\t\tif (!to) {\n\t\t\tto = this.defaultChild;\n\t\t}\n\t\tthis.activeChild = to;\n\t\treturn this.transition(from, to).thenAlways(() => {\n\t\t\tif (from && from !== to) {\n\t\t\t\texitDocument(from);\n\t\t\t}\n\t\t});\n\t}\n\n\t/**\n\t * Removes screen content from a surface.\n\t * @param {!string} screenId The screen id to remove.\n\t */\n\tremove(screenId) {\n\t\tvar child = this.getChild(screenId);\n\t\tif (child) {\n\t\t\texitDocument(child);\n\t\t}\n\t}\n\n\t/**\n\t * @return {String}\n\t */\n\ttoString() {\n\t\treturn this.id;\n\t}\n\n\t/**\n\t * Invokes the transition function specified on <code>transition</code> attribute.\n\t * @param {?Element=} from\n\t * @param {?Element=} to\n\t * @return {?CancellablePromise=} This can return a promise, which will pause the\n\t *     navigation until it is resolved.\n\t */\n\ttransition(from, to) {\n\t\tvar transitionFn = this.transitionFn || Surface.defaultTransition;\n\t\treturn CancellablePromise.resolve(transitionFn.call(this, from, to));\n\t}\n\n}\n\n/**\n   * Holds the default surface name. Elements on the page must contain a child\n   * element containing the default content, this element must be as following:\n   *\n   * Example:\n   * <code>\n   *   <div id=\"mysurface\">\n   *     <div id=\"mysurface-default\">Default surface content.</div>\n   *   </div>\n   * </code>\n   *\n   * The default content is relevant for the initial page content. When a\n   * screen doesn't provide content for the surface the default content is\n   * restored into the page.\n   *\n   * @type {!String}\n   * @default default\n   * @static\n   */\nSurface.DEFAULT = 'default';\n\n/**\n * Holds the default transition for all surfaces. Each surface could have its\n * own transition.\n *\n * Example:\n *\n * <code>\n * surface.setTransitionFn(function(from, to) {\n *   if (from) {\n *     from.style.display = 'none';\n *     from.classList.remove('flipped');\n *   }\n *   if (to) {\n *     to.style.display = 'block';\n *     to.classList.add('flipped');\n *   }\n *   return null;\n * });\n * </code>\n *\n * @param {?Element=} from The visible surface element.\n * @param {?Element=} to The surface element to be flipped.\n * @static\n */\nSurface.defaultTransition = function(from, to) {\n\tif (from) {\n\t\tfrom.style.display = 'none';\n\t\tfrom.classList.remove('flipped');\n\t}\n\tif (to) {\n\t\tto.style.display = 'block';\n\t\tto.classList.add('flipped');\n\t}\n};\n\nexport default Surface;\n"
        },
        {
          "id": 10,
          "identifier": "/Users/Liferay/trampo/senna.js/src/screen/HtmlScreen.js",
          "name": "./src/screen/HtmlScreen.js",
          "index": 18,
          "index2": 20,
          "size": 9941,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0
          ],
          "assets": [],
          "issuer": "/Users/Liferay/trampo/senna.js/src/senna.js",
          "issuerId": 13,
          "issuerName": "./src/senna.js",
          "profile": {
            "factory": 6,
            "building": 57,
            "dependencies": 399
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "reasons": [
            {
              "moduleId": 13,
              "moduleIdentifier": "/Users/Liferay/trampo/senna.js/src/senna.js",
              "module": "./src/senna.js",
              "moduleName": "./src/senna.js",
              "type": "harmony import",
              "userRequest": "./screen/HtmlScreen",
              "loc": "6:0-45"
            },
            {
              "moduleId": 15,
              "moduleIdentifier": "/Users/Liferay/trampo/senna.js/src/app/AppDataAttributeHandler.js",
              "module": "./src/app/AppDataAttributeHandler.js",
              "moduleName": "./src/app/AppDataAttributeHandler.js",
              "type": "harmony import",
              "userRequest": "../screen/HtmlScreen",
              "loc": "7:0-46"
            }
          ],
          "usedExports": [
            "default"
          ],
          "providedExports": [
            "default"
          ],
          "optimizationBailout": [],
          "depth": 1,
          "source": "'use strict';\n\nimport { getUid } from 'metal';\nimport { buildFragment, exitDocument, globalEval, globalEvalStyles, match } from 'metal-dom';\nimport CancellablePromise from 'metal-promise';\nimport globals from '../globals/globals';\nimport RequestScreen from './RequestScreen';\nimport Surface from '../surface/Surface';\nimport UA from 'metal-useragent';\nimport Uri from 'metal-uri';\nimport utils from '../utils/utils';\n\nclass HtmlScreen extends RequestScreen {\n\n\t/**\n\t * Screen class that perform a request and extracts surface contents from\n\t * the response content.\n\t * @constructor\n\t * @extends {RequestScreen}\n\t */\n\tconstructor() {\n\t\tsuper();\n\n\t\t/**\n\t\t * Holds the title selector. Relevant to extract the <code><title></code>\n\t\t * element from request fragments to use as the screen title.\n\t\t * @type {!string}\n\t\t * @default title\n\t\t * @protected\n\t\t */\n\t\tthis.titleSelector = 'title';\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tactivate() {\n\t\tsuper.activate();\n\t\tthis.releaseVirtualDocument();\n\t\tthis.pendingStyles = null;\n\t}\n\n\t/**\n\t * Allocates virtual document for content. After allocated virtual document\n\t * can be accessed by <code>this.virtualDocument</code>.\n\t * @param {!string} htmlString\n\t */\n\tallocateVirtualDocumentForContent(htmlString) {\n\t\tif (!this.virtualDocument) {\n\t\t\tthis.virtualDocument = globals.document.createElement('html');\n\t\t}\n\n\t\tthis.copyNodeAttributesFromContent_(htmlString, this.virtualDocument);\n\n\t\tthis.virtualDocument.innerHTML = htmlString;\n\t}\n\n\t/**\n\t * Customizes logic to append styles into document. Relevant to when\n\t * tracking a style by id make sure to re-positions the new style in the\n\t * same dom order.\n\t * @param {Element} newStyle\n\t */\n\tappendStyleIntoDocument_(newStyle) {\n\t\tvar isTemporaryStyle = match(newStyle, HtmlScreen.selectors.stylesTemporary);\n\t\tif (isTemporaryStyle) {\n\t\t\tthis.pendingStyles.push(newStyle);\n\t\t}\n\t\tif (newStyle.id) {\n\t\t\tvar styleInDoc = globals.document.getElementById(newStyle.id);\n\t\t\tif (styleInDoc) {\n\t\t\t\tstyleInDoc.parentNode.insertBefore(newStyle, styleInDoc.nextSibling);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\tglobals.document.head.appendChild(newStyle);\n\t}\n\n\t/**\n\t * If body is used as surface forces the requested documents to have same id\n\t * of the initial page.\n\t */\n\tassertSameBodyIdInVirtualDocument() {\n\t\tvar bodySurface = this.virtualDocument.querySelector('body');\n\t\tif (!globals.document.body.id) {\n\t\t\tglobals.document.body.id = 'senna_surface_' + getUid();\n\t\t}\n\t\tif (bodySurface) {\n\t\t\tbodySurface.id = globals.document.body.id;\n\t\t}\n\t}\n\n\t/**\n\t * Copies attributes from the <html> tag of content to the given node.\n\t */\n\tcopyNodeAttributesFromContent_(content, node) {\n\t\tcontent = content.replace(/[<]\\s*html/ig, '<senna');\n\t\tcontent = content.replace(/\\/html\\s*\\>/ig, '/senna>');\n\t\tnode.innerHTML = content;\n\t\tvar placeholder = node.querySelector('senna');\n\t\tif (placeholder) {\n\t\t\tutils.clearNodeAttributes(node);\n\t\t\tutils.copyNodeAttributes(placeholder, node);\n\t\t}\n\t}\n\n\t/**\n\t * @Override\n\t */\n\tdisposeInternal() {\n\t\tthis.disposePendingStyles();\n\t\tsuper.disposeInternal();\n\t}\n\n\t/**\n\t * Disposes pending styles if screen get disposed prior to its loading.\n\t */\n\tdisposePendingStyles() {\n\t\tif (this.pendingStyles) {\n\t\t\tthis.pendingStyles.forEach((style) => exitDocument(style));\n\t\t}\n\t}\n\n\t/**\n\t * @Override\n\t */\n\tevaluateScripts(surfaces) {\n\t\tvar evaluateTrackedScripts = this.evaluateTrackedResources_(\n\t\t\tglobalEval.runScriptsInElement, HtmlScreen.selectors.scripts,\n\t\t\tHtmlScreen.selectors.scriptsTemporary, HtmlScreen.selectors.scriptsPermanent);\n\n\t\treturn evaluateTrackedScripts.then(() => super.evaluateScripts(surfaces));\n\t}\n\n\t/**\n\t * @Override\n\t */\n\tevaluateStyles(surfaces) {\n\t\tthis.pendingStyles = [];\n\t\tvar evaluateTrackedStyles = this.evaluateTrackedResources_(\n\t\t\tglobalEvalStyles.runStylesInElement, HtmlScreen.selectors.styles,\n\t\t\tHtmlScreen.selectors.stylesTemporary, HtmlScreen.selectors.stylesPermanent,\n\t\t\tthis.appendStyleIntoDocument_.bind(this));\n\n\t\treturn evaluateTrackedStyles.then(() => super.evaluateStyles(surfaces));\n\t}\n\n\t/**\n\t * Evaluates tracked resources inside incoming fragment and remove existing\n\t * temporary resources.\n\t * @param {?function()} appendFn Function to append the node into document.\n\t * @param {!string} selector Selector used to find resources to track.\n\t * @param {!string} selectorTemporary Selector used to find temporary\n\t *     resources to track.\n\t * @param {!string} selectorPermanent Selector used to find permanent\n\t *     resources to track.\n\t * @param {!function} opt_appendResourceFn Optional function used to\n\t *     evaluate fragment containing resources.\n\t * @return {CancellablePromise} Deferred that waits resources evaluation to\n\t *     complete.\n\t * @private\n\t */\n\tevaluateTrackedResources_(evaluatorFn, selector, selectorTemporary, selectorPermanent, opt_appendResourceFn) {\n\t\tvar tracked = this.virtualQuerySelectorAll_(selector);\n\t\tvar temporariesInDoc = this.querySelectorAll_(selectorTemporary);\n\t\tvar permanentsInDoc = this.querySelectorAll_(selectorPermanent);\n\n\t\t// Adds permanent resources in document to cache.\n\t\tpermanentsInDoc.forEach((resource) => {\n\t\t\tvar resourceKey = this.getResourceKey_(resource);\n\t\t\tif (resourceKey) {\n\t\t\t\tHtmlScreen.permanentResourcesInDoc[resourceKey] = true;\n\t\t\t}\n\t\t});\n\n\t\tvar frag = buildFragment();\n\t\ttracked.forEach((resource) => {\n\t\t\tvar resourceKey = this.getResourceKey_(resource);\n\t\t\t// Do not load permanent resources if already in document.\n\t\t\tif (!HtmlScreen.permanentResourcesInDoc[resourceKey]) {\n\t\t\t\tfrag.appendChild(resource);\n\t\t\t}\n\t\t\t// If resource has key and is permanent add to cache.\n\t\t\tif (resourceKey && match(resource, selectorPermanent)) {\n\t\t\t\tHtmlScreen.permanentResourcesInDoc[resourceKey] = true;\n\t\t\t}\n\t\t});\n\n\t\treturn new CancellablePromise((resolve) => {\n\t\t\tevaluatorFn(frag, () => {\n\t\t\t\ttemporariesInDoc.forEach((resource) => exitDocument(resource));\n\t\t\t\tresolve();\n\t\t\t}, opt_appendResourceFn);\n\t\t});\n\t}\n\n\t/**\n\t * @Override\n\t */\n\tflip(surfaces) {\n\t\treturn super.flip(surfaces).then(() => {\n\t\t\tutils.clearNodeAttributes(document.documentElement);\n\t\t\tutils.copyNodeAttributes(this.virtualDocument, document.documentElement);\n\t\t});\n\t}\n\n\t/**\n\t * Extracts a key to identify the resource based on its attributes.\n\t * @param {Element} resource\n\t * @return {string} Extracted key based on resource attributes in order of\n\t *     preference: id, href, src.\n\t */\n\tgetResourceKey_(resource) {\n\t\treturn resource.id || resource.href || resource.src || '';\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tgetSurfaceContent(surfaceId) {\n\t\tvar surface = this.virtualDocument.querySelector('#' + surfaceId);\n\t\tif (surface) {\n\t\t\tvar defaultChild = surface.querySelector('#' + surfaceId + '-' + Surface.DEFAULT);\n\t\t\tif (defaultChild) {\n\t\t\t\treturn defaultChild.innerHTML;\n\t\t\t}\n\t\t\treturn surface.innerHTML; // If default content not found, use surface content\n\t\t}\n\t}\n\n\t/**\n\t * Gets the title selector.\n\t * @return {!string}\n\t */\n\tgetTitleSelector() {\n\t\treturn this.titleSelector;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tload(path) {\n\t\treturn super.load(path)\n\t\t\t.then(content => {\n\t\t\t\tthis.allocateVirtualDocumentForContent(content);\n\t\t\t\tthis.resolveTitleFromVirtualDocument();\n\t\t\t\tthis.assertSameBodyIdInVirtualDocument();\n\t\t\t\tif (UA.isIe) {\n\t\t\t\t\tthis.makeTemporaryStylesHrefsUnique_();\n\t\t\t\t}\n\t\t\t\treturn content;\n\t\t\t});\n\t}\n\n\t/**\n\t * Queries temporary styles from virtual document, and makes them unique.\n\t * This is necessary for caching and load event firing issues specific to\n\t * IE11. https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/7940171/\n\t */\n\tmakeTemporaryStylesHrefsUnique_() {\n\t\tvar temporariesInDoc = this.virtualQuerySelectorAll_(HtmlScreen.selectors.stylesTemporary);\n\t\ttemporariesInDoc.forEach((style) => this.replaceStyleAndMakeUnique_(style));\n\t}\n\n\t/**\n\t * Creates a new element from given, copies attributes, mutates href to be\n\t * unique to prevent caching and more than one load/error event from firing.\n\t */\n\treplaceStyleAndMakeUnique_(style) {\n\t\tif (style.href) {\n\t\t\tvar newStyle = globals.document.createElement(style.tagName);\n\t\t\tstyle.href = new Uri(style.href).makeUnique().toString();\n\t\t\tutils.copyNodeAttributes(style, newStyle);\n\t\t\tstyle.parentNode.replaceChild(newStyle, style);\n\t\t\tstyle.disabled = true;\n\t\t}\n\t}\n\n\t/**\n\t * Queries elements from virtual document and returns an array of elements.\n\t * @param {!string} selector\n\t * @return {array.<Element>}\n\t */\n\tvirtualQuerySelectorAll_(selector) {\n\t\treturn Array.prototype.slice.call(this.virtualDocument.querySelectorAll(selector));\n\t}\n\n\t/**\n\t * Queries elements from document and returns an array of elements.\n\t * @param {!string} selector\n\t * @return {array.<Element>}\n\t */\n\tquerySelectorAll_(selector) {\n\t\treturn Array.prototype.slice.call(globals.document.querySelectorAll(selector));\n\t}\n\n\t/**\n\t * Releases virtual document allocated for content.\n\t */\n\treleaseVirtualDocument() {\n\t\tthis.virtualDocument = null;\n\t}\n\n\t/**\n\t * Resolves title from allocated virtual document.\n\t */\n\tresolveTitleFromVirtualDocument() {\n\t\tvar title = this.virtualDocument.querySelector(this.titleSelector);\n\t\tif (title) {\n\t\t\tthis.setTitle(title.textContent.trim());\n\t\t}\n\t}\n\n\t/**\n\t * Sets the title selector.\n\t * @param {!string} titleSelector\n\t */\n\tsetTitleSelector(titleSelector) {\n\t\tthis.titleSelector = titleSelector;\n\t}\n\n}\n\n/**\n * Helper selectors for tracking resources.\n * @type {object}\n * @protected\n * @static\n */\nHtmlScreen.selectors = {\n\tscripts: 'script[data-senna-track]',\n\tscriptsPermanent: 'script[data-senna-track=\"permanent\"]',\n\tscriptsTemporary: 'script[data-senna-track=\"temporary\"]',\n\tstyles: 'style[data-senna-track],link[data-senna-track]',\n\tstylesPermanent: 'style[data-senna-track=\"permanent\"],link[data-senna-track=\"permanent\"]',\n\tstylesTemporary: 'style[data-senna-track=\"temporary\"],link[data-senna-track=\"temporary\"]'\n};\n\n/**\n * Caches permanent resource keys.\n * @type {object}\n * @protected\n * @static\n */\nHtmlScreen.permanentResourcesInDoc = {};\n\nexport default HtmlScreen;\n"
        },
        {
          "id": 11,
          "identifier": "/Users/Liferay/trampo/senna.js/src/screen/RequestScreen.js",
          "name": "./src/screen/RequestScreen.js",
          "index": 19,
          "index2": 19,
          "size": 7532,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0
          ],
          "assets": [],
          "issuer": "/Users/Liferay/trampo/senna.js/src/senna.js",
          "issuerId": 13,
          "issuerName": "./src/senna.js",
          "profile": {
            "factory": 6,
            "building": 63,
            "dependencies": 392
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "reasons": [
            {
              "moduleId": 10,
              "moduleIdentifier": "/Users/Liferay/trampo/senna.js/src/screen/HtmlScreen.js",
              "module": "./src/screen/HtmlScreen.js",
              "moduleName": "./src/screen/HtmlScreen.js",
              "type": "harmony import",
              "userRequest": "./RequestScreen",
              "loc": "7:0-44"
            },
            {
              "moduleId": 13,
              "moduleIdentifier": "/Users/Liferay/trampo/senna.js/src/senna.js",
              "module": "./src/senna.js",
              "moduleName": "./src/senna.js",
              "type": "harmony import",
              "userRequest": "./screen/RequestScreen",
              "loc": "7:0-51"
            }
          ],
          "usedExports": [
            "default"
          ],
          "providedExports": [
            "default"
          ],
          "optimizationBailout": [],
          "depth": 1,
          "source": "'use strict';\n\nimport { isDefAndNotNull } from 'metal';\nimport Ajax from 'metal-ajax';\nimport { MultiMap } from 'metal-structs';\nimport CancellablePromise from 'metal-promise';\nimport errors from '../errors/errors';\nimport utils from '../utils/utils';\nimport globals from '../globals/globals';\nimport Screen from './Screen';\nimport Uri from 'metal-uri';\nimport UA from 'metal-useragent';\n\nclass RequestScreen extends Screen {\n\n\t/**\n\t * Request screen abstract class to perform io operations on descendant\n\t * screens.\n\t * @constructor\n\t * @extends {Screen}\n\t */\n\tconstructor() {\n\t\tsuper();\n\n\t\t/**\n\t\t * @inheritDoc\n\t\t * @default true\n\t\t */\n\t\tthis.cacheable = true;\n\n\t\t/**\n\t\t * Holds default http headers to set on request.\n\t\t * @type {?Object=}\n\t\t * @default {\n\t\t *   'X-PJAX': 'true',\n\t\t *   'X-Requested-With': 'XMLHttpRequest'\n\t\t * }\n\t\t * @protected\n\t\t */\n\t\tthis.httpHeaders = {\n\t\t\t'X-PJAX': 'true',\n\t\t\t'X-Requested-With': 'XMLHttpRequest'\n\t\t};\n\n\t\t/**\n\t\t * Holds default http method to perform the request.\n\t\t * @type {!string}\n\t\t * @default RequestScreen.GET\n\t\t * @protected\n\t\t */\n\t\tthis.httpMethod = RequestScreen.GET;\n\n\t\t/**\n\t\t * Holds the XHR object responsible for the request.\n\t\t * @type {XMLHttpRequest}\n\t\t * @default null\n\t\t * @protected\n\t\t */\n\t\tthis.request = null;\n\n\t\t/**\n\t\t * Holds the request timeout in milliseconds.\n\t\t * @type {!number}\n\t\t * @default 30000\n\t\t * @protected\n\t\t */\n\t\tthis.timeout = 30000;\n\t}\n\n\t/**\n\t * Asserts that response status code is valid.\n\t * @param {number} status\n\t * @protected\n\t */\n\tassertValidResponseStatusCode(status) {\n\t\tif (!this.isValidResponseStatusCode(status)) {\n\t\t\tvar error = new Error(errors.INVALID_STATUS);\n\t\t\terror.invalidStatus = true;\n\t\t\terror.statusCode = status;\n\t\t\tthrow error;\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tbeforeUpdateHistoryPath(path) {\n\t\tvar redirectPath = this.getRequestPath();\n\t\tif (redirectPath && redirectPath !== path) {\n\t\t\treturn redirectPath;\n\t\t}\n\t\treturn path;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tbeforeUpdateHistoryState(state) {\n\t\t// If state is ours and navigate to post-without-redirect-get set\n\t\t// history state to null, that way Senna will reload the page on\n\t\t// popstate since it cannot predict post data.\n\t\tif (state.senna && state.form && state.redirectPath === state.path) {\n\t\t\treturn null;\n\t\t}\n\t\treturn state;\n\t}\n\n\t/**\n\t * Formats load path before invoking ajax call.\n\t * @param {string} path\n\t * @return {string} Formatted path;\n\t * @protected\n\t */\n\tformatLoadPath(path) {\n\t\tvar uri = new Uri(path);\n\n\t\turi.setHostname(globals.window.location.hostname);\n\t\turi.setProtocol(globals.window.location.protocol);\n\n\t\tif (globals.window.location.port) {\n\t\t\turi.setPort(globals.window.location.port);\n\t\t}\n\n\t\tif (UA.isIeOrEdge && this.httpMethod === RequestScreen.GET) {\n\t\t\treturn uri.makeUnique().toString();\n\t\t}\n\n\t\treturn uri.toString();\n\t}\n\n\t/**\n\t * Gets the http headers.\n\t * @return {?Object=}\n\t */\n\tgetHttpHeaders() {\n\t\treturn this.httpHeaders;\n\t}\n\n\t/**\n\t * Gets the http method.\n\t * @return {!string}\n\t */\n\tgetHttpMethod() {\n\t\treturn this.httpMethod;\n\t}\n\n\t/**\n\t * Gets request path.\n\t * @return {string=}\n\t */\n\tgetRequestPath() {\n\t\tvar request = this.getRequest();\n\t\tif (request) {\n\t\t\tvar requestPath = request.requestPath;\n\t\t\tvar responseUrl = this.maybeExtractResponseUrlFromRequest(request);\n\t\t\tif (responseUrl) {\n\t\t\t\trequestPath = responseUrl;\n\t\t\t}\n\t\t\tif (UA.isIeOrEdge && this.httpMethod === RequestScreen.GET) {\n\t\t\t\trequestPath = new Uri(requestPath).removeUnique().toString();\n\t\t\t}\n\t\t\treturn utils.getUrlPath(requestPath);\n\t\t}\n\t\treturn null;\n\t}\n\n\t/**\n\t * Gets the request object.\n\t * @return {?Object}\n\t */\n\tgetRequest() {\n\t\treturn this.request;\n\t}\n\n\t/**\n\t * Gets the request timeout.\n\t * @return {!number}\n\t */\n\tgetTimeout() {\n\t\treturn this.timeout;\n\t}\n\n\t/**\n\t * Checks if response succeeded. Any status code 2xx or 3xx is considered\n\t * valid.\n\t * @param {number} statusCode\n\t */\n\tisValidResponseStatusCode(statusCode) {\n\t\treturn statusCode >= 200 && statusCode <= 399;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tload(path) {\n\t\tconst cache = this.getCache();\n\t\tif (isDefAndNotNull(cache)) {\n\t\t\treturn CancellablePromise.resolve(cache);\n\t\t}\n\t\tlet body = null;\n\t\tlet httpMethod = this.httpMethod;\n\t\tconst headers = new MultiMap();\n\t\tObject.keys(this.httpHeaders).forEach(header => headers.add(header, this.httpHeaders[header]));\n\t\tif (globals.capturedFormElement) {\n\t\t\tbody = new FormData(globals.capturedFormElement);\n\t\t\tthis.maybeAppendSubmitButtonValue_(body);\n\t\t\thttpMethod = RequestScreen.POST;\n\t\t\tif (UA.isIeOrEdge) {\n\t\t\t\theaders.add('If-None-Match', '\"0\"');\n\t\t\t}\n\t\t}\n\t\tconst requestPath = this.formatLoadPath(path);\n\t\treturn Ajax\n\t\t\t.request(requestPath, httpMethod, body, headers, null, this.timeout)\n\t\t\t.then(xhr => {\n\t\t\t\tthis.setRequest(xhr);\n\t\t\t\tthis.assertValidResponseStatusCode(xhr.status);\n\t\t\t\tif (httpMethod === RequestScreen.GET && this.isCacheable()) {\n\t\t\t\t\tthis.addCache(xhr.responseText);\n\t\t\t\t}\n\t\t\t\txhr.requestPath = requestPath;\n\t\t\t\treturn xhr.responseText;\n\t\t\t})\n\t\t\t.catch((reason) => {\n\t\t\t\tswitch (reason.message) {\n\t\t\t\t\tcase errors.REQUEST_TIMEOUT:\n\t\t\t\t\t\treason.timeout = true;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase errors.REQUEST_ERROR:\n\t\t\t\t\t\treason.requestError = true;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase errors.REQUEST_PREMATURE_TERMINATION:\n\t\t\t\t\t\treason.requestError = true;\n\t\t\t\t\t\treason.requestPrematureTermination = true;\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tthrow reason;\n\t\t\t});\n\t}\n\n\t/**\n\t * Adds aditional data to the body of the request in case a submit button\n\t * is captured during form submission.\n\t * @param {!FormData} body The FormData containing the request body.\n\t * @protected\n\t */\n\tmaybeAppendSubmitButtonValue_(body) {\n\t\tconst button = globals.capturedFormButtonElement;\n\t\tif (button && button.name) {\n\t\t\tbody.append(button.name, button.value);\n\t\t}\n\t}\n\n\t/**\n\t * The following method tries to extract the response url value by checking\n\t * the custom response header 'X-Request-URL' if proper value is not present\n\t * in XMLHttpRequest. The value of responseURL will be the final URL\n\t * obtained after any redirects. Internet Explorer, Edge and Safari <= 7\n\t * does not yet support the feature. For more information see:\n\t * https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/responseURL\n\t * https://xhr.spec.whatwg.org/#the-responseurl-attribute\n\t * @param {XMLHttpRequest} request\n\t * @return {?string} Response url best match.\n\t */\n\tmaybeExtractResponseUrlFromRequest(request) {\n\t\tvar responseUrl = request.responseURL;\n\t\tif (responseUrl) {\n\t\t\treturn responseUrl;\n\t\t}\n\t\treturn request.getResponseHeader(RequestScreen.X_REQUEST_URL_HEADER);\n\t}\n\n\t/**\n\t * Sets the http headers.\n\t * @param {?Object=} httpHeaders\n\t */\n\tsetHttpHeaders(httpHeaders) {\n\t\tthis.httpHeaders = httpHeaders;\n\t}\n\n\t/**\n\t * Sets the http method.\n\t * @param {!string} httpMethod\n\t */\n\tsetHttpMethod(httpMethod) {\n\t\tthis.httpMethod = httpMethod.toLowerCase();\n\t}\n\n\t/**\n\t * Sets the request object.\n\t * @param {?Object} request\n\t */\n\tsetRequest(request) {\n\t\tthis.request = request;\n\t}\n\n\t/**\n\t * Sets the request timeout in milliseconds.\n\t * @param {!number} timeout\n\t */\n\tsetTimeout(timeout) {\n\t\tthis.timeout = timeout;\n\t}\n\n}\n\n/**\n * Holds value for method get.\n * @type {string}\n * @default 'get'\n * @static\n */\nRequestScreen.GET = 'get';\n\n/**\n * Holds value for method post.\n * @type {string}\n * @default 'post'\n * @static\n */\nRequestScreen.POST = 'post';\n\n/**\n * Fallback http header to retrieve response request url.\n * @type {string}\n * @default 'X-Request-URL'\n * @static\n */\nRequestScreen.X_REQUEST_URL_HEADER = 'X-Request-URL';\n\nexport default RequestScreen;\n"
        },
        {
          "id": 12,
          "identifier": "external \"metal-useragent\"",
          "name": "external \"metal-useragent\"",
          "index": 23,
          "index2": 18,
          "size": 42,
          "cacheable": false,
          "built": false,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0
          ],
          "assets": [],
          "issuer": "/Users/Liferay/trampo/senna.js/src/screen/HtmlScreen.js",
          "issuerId": 10,
          "issuerName": "./src/screen/HtmlScreen.js",
          "profile": {
            "factory": 0,
            "building": 0
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "reasons": [
            {
              "moduleId": 10,
              "moduleIdentifier": "/Users/Liferay/trampo/senna.js/src/screen/HtmlScreen.js",
              "module": "./src/screen/HtmlScreen.js",
              "moduleName": "./src/screen/HtmlScreen.js",
              "type": "harmony import",
              "userRequest": "metal-useragent",
              "loc": "9:0-33"
            },
            {
              "moduleId": 11,
              "moduleIdentifier": "/Users/Liferay/trampo/senna.js/src/screen/RequestScreen.js",
              "module": "./src/screen/RequestScreen.js",
              "moduleName": "./src/screen/RequestScreen.js",
              "type": "harmony import",
              "userRequest": "metal-useragent",
              "loc": "12:0-33"
            }
          ],
          "usedExports": [
            "default"
          ],
          "providedExports": null,
          "optimizationBailout": [],
          "depth": 2
        },
        {
          "id": 13,
          "identifier": "/Users/Liferay/trampo/senna.js/src/senna.js",
          "name": "./src/senna.js",
          "index": 0,
          "index2": 23,
          "size": 420,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0
          ],
          "assets": [],
          "issuer": null,
          "issuerId": null,
          "issuerName": null,
          "profile": {
            "factory": 13,
            "building": 11
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "reasons": [],
          "usedExports": true,
          "providedExports": [
            "default",
            "dataAttributeHandler",
            "utils",
            "App",
            "HtmlScreen",
            "Route",
            "RequestScreen",
            "Screen"
          ],
          "optimizationBailout": [],
          "depth": 0,
          "source": "'use strict';\n\nimport utils from './utils/utils';\nimport dataAttributeHandler from './app/dataAttributeHandler';\nimport App from './app/App';\nimport HtmlScreen from './screen/HtmlScreen';\nimport RequestScreen from './screen/RequestScreen';\nimport Route from './route/Route';\nimport Screen from './screen/Screen';\n\nexport default App;\nexport { dataAttributeHandler, utils, App, HtmlScreen, Route, RequestScreen, Screen };"
        },
        {
          "id": 14,
          "identifier": "/Users/Liferay/trampo/senna.js/src/app/dataAttributeHandler.js",
          "name": "./src/app/dataAttributeHandler.js",
          "index": 4,
          "index2": 22,
          "size": 453,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0
          ],
          "assets": [],
          "issuer": "/Users/Liferay/trampo/senna.js/src/senna.js",
          "issuerId": 13,
          "issuerName": "./src/senna.js",
          "profile": {
            "factory": 5,
            "building": 17,
            "dependencies": 439
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "reasons": [
            {
              "moduleId": 13,
              "moduleIdentifier": "/Users/Liferay/trampo/senna.js/src/senna.js",
              "module": "./src/senna.js",
              "moduleName": "./src/senna.js",
              "type": "harmony import",
              "userRequest": "./app/dataAttributeHandler",
              "loc": "4:0-62"
            }
          ],
          "usedExports": [
            "default"
          ],
          "providedExports": [
            "default"
          ],
          "optimizationBailout": [],
          "depth": 1,
          "source": "'use strict';\n\nimport globals from '../globals/globals';\nimport AppDataAttributeHandler from './AppDataAttributeHandler';\n\n/**\n * Data attribute handler.\n * @type {AppDataAttributeHandler}\n */\nvar dataAttributeHandler = new AppDataAttributeHandler();\n\nglobals.document.addEventListener('DOMContentLoaded', function() {\n\tdataAttributeHandler.setBaseElement(globals.document.body);\n\tdataAttributeHandler.handle();\n});\n\nexport default dataAttributeHandler;"
        },
        {
          "id": 15,
          "identifier": "/Users/Liferay/trampo/senna.js/src/app/AppDataAttributeHandler.js",
          "name": "./src/app/AppDataAttributeHandler.js",
          "index": 5,
          "index2": 21,
          "size": 6509,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0
          ],
          "assets": [],
          "issuer": "/Users/Liferay/trampo/senna.js/src/app/dataAttributeHandler.js",
          "issuerId": 14,
          "issuerName": "./src/app/dataAttributeHandler.js",
          "profile": {
            "factory": 234,
            "building": 212,
            "dependencies": 1
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "reasons": [
            {
              "moduleId": 14,
              "moduleIdentifier": "/Users/Liferay/trampo/senna.js/src/app/dataAttributeHandler.js",
              "module": "./src/app/dataAttributeHandler.js",
              "moduleName": "./src/app/dataAttributeHandler.js",
              "type": "harmony import",
              "userRequest": "./AppDataAttributeHandler",
              "loc": "4:0-64"
            }
          ],
          "usedExports": [
            "default"
          ],
          "providedExports": [
            "default"
          ],
          "optimizationBailout": [],
          "depth": 2,
          "source": "'use strict';\n\nimport { Disposable, getUid, isDefAndNotNull, isElement, object } from 'metal';\nimport dataAttributes from './dataAttributes';\nimport globals from '../globals/globals';\nimport App from './App';\nimport HtmlScreen from '../screen/HtmlScreen';\nimport Route from '../route/Route';\n\nclass AppDataAttributeHandler extends Disposable {\n\n\t/**\n\t * Initilizes App, register surfaces and routes from data attributes.\n\t * @constructor\n\t */\n\tconstructor() {\n\t\tsuper();\n\n\t\t/**\n\t\t * Holds the app reference initialized by data attributes.\n\t\t * @type {App}\n\t\t * @default null\n\t\t */\n\t\tthis.app = null;\n\n\t\t/**\n\t\t * Holds the base element to search initialization data attributes. This\n\t\t * element is the container used to enable initialization based on the\n\t\t * presence of `data-senna` attribute.\n\t\t * @type {Element}\n\t\t * @default null\n\t\t */\n\t\tthis.baseElement = null;\n\t}\n\n\t/**\n\t * Inits application based on information scanned from document.\n\t */\n\thandle() {\n\t\tif (!isElement(this.baseElement)) {\n\t\t\tthrow new Error('Senna data attribute handler base element ' +\n\t\t\t\t'not set or invalid, try setting a valid element that ' +\n\t\t\t\t'contains a `data-senna` attribute.');\n\t\t}\n\n\t\tif (!this.baseElement.hasAttribute(dataAttributes.senna)) {\n\t\t\tconsole.log('Senna was not initialized from data attributes. ' +\n\t\t\t\t'In order to enable its usage from data attributes try setting ' +\n\t\t\t\t'in the base element, e.g. `<body data-senna>`.');\n\t\t\treturn;\n\t\t}\n\n\t\tif (this.app) {\n\t\t\tthrow new Error('Senna app was already initialized.');\n\t\t}\n\n\t\tconsole.log('Senna initialized from data attribute.');\n\n\t\tthis.app = new App();\n\t\tthis.maybeAddRoutes_();\n\t\tthis.maybeAddSurfaces_();\n\t\tthis.maybeSetBasePath_();\n\t\tthis.maybeSetLinkSelector_();\n\t\tthis.maybeSetLoadingCssClass_();\n\t\tthis.maybeSetUpdateScrollPosition_();\n\t\tthis.maybeDispatch_();\n\t}\n\n\t/**\n\t * Disposes of this instance's object references.\n\t * @override\n\t */\n\tdisposeInternal() {\n\t\tif (this.app) {\n\t\t\tthis.app.dispose();\n\t\t}\n\t}\n\n\t/**\n\t * Gets the app reference.\n\t * @return {App}\n\t */\n\tgetApp() {\n\t\treturn this.app;\n\t}\n\n\t/**\n\t * Gets the base element.\n\t * @return {Element} baseElement\n\t */\n\tgetBaseElement() {\n\t\treturn this.baseElement;\n\t}\n\n\t/**\n\t * Maybe adds app routes from link elements that are `senna-route`.\n\t */\n\tmaybeAddRoutes_() {\n\t\tvar routesSelector = 'link[rel=\"senna-route\"]';\n\t\tthis.querySelectorAllAsArray_(routesSelector).forEach((link) => this.maybeParseLinkRoute_(link));\n\t\tif (!this.app.hasRoutes()) {\n\t\t\tthis.app.addRoutes(new Route(/.*/, HtmlScreen));\n\t\t\tconsole.log('Senna can\\'t find route elements, adding default.');\n\t\t}\n\t}\n\n\t/**\n\t * Maybe adds app surfaces by scanning `data-senna-surface` data attribute.\n\t */\n\tmaybeAddSurfaces_() {\n\t\tvar surfacesSelector = '[' + dataAttributes.surface + ']';\n\t\tthis.querySelectorAllAsArray_(surfacesSelector).forEach((surfaceElement) => {\n\t\t\tthis.updateElementIdIfSpecialSurface_(surfaceElement);\n\t\t\tthis.app.addSurfaces(surfaceElement.id);\n\t\t});\n\t}\n\n\t/**\n\t * Dispatches app navigation to the current path when initializes.\n\t */\n\tmaybeDispatch_() {\n\t\tif (this.baseElement.hasAttribute(dataAttributes.dispatch)) {\n\t\t\tthis.app.dispatch();\n\t\t}\n\t}\n\n\t/**\n\t * Adds app route by parsing valid link elements. A valid link element is of\n\t * the kind `rel=\"senna-route\"`.\n\t * @param {Element} link\n\t */\n\tmaybeParseLinkRoute_(link) {\n\t\tvar route = new Route(this.maybeParseLinkRoutePath_(link), this.maybeParseLinkRouteHandler_(link));\n\t\tthis.app.addRoutes(route);\n\t\tconsole.log('Senna scanned route ' + route.getPath());\n\t}\n\n\t/**\n\t * Maybe parse link route handler.\n\t * @param {Element} link\n\t * @return {?string}\n\t */\n\tmaybeParseLinkRouteHandler_(link) {\n\t\tvar handler = link.getAttribute('type');\n\t\tif (isDefAndNotNull(handler)) {\n\t\t\thandler = object.getObjectByName(handler);\n\t\t}\n\t\treturn handler;\n\t}\n\n\t/**\n\t * Maybe parse link route path.\n\t * @param {Element} link\n\t * @return {?string}\n\t */\n\tmaybeParseLinkRoutePath_(link) {\n\t\tvar path = link.getAttribute('href');\n\t\tif (isDefAndNotNull(path)) {\n\t\t\tif (path.indexOf('regex:') === 0) {\n\t\t\t\tpath = new RegExp(path.substring(6));\n\t\t\t}\n\t\t}\n\t\treturn path;\n\t}\n\n\t/**\n\t * Maybe sets app base path from `data-senna-base-path` data attribute.\n\t */\n\tmaybeSetBasePath_() {\n\t\tvar basePath = this.baseElement.getAttribute(dataAttributes.basePath);\n\t\tif (isDefAndNotNull(basePath)) {\n\t\t\tthis.app.setBasePath(basePath);\n\t\t\tconsole.log('Senna scanned base path ' + basePath);\n\t\t}\n\t}\n\n\t/**\n\t * Maybe sets app link selector from `data-senna-link-selector` data\n\t * attribute.\n\t */\n\tmaybeSetLinkSelector_() {\n\t\tvar linkSelector = this.baseElement.getAttribute(dataAttributes.linkSelector);\n\t\tif (isDefAndNotNull(linkSelector)) {\n\t\t\tthis.app.setLinkSelector(linkSelector);\n\t\t\tconsole.log('Senna scanned link selector ' + linkSelector);\n\t\t}\n\t}\n\n\t/**\n\t * Maybe sets app link loading css class from `data-senna-loading-css-class`\n\t * data attribute.\n\t */\n\tmaybeSetLoadingCssClass_() {\n\t\tvar loadingCssClass = this.baseElement.getAttribute(dataAttributes.loadingCssClass);\n\t\tif (isDefAndNotNull(loadingCssClass)) {\n\t\t\tthis.app.setLoadingCssClass(loadingCssClass);\n\t\t\tconsole.log('Senna scanned loading css class ' + loadingCssClass);\n\t\t}\n\t}\n\n\t/**\n\t * Maybe sets app update scroll position from\n\t * `data-senna-update-scroll-position` data attribute.\n\t */\n\tmaybeSetUpdateScrollPosition_() {\n\t\tvar updateScrollPosition = this.baseElement.getAttribute(dataAttributes.updateScrollPosition);\n\t\tif (isDefAndNotNull(updateScrollPosition)) {\n\t\t\tif (updateScrollPosition === 'false') {\n\t\t\t\tthis.app.setUpdateScrollPosition(false);\n\t\t\t} else {\n\t\t\t\tthis.app.setUpdateScrollPosition(true);\n\t\t\t}\n\t\t\tconsole.log('Senna scanned update scroll position ' + updateScrollPosition);\n\t\t}\n\t}\n\n\t/**\n\t * Queries elements from document and returns an array of elements.\n\t * @param {!string} selector\n\t * @return {array.<Element>}\n\t */\n\tquerySelectorAllAsArray_(selector) {\n\t\treturn Array.prototype.slice.call(globals.document.querySelectorAll(selector));\n\t}\n\n\t/**\n\t * Updates element id if handled as special surface element. Some surfaces\n\t * are slightly different from others, like when threating <code>body</code>\n\t * as surface.\n\t * @param {Element} element\n\t */\n\tupdateElementIdIfSpecialSurface_(element) {\n\t\tif (!element.id && element === globals.document.body) {\n\t\t\telement.id = 'senna_surface_' + getUid();\n\t\t}\n\t}\n\n\t/**\n\t * Sets the base element.\n\t * @param {Element} baseElement\n\t */\n\tsetBaseElement(baseElement) {\n\t\tthis.baseElement = baseElement;\n\t}\n\n}\n\nexport default AppDataAttributeHandler;\n"
        },
        {
          "id": 16,
          "identifier": "/Users/Liferay/trampo/senna.js/src/app/dataAttributes.js",
          "name": "./src/app/dataAttributes.js",
          "index": 7,
          "index2": 4,
          "size": 309,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0
          ],
          "assets": [],
          "issuer": "/Users/Liferay/trampo/senna.js/src/app/AppDataAttributeHandler.js",
          "issuerId": 15,
          "issuerName": "./src/app/AppDataAttributeHandler.js",
          "profile": {
            "factory": 10,
            "building": 711
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "reasons": [
            {
              "moduleId": 15,
              "moduleIdentifier": "/Users/Liferay/trampo/senna.js/src/app/AppDataAttributeHandler.js",
              "module": "./src/app/AppDataAttributeHandler.js",
              "moduleName": "./src/app/AppDataAttributeHandler.js",
              "type": "harmony import",
              "userRequest": "./dataAttributes",
              "loc": "4:0-46"
            }
          ],
          "usedExports": [
            "default"
          ],
          "providedExports": [
            "default"
          ],
          "optimizationBailout": [],
          "depth": 3,
          "source": "'use strict';\n\nexport default {\n\tbasePath: 'data-senna-base-path',\n\tlinkSelector: 'data-senna-link-selector',\n\tloadingCssClass: 'data-senna-loading-css-class',\n\tsenna: 'data-senna',\n\tdispatch: 'data-senna-dispatch',\n\tsurface: 'data-senna-surface',\n\tupdateScrollPosition: 'data-senna-update-scroll-position'\n};"
        },
        {
          "id": 17,
          "identifier": "external \"metal-events\"",
          "name": "external \"metal-events\"",
          "index": 10,
          "index2": 6,
          "size": 42,
          "cacheable": false,
          "built": false,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0
          ],
          "assets": [],
          "issuer": "/Users/Liferay/trampo/senna.js/src/app/App.js",
          "issuerId": 8,
          "issuerName": "./src/app/App.js",
          "profile": {
            "factory": 0,
            "building": 0
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "reasons": [
            {
              "moduleId": 8,
              "moduleIdentifier": "/Users/Liferay/trampo/senna.js/src/app/App.js",
              "module": "./src/app/App.js",
              "moduleName": "./src/app/App.js",
              "type": "harmony import",
              "userRequest": "metal-events",
              "loc": "5:0-58"
            }
          ],
          "usedExports": [
            "EventEmitter",
            "EventHandler"
          ],
          "providedExports": null,
          "optimizationBailout": [],
          "depth": 2
        },
        {
          "id": 18,
          "identifier": "external \"metal-debounce\"",
          "name": "external \"metal-debounce\"",
          "index": 12,
          "index2": 8,
          "size": 42,
          "cacheable": false,
          "built": false,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0
          ],
          "assets": [],
          "issuer": "/Users/Liferay/trampo/senna.js/src/app/App.js",
          "issuerId": 8,
          "issuerName": "./src/app/App.js",
          "profile": {
            "factory": 0,
            "building": 0
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "reasons": [
            {
              "moduleId": 8,
              "moduleIdentifier": "/Users/Liferay/trampo/senna.js/src/app/App.js",
              "module": "./src/app/App.js",
              "moduleName": "./src/app/App.js",
              "type": "harmony import",
              "userRequest": "metal-debounce",
              "loc": "7:0-38"
            }
          ],
          "usedExports": [
            "default"
          ],
          "providedExports": null,
          "optimizationBailout": [],
          "depth": 2
        },
        {
          "id": 19,
          "identifier": "external \"metal-path-parser\"",
          "name": "external \"metal-path-parser\"",
          "index": 14,
          "index2": 9,
          "size": 42,
          "cacheable": false,
          "built": false,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0
          ],
          "assets": [],
          "issuer": "/Users/Liferay/trampo/senna.js/src/route/Route.js",
          "issuerId": 6,
          "issuerName": "./src/route/Route.js",
          "profile": {
            "factory": 0,
            "building": 0
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "reasons": [
            {
              "moduleId": 6,
              "moduleIdentifier": "/Users/Liferay/trampo/senna.js/src/route/Route.js",
              "module": "./src/route/Route.js",
              "moduleName": "./src/route/Route.js",
              "type": "harmony import",
              "userRequest": "metal-path-parser",
              "loc": "4:0-64"
            }
          ],
          "usedExports": [
            "extractData",
            "parse",
            "toRegex"
          ],
          "providedExports": null,
          "optimizationBailout": [],
          "depth": 2
        },
        {
          "id": 20,
          "identifier": "/Users/Liferay/trampo/senna.js/src/cacheable/Cacheable.js",
          "name": "./src/cacheable/Cacheable.js",
          "index": 16,
          "index2": 11,
          "size": 1394,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0
          ],
          "assets": [],
          "issuer": "/Users/Liferay/trampo/senna.js/src/screen/Screen.js",
          "issuerId": 7,
          "issuerName": "./src/screen/Screen.js",
          "profile": {
            "factory": 390,
            "building": 13,
            "dependencies": 0
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "reasons": [
            {
              "moduleId": 7,
              "moduleIdentifier": "/Users/Liferay/trampo/senna.js/src/screen/Screen.js",
              "module": "./src/screen/Screen.js",
              "moduleName": "./src/screen/Screen.js",
              "type": "harmony import",
              "userRequest": "../cacheable/Cacheable",
              "loc": "5:0-47"
            }
          ],
          "usedExports": [
            "default"
          ],
          "providedExports": [
            "default"
          ],
          "optimizationBailout": [],
          "depth": 2,
          "source": "'use strict';\n\nimport { Disposable } from 'metal';\n\nclass Cacheable extends Disposable {\n\n\t/**\n\t * Abstract class for defining cacheable behavior.\n\t * @constructor\n\t */\n\tconstructor() {\n\t\tsuper();\n\n\t\t/**\n\t\t * Holds the cached data.\n\t\t * @type {!Object}\n\t\t * @default null\n\t\t * @protected\n\t\t */\n\t\tthis.cache = null;\n\n\t\t/**\n\t\t * Holds whether class is cacheable.\n\t\t * @type {boolean}\n\t\t * @default false\n\t\t * @protected\n\t\t */\n\t\tthis.cacheable = false;\n\t}\n\n\t/**\n\t * Adds content to the cache.\n\t * @param {string} content Content to be cached.\n\t * @chainable\n\t */\n\taddCache(content) {\n\t\tif (this.cacheable) {\n\t\t\tthis.cache = content;\n\t\t}\n\t\treturn this;\n\t}\n\n\t/**\n\t * Clears the cache.\n\t * @chainable\n\t */\n\tclearCache() {\n\t\tthis.cache = null;\n\t\treturn this;\n\t}\n\n\t/**\n\t * Disposes of this instance's object references.\n\t * @override\n\t */\n\tdisposeInternal() {\n\t\tthis.clearCache();\n\t}\n\n\t/**\n\t * Gets the cached content.\n\t * @return {Object} Cached content.\n\t * @protected\n\t */\n\tgetCache() {\n\t\treturn this.cache;\n\t}\n\n\t/**\n\t * Whether the class is cacheable.\n\t * @return {boolean} Returns true when class is cacheable, false otherwise.\n\t */\n\tisCacheable() {\n\t\treturn this.cacheable;\n\t}\n\n\t/**\n\t * Sets whether the class is cacheable.\n\t * @param {boolean} cacheable\n\t */\n\tsetCacheable(cacheable) {\n\t\tif (!cacheable) {\n\t\t\tthis.clearCache();\n\t\t}\n\t\tthis.cacheable = cacheable;\n\t}\n\n}\n\nexport default Cacheable;\n"
        },
        {
          "id": 21,
          "identifier": "external \"metal-ajax\"",
          "name": "external \"metal-ajax\"",
          "index": 20,
          "index2": 15,
          "size": 42,
          "cacheable": false,
          "built": false,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0
          ],
          "assets": [],
          "issuer": "/Users/Liferay/trampo/senna.js/src/screen/RequestScreen.js",
          "issuerId": 11,
          "issuerName": "./src/screen/RequestScreen.js",
          "profile": {
            "factory": 0,
            "building": 0
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "reasons": [
            {
              "moduleId": 11,
              "moduleIdentifier": "/Users/Liferay/trampo/senna.js/src/screen/RequestScreen.js",
              "module": "./src/screen/RequestScreen.js",
              "moduleName": "./src/screen/RequestScreen.js",
              "type": "harmony import",
              "userRequest": "metal-ajax",
              "loc": "4:0-30"
            }
          ],
          "usedExports": [
            "default"
          ],
          "providedExports": null,
          "optimizationBailout": [],
          "depth": 2
        },
        {
          "id": 22,
          "identifier": "external \"metal-structs\"",
          "name": "external \"metal-structs\"",
          "index": 21,
          "index2": 16,
          "size": 42,
          "cacheable": false,
          "built": false,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0
          ],
          "assets": [],
          "issuer": "/Users/Liferay/trampo/senna.js/src/screen/RequestScreen.js",
          "issuerId": 11,
          "issuerName": "./src/screen/RequestScreen.js",
          "profile": {
            "factory": 0,
            "building": 0
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "reasons": [
            {
              "moduleId": 11,
              "moduleIdentifier": "/Users/Liferay/trampo/senna.js/src/screen/RequestScreen.js",
              "module": "./src/screen/RequestScreen.js",
              "moduleName": "./src/screen/RequestScreen.js",
              "type": "harmony import",
              "userRequest": "metal-structs",
              "loc": "5:0-41"
            }
          ],
          "usedExports": [
            "MultiMap"
          ],
          "providedExports": null,
          "optimizationBailout": [],
          "depth": 2
        },
        {
          "id": 23,
          "identifier": "/Users/Liferay/trampo/senna.js/src/errors/errors.js",
          "name": "./src/errors/errors.js",
          "index": 22,
          "index2": 17,
          "size": 599,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0
          ],
          "assets": [],
          "issuer": "/Users/Liferay/trampo/senna.js/src/screen/RequestScreen.js",
          "issuerId": 11,
          "issuerName": "./src/screen/RequestScreen.js",
          "profile": {
            "factory": 393,
            "building": 12
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "reasons": [
            {
              "moduleId": 11,
              "moduleIdentifier": "/Users/Liferay/trampo/senna.js/src/screen/RequestScreen.js",
              "module": "./src/screen/RequestScreen.js",
              "moduleName": "./src/screen/RequestScreen.js",
              "type": "harmony import",
              "userRequest": "../errors/errors",
              "loc": "7:0-38"
            }
          ],
          "usedExports": [
            "default"
          ],
          "providedExports": [
            "default"
          ],
          "optimizationBailout": [],
          "depth": 2,
          "source": "'use strict';\n\n/**\n * Holds value error messages.\n * @const\n */\nclass errors {\n}\n\n/**\n * Invalid status error message.\n * @type {string}\n * @static\n */\nerrors.INVALID_STATUS = 'Invalid status code';\n\n/**\n * Request error message.\n * @type {string}\n * @static\n */\nerrors.REQUEST_ERROR = 'Request error';\n\n/**\n * Request timeout error message.\n * @type {string}\n * @static\n */\nerrors.REQUEST_TIMEOUT = 'Request timeout';\n\n/**\n * Request is blocked by CORS issue message.\n * @type {string}\n * @static\n */\nerrors.REQUEST_PREMATURE_TERMINATION = 'Request terminated prematurely';\n\nexport default errors;\n"
        }
      ],
      "filteredModules": 0,
      "children": []
    }
  ]
}
Webpack Bundle Analyzer is started at http://127.0.0.1:8888
Use Ctrl+C to close it
